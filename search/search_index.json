{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to iAPS Documentation","text":"<p>This is intended as quick guide on installing and configuring Jon-b-m's iAPS fork. Read through the information provided. If you are seeking greater detail, please review the OpenAPS Documentation and AndroidAPS Documentation.</p>"},{"location":"#what-is-iaps","title":"What is iAPS?","text":"<p>iAPS is a open source artifical pancrease system based on the OpenAPS algorithm. Using your inputted settings, carbohydrates and historical data, it aims to automate insulin delivery to reduce the time spend managing your diabetes. Before starting with iAPS, you should consider alternative commercial options such as the Tandem IQ and Omnipod 5, or other open source applications like Loop and AndroidAPS. iAPS is not approved by any health care authority. You are building and running this system at your own risk.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Before starting with iAPS, you should have a basic understanding of what ICR, ISF and basal rates are. If you do not have a clear understanding, or require some help identifying your settings, please read the appropriate documentation.</p> <p>To use iAPS, you are required to build the application from the source code. This does not require substantial technical know-how but is a time consuming process. You may need to carry this out through several sessions on your first attempt.</p> <p>Upon installation, you will need to configure your settings appropriately. By default iAPS acts no different than that of your pump, with the exception that it may recommend temporary basals from time to time. The magic happens by turning on \"Closed Loop\", enabling automatic bolus features, and turning on autotune. In general, these are the first three settings you will want to configure as you gain confidence in the app and your settings:</p> <ul> <li>Enable Closed Loop for automation</li> <li>Increase Max IOB via \"average mealbolus + 3x max daily basal\"</li> <li>Enable SMB and UAM for automatic bolusing (ensure your ISF is optimized before enabling this)</li> </ul> <p>See Configure for more information on iAPS configuration.</p>"},{"location":"#contribution","title":"Contribution","text":"<p>iAPS is built by a volunteer community. If you are interested in helping as a programmer, you can help contribute to iAPS, or OpenAPS code base. </p> <p>You can also provide support in online support groups by helping them adjust their settings and troubleshoot common errors.</p>"},{"location":"#disclaimer","title":"Disclaimer","text":"<p>The primary author of this documentation is Nabeel Khan who is a diabetes technologist at BC Diabetes.</p>"},{"location":"intro/installing/appledeveloper/","title":"Appledeveloper","text":""},{"location":"intro/installing/appledeveloper/#enroll-in-apple-developer-program","title":"Enroll in Apple Developer Program","text":"<p>Time Estimate</p> <ul> <li>15-20 minutes to complete the enrollment forms</li> <li>up to 2 days to wait for confirmation email that enrollment has been activated</li> </ul> <p>Summary</p> <p>There are two options: Paid ($99/year) or Free (re-build weekly, Xcode only)</p> <ul> <li>Paid Developer Account: Go to the Apple Developer website to enroll in an individual account.</li> <li>Free: No action required at this time.<ul> <li>Free requires you to use the Mac / Xcode build method</li> </ul> </li> </ul> <p>FAQs</p> <ul> <li>\"Can I use someone else's Apple Developer account?\" Please refer to this Answer.</li> <li>\"Do I use my Apple ID or my child's Apple ID to enroll in the Apple Developer program?\" The Apple ID you use to enroll in the developer program must be associated with an adult. It does not need to be the same Apple ID as the Looper uses on their iPhone. For example, a parent installing Loop on their child's iPhone should configure a separate Apple ID for their child, but should use their own Apple ID to build the Loop app for that child.</li> <li>\"How long does it take to have my Apple Development account active after I enroll?\" After you enroll, make sure you look for a confirmation email. Apple says it can take up to 24-48 hours to confirm and setup a new Apple developer account. However, some people have had the process take minutes. One SURE way to make it take longer is to use a different credit card to pay for the Apple Developer account enrollment than is already associated with that Apple ID. When you do that, finishing the enrollment process may be a hassle.</li> </ul>"},{"location":"intro/installing/appledeveloper/#loopers-need-their-own-apple-id","title":"Loopers Need Their Own Apple ID","text":"<p>The Apple ID is DIFFERENT than the Apple Developer ID.</p> <p>Apple ID</p> <p>Parents should set up a different Apple ID for each of their looper children and looper children should not use the parent Apple ID. Use Apple's Instructions for Create an Apple ID for your child.</p> <p>The Apple Health record is a convenient record of blood glucose, insulin and carbohydrates and should be associated with only one individual.</p> <p>Sharing an Apple ID among two or more loopers can cause safety issues. You don't want Sally to be dosed for Joe's lunch in addition to her own and vice versa.</p> <ul> <li>The recommendation for Health Permissions for Loop 2.2.x has changed to no longer provide permission to read Carbohydrates from Apple Health</li> <li>Loop 3 does not read Carbohydrates from Apple Health by default, but if you need that feature, you can modify your feature flags.</li> </ul>"},{"location":"intro/installing/appledeveloper/#developer-account","title":"Developer Account","text":"<p>To build the Loop app on a phone, you must use an Apple developer account associated with an adult (minimum age of 18). This Apple developer account is tied to the email address associated with your Apple ID. You can build apps on phones for everyone in your family with a single Apple Developer Account tied to the Apple ID of an adult.</p> <p>You have two options for an individual account: free or paid.</p>"},{"location":"intro/installing/appledeveloper/#free-developer-account","title":"Free Developer Account","text":"<p>If you decide to use a FREE developer account, here's what you need to know:</p> <ol> <li>You must use the Mac Build method to build Loop.</li> <li>Loop apps signed with a free developer account will expire after 7 days.  On the 7th day, your Loop app will simply turn white when you open it and then immediately close. To rebuild the Loop app, you will have to find a computer and rebuild the app onto your iPhone again. You cannot rebuild the app on day 5 (when it is convenient, for example), hoping to reset the 7-day clock.  The app will still expire on the 7th day from when it was first signed and created.</li> <li>If you decide to switch to a paid account after trying out the free account, you will need to rebuild your Loop app to sign it with the new paid account. Furthermore, switching from a Free to a Paid account requires entering all the settings again (and starting a fresh pod).</li> <li>You will have to do an extra step during the build process to remove Siri and Apple Push capabilities to build with free accounts. Because free accounts do not have access to Apple Push notifications, you will also not be able to use Remote Commands through Nightscout.</li> </ol>"},{"location":"intro/installing/appledeveloper/#paid-developer-account","title":"Paid Developer Account","text":"<p>If you decide to use a PAID developer account, here's what you need to know:</p> <ol> <li>The paid developer account is $99 per year. The default setting is to auto-renew annually. You can change that selection in your developer account settings at any time.</li> <li>If your household has multiple Loop users, only one developer account is needed.  That one developer account can be used to build Loop on multiple phones.</li> <li>If you use the GitHub (Browser) Build method<ul> <li>You must Update the build once every 90 days</li> <li>You must have a Paid Developer account</li> </ul> </li> <li>If you use the Mac Build method<ul> <li>If you have a paid developer account, you must build at least once a year</li> <li>If you have a free account, you must build every 7 days</li> </ul> </li> </ol>"},{"location":"intro/installing/appledeveloper/#switching-from-free-to-paid-memberships","title":"Switching from Free to Paid Memberships","text":"<p>You can try a free account first before buying a paid developer account. If you start with a free account, you'll build a Loop app (let's call it FreeLoop). When you switch to a paid account, you'll be building a totally new and separate Loop app onto your phone (let's call it PaidLoop). </p> <p>The two apps will look identical on your phone and they will both have the name Loop with the same icon, but they will be functionally separate from each other. Make sure you are successful building the PaidLoop app before deleting the FreeLoop app from your phone. Use the search feature on your phone to find both apps.  One will have your configuration settings (FreeLoop), the other will not (PaidLoop).</p> <p>Before deleting the FreeLoop, either record all the settings or take screen shots of all the relevant settings screens.</p> <p>PaidLoop will know nothing about the settings and information you had stored in FreeLoop, so you will need to re-enter all your settings (basal rates, ISF, carb ratios, etc.) and configurations into the new PaidLoop. It will also not connect or control any pods you are currently using with the old FreeLoop app. The one exception is Nightscout credentials, which are stored in your keychain. If you entered your Nightscout credentials into FreeLoop, they will persist across app removal and be used by PaidLoop.</p> <p>With Loop 3, if you use Nightscout, you can import settings that were uploaded to Nightscout by FreeLoop into PaidLoop, so that simplifies the transition. </p> <p>Once PaidLoop is working, delete the FreeLoop instance from your phone to avoid confusion. If you followed the directions when building, you may have configured your phone to prevent deletion of Loop.  Head over to Protect that App, reverse the steps, delete FreeLoop, then do the steps again to protect PaidLoop.</p>"},{"location":"intro/installing/appledeveloper/#enrolling","title":"Enrolling","text":"<p>To enroll in an individual paid Paid account, go to the Apple's Developer Program website Apple Developer website.</p> <p>Be sure to use the credit card already associated with the email you are using for the developer account. If you switch credit cards, it can cause delays.</p> <p>If you choose to use the free account, you don't have to do anything on that website. You'll just wait for the instructions on the Xcode Preferences page and get your free account then.</p>"},{"location":"intro/installing/appledeveloper/#next-steps","title":"Next Steps:","text":"<p>Take the time to read the next three articles. You will be reminded again when you begin to set up your app.</p> <ul> <li>Test Settings</li> <li>Loop Data</li> <li>Meet the Community</li> </ul>"},{"location":"intro/installing/macbuild/buildfree/","title":"Buildfree","text":""},{"location":"intro/installing/macbuild/buildfree/#summary","title":"Summary","text":"<p>Time Estimate</p> <ul> <li>60-80 minutes for first time builders</li> <li>10-15 minutes for repeat builders</li> </ul> <p>Summary</p> <p>You will:</p> <ul> <li>Run the Build Select Script to download Loop code</li> <li>Prepare to build the Loop app</li> <li>Press the Xcode Build Button to build Loop</li> <li>Watch in awe as you build your very own Loop app</li> </ul> <p>FAQs</p> <ul> <li>Why does Xcode show a colorful spinning icon and not respond to me? Unfortunately, sometimes Xcode gets confused and you need to force quit the application. See Xcode Not Responding for instructions.</li> <li>Many more FAQs for building Loop are in-line with the steps that trigger the questions.</li> </ul>"},{"location":"intro/installing/macbuild/buildfree/#build-video","title":"Build Video","text":"<p>The Loop and Learn team prepared this YouTube video showing how to build Loop 2.2.x including the steps required to update if you previously built. The steps are different now. The video may be worth watching, but once you've reviewed it, work through the new build process described on this page.</p>"},{"location":"intro/installing/macbuild/buildfree/#github-build-loop","title":"GitHub Build Loop","text":"<p>If you previously used GitHub Build to install Loop on this phone, you must make sure that automatically install is disabled in TestFlight, or you will not be able to install on that phone with Xcode.</p>"},{"location":"intro/installing/macbuild/buildfree/#developer-mode","title":"Developer Mode","text":"<p>If you are running iOS 15 or watchOS 8 and earlier, you do not have developer mode and can skip ahead to Download Loop.</p> <p>New with iOS 16 and watchOS 9, you must enable Developer Mode to run or build Loop. (This is true for any app created by Xcode directly on your device.) If you want to know more, click on this Apple Link about Developer Mode.</p> <p>Loop will not run until you enable Developer Mode for iOS 16.</p>"},{"location":"intro/installing/macbuild/buildfree/#prepare-your-phone-and-watch","title":"Prepare your Phone and Watch","text":"<ul> <li> <p>If you are running Loop and update to iOS 16 and watchOS 9; Loop will no longer run until you enable Developer Mode and you will see a message similar to the next graphic</p> </li> <li> <p>If you are building to a new Apple Watch - you must first build the app with Xcode before the developer mode will be available.</p> <p></p> </li> <li> <p>If your device uses iOS 16 (and watchOS 9); you must enable Developer Mode to build an app on that device using Xcode or it will show up as an \"Unavailable Device\" under Xcode</p> <p></p> </li> </ul>"},{"location":"intro/installing/macbuild/buildfree/#developer-mode-on-ios-16-device","title":"Developer Mode on iOS 16 Device","text":"<p>To determine if Developer Mode is enabled, go into your phone settings, choose Privacy &amp; Security, scroll to the bottom of the screen and tap on the Developer Mode row and examine the Developer Mode slider.</p> <ul> <li>If Developer Mode is enabled, the slider will be green and no further action is required</li> <li>If Developer Mode is not enabled, the slider will be blank<ul> <li>Move the slider so it is green</li> <li>Reboot the device when asked</li> <li>After the reboot, you will be asked if you want to turn on Developer mode</li> <li>Tap on the <code>Turn On</code> option</li> </ul> </li> </ul>"},{"location":"intro/installing/macbuild/buildfree/#developer-mode-on-watchos-9-device","title":"Developer Mode on watchOS 9 Device","text":"<p>Build, Enable, Build</p> <p>Reports from users indicate that when you are building to a new Apple Watch - you must first build the app with Xcode before the developer mode will be available. So plan to build with Watch paired, and then enable Developer Mode and build again.</p> <p>This must be configured on the watch itself (not the watch app on the iPhone). To determine if Developer Mode is enabled, look at the watch face icons and find the Settings icon. Tap on it and scroll to and tap the Privacy &amp; Security icon. Then scroll to the bottom and tap on Developer Mode.</p> <ul> <li>If Developer Mode is enabled, the slider will be green and no further action is required</li> <li>If Developer Mode is not enabled, the slider will be blank<ul> <li>Move the slider so it is green</li> <li>Reboot the device when asked</li> <li>After the reboot, if you are asked if you want to turn on Developer mode</li> <li>Tap on the <code>Turn On</code> option</li> </ul> </li> </ul>"},{"location":"intro/installing/macbuild/buildfree/#download-loop","title":"Download Loop","text":"<p>This page has the detailed steps to run the Build Select Script to download the Loop code, prepare your computer and build Loop.</p>"},{"location":"intro/installing/macbuild/buildfree/#open-terminal","title":"Open Terminal","text":"<p>Go to the Finder app, click on Applications, then open the Utilities folder.  Locate the Terminal app and double-click Terminal to open a terminal window. The terminal window is very plain looking when you open it. That is normal.</p>"},{"location":"intro/installing/macbuild/buildfree/#ensure-a-year","title":"Ensure a Year","text":"<p>Rebuild / Update on Same Computer?</p> <p>If you used this same computer to build Loop previously and you did not delete provisioning profiles - you will not get a full year with this build.</p> <p>If you missed doing the Updating: Delete Provisioning Profiles, do that step now and return to this page.</p> <p>or more experienced folks may want to just paste this command into their terminal:</p> Copy and Paste to remove Provisioning Profiles<pre><code>rm ~/Library/MobileDevice/Provisioning\\ Profiles/*.mobileprovision\n</code></pre>"},{"location":"intro/installing/macbuild/buildfree/#build-select-script","title":"Build Select Script","text":"<ul> <li>With the release of Loop 3, the build process is different and simpler<ul> <li>Please read each step as if you are a new builder</li> <li>Don't assume you know what you are doing</li> <li>FreeAPS is no longer supported by the Build Select Script</li> <li>Loop 3 with Patches is provided instead</li> </ul> </li> </ul> <p>These instructions show each step needed to download Loop using the Build-Select script.</p> <p>Optional</p> <p>The Build Select Script can also be used to build a companion app, called Loop Follow, and a fork of Loop, which has selected patches added. Follow these links to different websites for more information about those options.</p> <p>For those used to seeing FreeAPS here, it has been removed from the Build Select Script.</p> <p>Consider using Loop 3 as designed. If you need Libre or want the CustomTypeOne patches, those are provided in the Loop with Patches selection in the Build Select Script.</p> <ul> <li>Information about Loop Follow</li> <li>Information about Loop with Patches</li> </ul> <p>You do not need to know about these options to build Loop.</p> <p>Copy the line below that starts with <code>/bin/bash</code> by hovering the mouse near the bottom right side of the text and clicking the copy icon (should say Copy to Clipboard when you hover over it). When you click the icon, a message that says \u201cCopied to Clipboard\u201d will appear on your screen.</p> Copy and Paste to start the BuildLoop.sh script<pre><code>/bin/bash -c \"$(curl -fsSL \\\n  https://raw.githubusercontent.com/loopnlearn/LoopBuildScripts/main/BuildLoop.sh)\"\n</code></pre> <p>Paste the line of text into Terminal. Be sure to click anywhere in the terminal before trying to paste. (Ways to paste: CMD-V; or CNTL-click and select from menu or Edit-Paste at top of Mac screen.)</p> <p>Read the screen (shown below).  Type 1 and return if you understand the warning and agree.</p> <ul> <li>Please read what is on the screen as you progress.</li> <li>Adjust font size as directed if you have difficulty seeing the directions.</li> </ul> <p></p> <p>Next you will see an introduction to the Build-Select script.  Please read this.  To build Loop, you will select the Build Loop option by typing 1 and return.</p> <p></p> <p>Next you are asked which version of Loop you would like to build. Type 1 and return to build Loop (as shown in the graphic below) or 2 for the fork of Loop with added Libre CGM options and CustomTypeOne patches.</p> <p></p>"},{"location":"intro/installing/macbuild/buildfree/#xcode-errors-with-build-select","title":"XCode Errors with Build-Select","text":"<p>WARNINGS</p> <p>If you see errors like these . . .</p> <ul> <li><code>xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</code></li> <li><code>xcode-select: Failed to locate 'git', requesting installation of command line developer tools</code></li> <li><code>xcode-select: error: tool 'xed' requires Xcode</code></li> </ul> <p>You missed one of these steps:</p> <ul> <li>Install Xcode</li> <li>Xcode command line tools</li> </ul>"},{"location":"intro/installing/macbuild/buildfree/#wait-for-download-to-complete","title":"Wait for Download to Complete","text":"<p>This download can take from 3 minutes to 30 minutes depending on your download speed.  You can leave the room and return later to check on progress. When you read the words in the terminal, as the script runs, you may see terminology you do not understand - don't worry - you do not need to understand enumeration or submodule or cloning.  You only need to review the display to look for any error messages. </p> <p>The next graphic shows terminal messages for the beginning of a successful download.</p> <p></p> <p>When the download completes, the \"Check for successful download\" message is displayed as shown in the graphic below. You will need to scroll up in the terminal window to look through all the messages output to the terminal from the beginning of the download. (Your messages that start with \"Submodule path\" may differ.)</p> <p></p> <p>If you do not find the word error in your terminal window, continue with Download was Successful.</p> <p>If you see the word \"error\" in your terminal window:</p> <ul> <li>Read the error message</li> <li>Try to figure out the problem</li> <li>If you need help, reach out to your favorite Loop Social Media site</li> <li>Tap any key other than 1, followed by return to cancel</li> </ul>"},{"location":"intro/installing/macbuild/buildfree/#download-was-successful","title":"Download was Successful","text":"<p>If there are no errors, type 1 in the terminal window to continue. At this point you choose how to sign the targets, so first an explanation.</p>"},{"location":"intro/installing/macbuild/buildfree/#sign-targets","title":"Sign Targets","text":"<p>What does Sign Targets Mean?</p> <p>\"Sign Targets\" in Xcode identifies who built the app. You cannot deploy an app to a phone if you do not sign each target associated with that app.</p> <p>Experienced Builders</p> <p>This replaces several of the steps that used to be required to build Loop.</p> <p>The first time you use the script, you will be asked how you want to sign the targets. If you have previously run the script and configured your computer to have a permanent file that contains your Apple Developer ID, this question will not be shown. Skip ahead to Review LoopConfigOverride.xcconfig.</p> <p>The next question, as shown in graphic below, is whether you will (1) Sign Automatically or (2) Sign Manually.</p> <ul> <li>If you are building with a paid developers account, choose option 1, and continue on this page</li> <li>If you are building with a Free option or plan to build to a simulator on your computer, choose option 2 and click on Build Free Loop to move to the page with those instructions</li> </ul> <p></p>"},{"location":"intro/installing/macbuild/buildfree/#prepare-to-sign","title":"Prepare to Sign","text":"<p>This page is not stand-alone. You typically get here after choosing to Sign Manually after a successful download using the Build Select script.</p> <p>Normally this option is chosen by people building the app with the Free option or if you want to build to a simulator on your computer.</p> <p>If you have a paid developer account and are building Loop 3, you are far better off choosing to configure the permanent override file with your Apple Developer ID. Refer to Sign Targets.</p> <p>The instructions found on this page are for the first build.  With the Free version, you need to build every week. Refer to Build Again with this Download.</p>"},{"location":"intro/installing/macbuild/buildfree/#select-the-loop-folder","title":"Select the Loop Folder","text":"<p>Don't touch that button!</p> <p>You will be told exactly where on each screen you should click. Please only click in the designated places.</p> <p>Follow the directions and compare your Xcode screen to the graphics as you walk through the steps.</p> <p>As shown in the GIF below:</p> <ul> <li>Frame 1: This is what the Xcode screen looks the very first time it is opened after a fresh download<ul> <li>You need to click on the indicated Loop folder icon two times</li> </ul> </li> <li>Frame 2: After the 2 clicks, the middle pane of the Xcode window is populated as shown</li> </ul> <p></p>"},{"location":"intro/installing/macbuild/buildfree/#select-loop-workspace-and-your-phone","title":"Select Loop (Workspace) and Your Phone","text":"<p>If this is the First Time your phone or watch has been connected to Xcode, you will need to tell the phone and watch to \"Trust this Computer\".</p> <p>The GIF below shows:</p> <ul> <li>Frame 1: Same as end of previous GIF<ul> <li>There's a red rectangle around the dropdown menus</li> <li>The menu on the left says \"Loop\"</li> </ul> </li> <li>Frame 2: Same as Frame 1 with a zoomed inset of the red rectangle<ul> <li>You can see Loop has a check mark beside it</li> <li>Loop (Workspace) is one line below</li> <li>Select Loop (Workspace)</li> </ul> </li> <li>Frame 3: Zoomed inset after selecting Loop (Workspace)</li> <li>Frame 4: Desired result of selecting Loop (Workspace) showing your phone</li> </ul> <p></p> <p>Most Common Mistake</p> <ul> <li>The most common mistake in this step is:<ul> <li>not selecting Loop (Workspace)</li> <li>not selecting your actual phone as shown in the screenshot below</li> </ul> </li> </ul> <p></p> <p>I don't see my phone</p> <ul> <li>If you don't see your phone in the Devices section, unplug and plug in again</li> <li>Still don't see your phone - reboot the phone - and if that doesn't work - reboot the computer</li> <li>Still don't see your phone - try a different cable or USB slot</li> </ul>"},{"location":"intro/installing/macbuild/buildfree/#build-to-a-simulator","title":"Build to a Simulator","text":"<p>Skip this section if building to a phone and proceed to Select Signing &amp; Capabilities Tab.</p> <p>If you want to build to a simulator, follow the directions in this section and skip the rest of this page.</p> <ul> <li>Simply choose one of the iOS Simulators instead of a phone and build to it<ul> <li>The iOS simulator you choose does not need to be the same model as your phone</li> </ul> </li> <li>With a simulator, you do not need to sign targets:<ul> <li>You must select Loop (Workspace) and complete the build:<ul> <li>If there is a red x at the top right of your Xcode window, you need to fix the Package Dependency Error and continue on to Start Build</li> <li>If there is not a red x at the top right of your Xcode window, follow the link to Start Build</li> </ul> </li> </ul> </li> <li>After a successful build, a simulated phone will appear on your computer and you can interact with the app on that simulated phone</li> </ul>"},{"location":"intro/installing/macbuild/buildfree/#select-signing-capabilities-tab","title":"Select Signing &amp; Capabilities Tab","text":"<p>What does Signing Targets Mean?</p> <p>\"Signing Targets\" in Xcode identifies who built the app. You cannot deploy an app to a phone without signing each target associated with that app.</p> <p>The graphic below indicates in red the three places you need to click in order to begin signing targets.</p> <ul> <li>First, click on the tab labeled <code>Signing &amp; Capabilities</code></li> <li>Second, click on the icon labeled <code>Loop</code> under the word <code>TARGETS</code></li> <li>Third, click on the dropdown menu (red circle) by the word <code>Team</code></li> </ul> <p>Click Only where Instructed</p> <ul> <li>Make sure <code>All</code>, indicated by dashed blue oval, is selected<ul> <li>If <code>Debug</code> or <code>Release</code> is accidentally tapped, you will not be able to build</li> </ul> </li> <li>Make sure <code>Automatically manage signing</code>, indicated by dashed blue rectangle, is checked</li> </ul> <p></p>"},{"location":"intro/installing/macbuild/buildfree/#sign-the-targets","title":"Sign the Targets","text":"<p>It is time to Sign the Targets with your Apple ID.</p> <p>If you chose to sign manually but have a paid account, you can skip the Free Account steps below.</p> <p>You will be building multiple targets to make a complete app and must sign each one. With Loop 2.2.x, there are 4 targets. With Loop 3, there are 5 targets.</p> <p>Start with the Loop target, the first one on the target list. Choose your Apple ID.</p> <p></p>"},{"location":"intro/installing/macbuild/buildfree/#free-account","title":"Free Account","text":"<p>This section is required if you are using the free account.</p> <p>Some features of Loop are not available with the Free option, so as you sign, you will need to remove features that are not supported.</p> <ol> <li>You must remove unsupported capabilities from 2 targets, this is best done as you sign each target:<ul> <li>Loop Target: Push Notifications; Siri and Time Sensitive Notifications</li> <li>Watch App Extension Target: Siri</li> </ul> </li> <li>Add the keyword <code>SIRI_DISABLED</code> to the LoopConfigOverride.xcconfig file<ul> <li>Click on the filename in the left pane of Xcode and view it in the Xcode editor</li> <li>Examine the file and find the line that starts with <code>SWIFT_ACTIVE_COMPILATION_CONDITIONS = $(inherited)</code></li> <li>Insert the new keyword (separated by a space) anywhere after <code>$(inherited)</code> and before the slashes near the end of the line</li> </ul> </li> </ol> <p>Details about removing unsupported capabilities:</p> <ul> <li>You must disable Push Notification, Siri and Time Sensitive Notifications<ul> <li>If the target you are signing does not use one of these attributes, no error message will appear when you select (personal team) for that target</li> <li>If the target you are signing does use one of these attributes, an error message will appear when you select (personal team) for that target</li> </ul> </li> <li>The Xcode error message starts with \"Cannot create . . .\" with a list of all the attributes not supported.<ul> <li>Scroll down and click on the little trash can icon next to each unsupported attribute</li> </ul> </li> <li>Scroll up and both the \"Cannot create . . .\" and \"No profiles for . . .\" error messages are gone</li> <li>You are done with this target</li> <li>Proceed to the next target</li> </ul>"},{"location":"intro/installing/macbuild/buildfree/#end-of-free-account-steps","title":"End of Free Account Steps","text":"<p>Click on each of the three remaining targets shown in the red box below, and repeat the signing steps by choosing the same team name as you selected in the first target. The targets that must be signed prior to building are Loop, Loop Status Extension, Watch App, and WatchApp Extension for Loop 2.2.x with the addition of Loop Intent Extension for Loop 3.</p> <p></p> <p>After signing the targets, click on the Loop icon under the <code>PROJECTS</code> heading. (Refer to the bright blue box in graphic above - click on that Loop icon.)</p> <ul> <li>If you skip this step, you may get an \"Entitlements\" Build Error for either Loop or WatchApp<ul> <li>Follow this procedure to fix the error: Entitlements Error</li> <li>Much easier to just click on Loop under <code>Projects</code></li> </ul> </li> </ul>"},{"location":"intro/installing/macbuild/buildfree/#signing-complete","title":"Signing Complete","text":"<p>Now that you have signed your app, return to the Build Loop page:</p> <ul> <li>If there is a red x at the top right of your Xcode window, you need to fix the Package Dependency Error</li> <li>If there is not a red x at the top right of your Xcode window, you can return to the Start Build</li> </ul>"},{"location":"intro/installing/macbuild/buildpaid/","title":"Buildpaid","text":""},{"location":"intro/installing/macbuild/buildpaid/#summary","title":"Summary","text":"<p>Time Estimate</p> <ul> <li>60-80 minutes for first time builders</li> <li>10-15 minutes for repeat builders</li> </ul> <p>Summary</p> <p>You will:</p> <ul> <li>Run the Build Select Script to download Loop code</li> <li>Prepare to build the Loop app</li> <li>Press the Xcode Build Button to build Loop</li> <li>Watch in awe as you build your very own Loop app</li> </ul> <p>FAQs</p> <ul> <li>Why does Xcode show a colorful spinning icon and not respond to me? Unfortunately, sometimes Xcode gets confused and you need to force quit the application. See Xcode Not Responding for instructions.</li> <li>Many more FAQs for building Loop are in-line with the steps that trigger the questions.</li> </ul>"},{"location":"intro/installing/macbuild/buildpaid/#build-video","title":"Build Video","text":"<p>The Loop and Learn team prepared this YouTube video showing how to build Loop 2.2.x including the steps required to update if you previously built. The steps are different now. The video may be worth watching, but once you've reviewed it, work through the new build process described on this page.</p>"},{"location":"intro/installing/macbuild/buildpaid/#github-build-loop","title":"GitHub Build Loop","text":"<p>If you previously used GitHub Build to install Loop on this phone, you must make sure that automatically install is disabled in TestFlight, or you will not be able to install on that phone with Xcode.</p>"},{"location":"intro/installing/macbuild/buildpaid/#developer-mode","title":"Developer Mode","text":"<p>If you are running iOS 15 or watchOS 8 and earlier, you do not have developer mode and can skip ahead to Download Loop.</p> <p>New with iOS 16 and watchOS 9, you must enable Developer Mode to run or build Loop. (This is true for any app created by Xcode directly on your device.) If you want to know more, click on this Apple Link about Developer Mode.</p> <p>Loop will not run until you enable Developer Mode for iOS 16.</p>"},{"location":"intro/installing/macbuild/buildpaid/#prepare-your-phone-and-watch","title":"Prepare your Phone and Watch","text":"<ul> <li> <p>If you are running Loop and update to iOS 16 and watchOS 9; Loop will no longer run until you enable Developer Mode and you will see a message similar to the next graphic</p> </li> <li> <p>If you are building to a new Apple Watch - you must first build the app with Xcode before the developer mode will be available.</p> <p></p> </li> <li> <p>If your device uses iOS 16 (and watchOS 9); you must enable Developer Mode to build an app on that device using Xcode or it will show up as an \"Unavailable Device\" under Xcode</p> <p></p> </li> </ul>"},{"location":"intro/installing/macbuild/buildpaid/#developer-mode-on-ios-16-device","title":"Developer Mode on iOS 16 Device","text":"<p>To determine if Developer Mode is enabled, go into your phone settings, choose Privacy &amp; Security, scroll to the bottom of the screen and tap on the Developer Mode row and examine the Developer Mode slider.</p> <ul> <li>If Developer Mode is enabled, the slider will be green and no further action is required</li> <li>If Developer Mode is not enabled, the slider will be blank<ul> <li>Move the slider so it is green</li> <li>Reboot the device when asked</li> <li>After the reboot, you will be asked if you want to turn on Developer mode</li> <li>Tap on the <code>Turn On</code> option</li> </ul> </li> </ul>"},{"location":"intro/installing/macbuild/buildpaid/#developer-mode-on-watchos-9-device","title":"Developer Mode on watchOS 9 Device","text":"<p>Build, Enable, Build</p> <p>Reports from users indicate that when you are building to a new Apple Watch - you must first build the app with Xcode before the developer mode will be available. So plan to build with Watch paired, and then enable Developer Mode and build again.</p> <p>This must be configured on the watch itself (not the watch app on the iPhone). To determine if Developer Mode is enabled, look at the watch face icons and find the Settings icon. Tap on it and scroll to and tap the Privacy &amp; Security icon. Then scroll to the bottom and tap on Developer Mode.</p> <ul> <li>If Developer Mode is enabled, the slider will be green and no further action is required</li> <li>If Developer Mode is not enabled, the slider will be blank<ul> <li>Move the slider so it is green</li> <li>Reboot the device when asked</li> <li>After the reboot, if you are asked if you want to turn on Developer mode</li> <li>Tap on the <code>Turn On</code> option</li> </ul> </li> </ul>"},{"location":"intro/installing/macbuild/buildpaid/#download-loop","title":"Download Loop","text":"<p>This page has the detailed steps to run the Build Select Script to download the Loop code, prepare your computer and build Loop.</p>"},{"location":"intro/installing/macbuild/buildpaid/#open-terminal","title":"Open Terminal","text":"<p>Go to the Finder app, click on Applications, then open the Utilities folder.  Locate the Terminal app and double-click Terminal to open a terminal window. The terminal window is very plain looking when you open it. That is normal.</p>"},{"location":"intro/installing/macbuild/buildpaid/#ensure-a-year","title":"Ensure a Year","text":"<p>Rebuild / Update on Same Computer?</p> <p>If you used this same computer to build Loop previously and you did not delete provisioning profiles - you will not get a full year with this build.</p> <p>If you missed doing the Updating: Delete Provisioning Profiles, do that step now and return to this page.</p> <p>or more experienced folks may want to just paste this command into their terminal:</p> Copy and Paste to remove Provisioning Profiles<pre><code>rm ~/Library/MobileDevice/Provisioning\\ Profiles/*.mobileprovision\n</code></pre>"},{"location":"intro/installing/macbuild/buildpaid/#build-select-script","title":"Build Select Script","text":"<ul> <li>With the release of Loop 3, the build process is different and simpler<ul> <li>Please read each step as if you are a new builder</li> <li>Don't assume you know what you are doing</li> <li>FreeAPS is no longer supported by the Build Select Script</li> <li>Loop 3 with Patches is provided instead</li> </ul> </li> </ul> <p>These instructions show each step needed to download Loop using the Build-Select script.</p> <p>Optional</p> <p>The Build Select Script can also be used to build a companion app, called Loop Follow, and a fork of Loop, which has selected patches added. Follow these links to different websites for more information about those options.</p> <p>For those used to seeing FreeAPS here, it has been removed from the Build Select Script.</p> <p>Consider using Loop 3 as designed. If you need Libre or want the CustomTypeOne patches, those are provided in the Loop with Patches selection in the Build Select Script.</p> <ul> <li>Information about Loop Follow</li> <li>Information about Loop with Patches</li> </ul> <p>You do not need to know about these options to build Loop.</p> <p>Copy the line below that starts with <code>/bin/bash</code> by hovering the mouse near the bottom right side of the text and clicking the copy icon (should say Copy to Clipboard when you hover over it). When you click the icon, a message that says \u201cCopied to Clipboard\u201d will appear on your screen.</p> Copy and Paste to start the BuildLoop.sh script<pre><code>/bin/bash -c \"$(curl -fsSL \\\n  https://raw.githubusercontent.com/loopnlearn/LoopBuildScripts/main/BuildLoop.sh)\"\n</code></pre> <p>Paste the line of text into Terminal. Be sure to click anywhere in the terminal before trying to paste. (Ways to paste: CMD-V; or CNTL-click and select from menu or Edit-Paste at top of Mac screen.)</p> <p>Read the screen (shown below).  Type 1 and return if you understand the warning and agree.</p> <ul> <li>Please read what is on the screen as you progress.</li> <li>Adjust font size as directed if you have difficulty seeing the directions.</li> </ul> <p></p> <p>Next you will see an introduction to the Build-Select script.  Please read this.  To build Loop, you will select the Build Loop option by typing 1 and return.</p> <p></p> <p>Next you are asked which version of Loop you would like to build. Type 1 and return to build Loop (as shown in the graphic below) or 2 for the fork of Loop with added Libre CGM options and CustomTypeOne patches.</p> <p></p>"},{"location":"intro/installing/macbuild/buildpaid/#xcode-errors-with-build-select","title":"XCode Errors with Build-Select","text":"<p>WARNINGS</p> <p>If you see errors like these . . .</p> <ul> <li><code>xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</code></li> <li><code>xcode-select: Failed to locate 'git', requesting installation of command line developer tools</code></li> <li><code>xcode-select: error: tool 'xed' requires Xcode</code></li> </ul> <p>You missed one of these steps:</p> <ul> <li>Install Xcode</li> <li>Xcode command line tools</li> </ul>"},{"location":"intro/installing/macbuild/buildpaid/#wait-for-download-to-complete","title":"Wait for Download to Complete","text":"<p>This download can take from 3 minutes to 30 minutes depending on your download speed.  You can leave the room and return later to check on progress. When you read the words in the terminal, as the script runs, you may see terminology you do not understand - don't worry - you do not need to understand enumeration or submodule or cloning.  You only need to review the display to look for any error messages. </p> <p>The next graphic shows terminal messages for the beginning of a successful download.</p> <p></p> <p>When the download completes, the \"Check for successful download\" message is displayed as shown in the graphic below. You will need to scroll up in the terminal window to look through all the messages output to the terminal from the beginning of the download. (Your messages that start with \"Submodule path\" may differ.)</p> <p></p> <p>If you do not find the word error in your terminal window, continue with Download was Successful.</p> <p>If you see the word \"error\" in your terminal window:</p> <ul> <li>Read the error message</li> <li>Try to figure out the problem</li> <li>If you need help, reach out to your favorite Loop Social Media site</li> <li>Tap any key other than 1, followed by return to cancel</li> </ul>"},{"location":"intro/installing/macbuild/buildpaid/#download-was-successful","title":"Download was Successful","text":"<p>If there are no errors, type 1 in the terminal window to continue. At this point you choose how to sign the targets, so first an explanation.</p>"},{"location":"intro/installing/macbuild/buildpaid/#sign-targets","title":"Sign Targets","text":"<p>What does Sign Targets Mean?</p> <p>\"Sign Targets\" in Xcode identifies who built the app. You cannot deploy an app to a phone if you do not sign each target associated with that app.</p> <p>Experienced Builders</p> <p>This replaces several of the steps that used to be required to build Loop.</p> <p>The first time you use the script, you will be asked how you want to sign the targets. If you have previously run the script and configured your computer to have a permanent file that contains your Apple Developer ID, this question will not be shown. Skip ahead to Review LoopConfigOverride.xcconfig.</p> <p>The next question, as shown in graphic below, is whether you will (1) Sign Automatically or (2) Sign Manually.</p> <ul> <li>If you are building with a paid developers account, choose option 1, and continue on this page</li> <li>If you are building with a Free option or plan to build to a simulator on your computer, choose option 2 and click on Build Free Loop to move to the page with those instructions</li> </ul> <p></p>"},{"location":"intro/installing/macbuild/buildpaid/#paid-developer-account","title":"Paid Developer Account","text":"<p>Continue with this page only if you have a paid developer account.</p> <ul> <li>You need to switch to the Loop Free Build page for a free account.</li> </ul>"},{"location":"intro/installing/macbuild/buildpaid/#create-permanent-loopconfigoverridexcconfig","title":"Create Permanent LoopConfigOverride.xcconfig","text":"<p>The following graphics show the terminal display after selecting option 1 to use Apple Developer ID.</p> <ul> <li>Graphic below:<ul> <li>User is presented with instructions for getting Team ID from the Membership page<ul> <li>After review, the user hits return</li> </ul> </li> </ul> </li> </ul> <p></p> <ul> <li>Graphic below:<ul> <li>The instructions remain on the screen for reference</li> <li>The developer.apple.com web page (not shown) opened automatically in the browser after user hit return<ul> <li>User obtains ID</li> </ul> </li> <li>User enters ID in terminal and then hits return</li> </ul> </li> </ul> <p></p> <p>After hitting return, the user can verify the entry.</p>"},{"location":"intro/installing/macbuild/buildpaid/#review-loopconfigoverridexcconfig","title":"Review LoopConfigOverride.xcconfig","text":"<p>Use Your Team ID</p> <p>The ID, 0123456789, shown in the graphic below is for illustration purposes only. Your terminal display shows your Apple Developer ID (the Team ID on the Membership page).</p> <p>If you previously built with this computer using the script, you already have the file configured. The review step is the same each time.</p> <ul> <li>Graphic below:<ul> <li>The developer ID stored in the permanent file is displayed for review</li> <li>After review, hit return to continue and Plug in Your Phone</li> <li>OR - to modify the ID in the file, see Problem with the ID?</li> </ul> </li> </ul> <p></p>"},{"location":"intro/installing/macbuild/buildpaid/#problem-with-the-id","title":"Problem with the ID?","text":"<p>If there is a problem with the ID that is stored on your computer, you can modify it before continuing.  The instructions, shown in the terminal message, are repeated here:</p> <p>To edit the LoopConfigOverride.xcconfig file with a different developer ID:</p> <ol> <li>Open finder, navigate to Downloads/BuildLoop</li> <li>Locate and double click on LoopConfigOverride.xcconfig<ul> <li>This will open that file in Xcode</li> </ul> </li> <li>Edit in Xcode and save file</li> </ol> <p>You can now return to the terminal and hit return for the next step.</p>"},{"location":"intro/installing/macbuild/buildpaid/#build-loop","title":"Build Loop","text":""},{"location":"intro/installing/macbuild/buildpaid/#plug-in-your-phone","title":"Plug in Your Phone","text":"<p>Refer to the graphic below. The messages in the terminal instruct you to:</p> <ul> <li>Unlock your phone</li> <li>Plug Phone into the computer<ul> <li>(Optional) If you have an Apple Watch that has never had Loop on it<ul> <li>Make sure watch is paired, unlocked and on your wrist</li> </ul> </li> <li>If you have never \"Trusted\" this computer with these device(s), do so now<ul> <li>A screen will pop up on your phone (and watch) asking if you trust the computer</li> <li>Select \"Trust\"</li> <li>After trusting phone and watch, phone should remain plugged in, but watch does not need to stay in proximity of the phone</li> </ul> </li> </ul> </li> <li>Now you are ready to hit return in the terminal window</li> </ul> <p></p> <p>The next action of the script is to </p> <ul> <li>Open a browser window displaying this section of LoopDocs</li> <li>Open Xcode</li> </ul> <p>The final script message informs you that you can close the terminal window.</p> <ul> <li>Wait until you've successfully built the app before closing the terminal</li> </ul>"},{"location":"intro/installing/macbuild/buildpaid/#initial-xcode-screens","title":"Initial Xcode Screens","text":"<p>watchOS Simulators</p> <p>Yes, watchOS simulators are required to build Loop. If Xcode asks if you want to download them - say yes. It's slow but you cannot build Loop without the simulator.</p> <ul> <li>Tap on New with Xcode 14 for more information</li> </ul> <p>First select Loop (Workspace) and confirm your phone is selected. Refer to the GIF below and follow the directions:</p> <ul> <li>Frame 1:  Xcode screen opened by the script after a fresh download<ul> <li>Fresh Download? Wait for indexing to begin<ul> <li>If you see messages about fetching symbols or resolving packages, please wait until you see the Indexing message as shown in the GIF below just to the left of the dashed-blue rectangle</li> </ul> </li> <li>The red rectangle indicates where you will change Loop to Loop (Workspace)</li> <li>The red x in the dashed-blue rectangle region indicates you need to fix a problem before building</li> </ul> </li> <li>Frame 2: Inset shows the action needed to select Loop (Workspace)</li> <li>Frame 3: Loop (Workspace) selected but there's a red x in the dashed-blue rectangle region</li> </ul> <p></p> <p>Most Common Mistake</p> <ul> <li>The most common mistake in this step is:<ul> <li>not selecting Loop (Workspace)</li> <li>not selecting your actual phone</li> </ul> </li> </ul>"},{"location":"intro/installing/macbuild/buildpaid/#package-dependency-error","title":"Package Dependency Error","text":"<p>If there is no red x in the dashed-blue rectange region on your Xcode screen, skip ahead to Start Build on this page.</p> <p>Otherwise, tap on the red x in the dashed-blue rectange region:</p> <ul> <li>If your screen is similar to the figure below, perform the Fix for Package Dependency (instructions are repeated on this page for convenience; duplicated on Build Errors page)</li> <li>If you have a different error, search the Build Error page</li> </ul> <p></p>"},{"location":"intro/installing/macbuild/buildpaid/#fix-for-package-dependency","title":"Fix for Package Dependency","text":"<ol> <li>Click on the folder icon (indicated by red square)</li> <li>Hold down the Control-Key and click the <code>Package Dependency</code> row to display the dropdown menu (shown in the inset)</li> <li>Select Resolve Package Versions from the dropdown menu</li> <li>Once that completes, the red x should resolve and you can build as soon as the Indexing message appears</li> </ol>"},{"location":"intro/installing/macbuild/buildpaid/#start-build","title":"Start Build","text":"<p>The first time you build, there will be steps that will not be required for subsequent builds. These are clearly marked in the intructions with the word First-Time.</p> <p>Refer to the GIF below:</p> <ul> <li>Frame 1: Package Dependency resolved (no red x)<ul> <li>Xcode is Indexing as seen in dashed-green rectangle region<ul> <li>Indexing makes searching faster; it does not need to complete before building</li> </ul> </li> <li>Click the \"Play\" button highlighted by red rectangle to start the build</li> <li>First-Time for this Phone: A Device isn't registered screen appears, as shown in the graphic below the GIF<ul> <li>This happens for any phone not registered to the selected Developer ID</li> <li>You must be connected to the internet so the device can be registered</li> <li>Click register and then the build will continue (as shown in the GIF)</li> </ul> </li> </ul> </li> <li>Frame 2: Build has started<ul> <li>Xcode is Building as seen in dashed-green rectangle region</li> <li>First-Time on This Computer: <ul> <li>Follow the Always Allow Instructions the first time this Developer ID is used on this computer</li> <li>Never hit Deny</li> </ul> </li> </ul> </li> <li>Frame 3: Build succeeded<ul> <li>App is running as seen in dashed-green rectangle region</li> <li>If your phone locked during the build process, you will see a message to unlock your phone, as shown in the graphic below the GIF<ul> <li>Simply unlock your phone and Xcode does the rest</li> <li>If you tapped on <code>Cancel Running</code>, just hit the build button again</li> </ul> </li> <li>First-Time for this Phone: You may also see a \"Could Not Launch Loop\" message<ul> <li>Follow the Update Settings for Developer</li> </ul> </li> </ul> </li> </ul> <p></p> <p> </p> <p>If the app opened on your phone, the next two sections for first-time builders are not needed.  Skip ahead to Successful Build.</p> <p>If you got red error messages, skip ahead to Build Failed?</p>"},{"location":"intro/installing/macbuild/buildpaid/#codesign-keychain-access","title":"Codesign / Keychain Access","text":"<p>First Time Using Developer ID on Computer</p> <p>During your first build with a given Developer ID on your computer, you will see a codesign/keychain access prompt, as shown in the graphic below. Enter the same password you use to log in to the mac, select \"Always Allow\" and then do it again each time you are asked.</p> <p></p> <p>It is normal for this prompt to come up repeatedly even after you enter the correct password (once for each target Loop needs to sign).</p> <p>In frustration, people think the prompt must be broken because it keeps reappearing and press deny or cancel. Don't press deny. Keep entering your computer password and pressing the \"Always Allow\" button as many times as it takes. The build will then continue.</p> <p>FYI: codesign is for code sign - nothing to do with design.</p>"},{"location":"intro/installing/macbuild/buildpaid/#update-settings-for-developer","title":"Update Settings for Developer","text":"<p>First Time Building on a New Device?</p> <p>If this is the first time you have installed an app on your iPhone using a free account, you will see warnings in both Xcode and on your phone after a successful build and install on your phone.</p> <p>Don't worry, dismiss the messages and do this extra step on the phone. These instructions are valid for iOS 15:</p> <ul> <li>Open Phone Settings</li> <li>Select General</li> <li>Select VPN &amp; Device Management</li> <li>Under the Developer App section, tap on icon</li> <li>Tap on Trust</li> <li>You should now be able to open the app</li> </ul> <p></p> <p></p>"},{"location":"intro/installing/macbuild/buildpaid/#build-failed","title":"Build Failed?","text":"<p>No red error messages? Skip ahead to Successful Build.</p> <p>Red Errors</p> <p>If you get a message that your build failed and see RED ERROR messages:</p> <ul> <li>Go to the Build Errors page to find the steps to fix your build error</li> <li>(Optional) Follow the Clear the Error Message process</li> <li>Return to Start Build to try again</li> </ul> <p>FAQ: But what about those yellow or purple warnings that remain in Xcode? Should I worry about them?</p> <p>If you see yellow or purple warnings after your build is done...those are not an issue. Don't try to resolve them or fret about them. They mean nothing to the successful use of your Loop app.</p> <p></p>"},{"location":"intro/installing/macbuild/buildpaid/#clear-the-error-message","title":"Clear the Error Message","text":"<p>Once you've resolved a build error and start the build process again, Xcode will continue to show a red indicator on the top line from the previous failure.  If you don't like seeing that, clean the build folder to clear the error.  Otherwise, as long as the steps of the build are showing across the top line, Xcode is still working on the build.  When the build succeeds, the red circle will disappear.</p> <p>Clean Build Folder</p> <ul> <li>In Xcode menu, select Product, then Clean Build Folder</li> <li>Wait for cleaning to complete: you'll see a \"Clean Finished\" message</li> </ul>"},{"location":"intro/installing/macbuild/buildpaid/#successful-build","title":"Successful Build","text":"<p>After you see the Loop app open on your phone, you can unplug your phone and acknowledge the Xcode message: <code>Lost connection to the debugger on . . .</code>.  The square icon next to the play button goes away as soon as you unplug your phone from Xcode.</p> <p>The Loop app on your phone closes (but does not quit) when you unplug the phone. Open the Loop app on your phone just to be sure.</p> <p>Congratulations!</p> <p></p> <p>If you plan to build again on a backup phone, or want to try a customization, easiest for you to leave Xcode open. Otherwise, you can quit out of Xcode now.</p>"},{"location":"intro/installing/macbuild/buildpaid/#protect-that-app","title":"Protect that App","text":"<p>Protect Against Deletion</p> <p>Prevent your Loop app from being deleted accidentally.</p> <p>If you, or a child, deletes the app from the home screen, it is gone - you have to rebuild and reenter all settings and start a new pod or add back in your Medtronic pump.</p> <p>The steps vary depending on iOS. With iOS 15 and 16, it is under Screen Time, Content &amp; Privacy Restrictions, iTunes &amp; App Store Purchases, Deleting Apps. Choose Don't Allow. If those steps don't help, do an internet search like this, where you use your current phone iOS version number:</p> <ul> <li>\"turn off app deletion iOS ##\"</li> <li>\"iOS ## prevent app deletion\"</li> </ul> <p>Follow the instructions to prevent deletion of what is now a critical medical app.</p>"},{"location":"intro/installing/macbuild/buildpaid/#important-safety-reminder","title":"IMPORTANT SAFETY REMINDER","text":"<ul> <li>STAY IN OPEN LOOP UNTIL YOU UNDERSTAND THE SYSTEM</li> <li>Do NOT skip the Set Up and Operate material; at least skim it.</li> <li>Keep reviewing LoopDocs - some material will be more impactful once you have the app in your hands.</li> <li>Ask questions if you are confused.</li> <li>Learn to use the LoopDocs search feature</li> </ul>"},{"location":"intro/installing/macbuild/buildpaid/#new-to-loop-3","title":"New to Loop 3","text":"<p>If this is your first build with Loop 3, head to the Set Up tab starting here: Loop 3 Overview.</p> <p>Pro Tip: Read Along in LoopDocs as you Onboard</p> <p>One of the goals for Loop 3 is to make the app robust even if you don't read the documentation, but a lot of questions may be resolved if you read along in LoopDocs as you onboard.</p> <p>All those mentors who answer questions are volunteers.</p> <p>Even if you don't read all the pages under the Set Up tab now, these links are important.</p> <ul> <li>New Looper: Onboarding</li> <li>Building Loop 3 over Loop 2.2.x or FreeAPS: Experienced Looper Onboarding</li> </ul> <p>Add a Calendar Reminder</p> <ul> <li>It is good practice to add a reminder to your calendar when the app will expire</li> <li>Be sure to add an alert to that reminder so you have enough time to do all the Loop Updating steps to build the app again before it expires</li> <li>Even better, practice building every 3 to 6 months so you don't forget and keep that expiration date far in the future</li> </ul>"},{"location":"intro/installing/macbuild/buildpaid/#optional-steps","title":"Optional Steps","text":""},{"location":"intro/installing/macbuild/buildpaid/#code-customizations","title":"Code Customizations","text":"<p>New Loop users: Customizations are not a required part of any Loop build. As you gain experience using your Loop app, you may want to customize some of the features. First time builders are encouraged to build with the standard, default code. You can always update your Loop app to add customizations at a later time, using the same download. Subsequent build time is much faster than the initial build for a given download.</p> <p>Pro Tip</p> <p>With a fresh download of code, it's always best to build without customization to ensure the build works without errors.</p> <p>To add custom configurations to your Loop or Loop Apple Watch apps, follow the step-by-step instructions on the Code Customizations page and then build the app again.</p>"},{"location":"intro/installing/macbuild/buildpaid/#apple-watch","title":"Apple Watch","text":"<p>Existing Apple Watch users: Please update your watchOS prior to building the Loop app.  The current version of Loop requires watchOS 4.1 or newer.</p> <p>New Apple Watch users: If you have an Apple watch and want to use it with Loop, first pair the watch with the iPhone before continuing to the next steps.  If you get a new watch after building the Loop app, you'll need to redo your Loop build.</p>"},{"location":"intro/installing/macbuild/buildpaid/#build-again-with-this-download","title":"Build Again with this Download","text":"<p>Follow the Find My Downloaded Loop Code instructions if you later wish to build with this same dowload. Plug in an unlocked phone and start at the Start Build section of this page. You may need to select the phone you just plugged in. Everything else should be ready for you the start the build process.</p> <p>Don't use a really old download</p> <p>Do not use a really old download.</p> <p>Check the date of your download against the latest Current Release date and decide whether to get a fresh download instead.</p>"},{"location":"intro/installing/macbuild/buildstub/","title":"Buildstub","text":""},{"location":"intro/installing/macbuild/buildstub/#summary","title":"Summary","text":"<p>Time Estimate</p> <ul> <li>60-80 minutes for first time builders</li> <li>10-15 minutes for repeat builders</li> </ul> <p>Summary</p> <p>You will:</p> <ul> <li>Run the Build Select Script to download Loop code</li> <li>Prepare to build the Loop app</li> <li>Press the Xcode Build Button to build Loop</li> <li>Watch in awe as you build your very own Loop app</li> </ul> <p>FAQs</p> <ul> <li>Why does Xcode show a colorful spinning icon and not respond to me? Unfortunately, sometimes Xcode gets confused and you need to force quit the application. See Xcode Not Responding for instructions.</li> <li>Many more FAQs for building Loop are in-line with the steps that trigger the questions.</li> </ul>"},{"location":"intro/installing/macbuild/buildstub/#build-video","title":"Build Video","text":"<p>The Loop and Learn team prepared this YouTube video showing how to build Loop 2.2.x including the steps required to update if you previously built. The steps are different now. The video may be worth watching, but once you've reviewed it, work through the new build process described on this page.</p>"},{"location":"intro/installing/macbuild/buildstub/#github-build-loop","title":"GitHub Build Loop","text":"<p>If you previously used GitHub Build to install Loop on this phone, you must make sure that automatically install is disabled in TestFlight, or you will not be able to install on that phone with Xcode.</p>"},{"location":"intro/installing/macbuild/buildstub/#developer-mode","title":"Developer Mode","text":"<p>If you are running iOS 15 or watchOS 8 and earlier, you do not have developer mode and can skip ahead to Download Loop.</p> <p>New with iOS 16 and watchOS 9, you must enable Developer Mode to run or build Loop. (This is true for any app created by Xcode directly on your device.) If you want to know more, click on this Apple Link about Developer Mode.</p> <p>Loop will not run until you enable Developer Mode for iOS 16.</p>"},{"location":"intro/installing/macbuild/buildstub/#prepare-your-phone-and-watch","title":"Prepare your Phone and Watch","text":"<ul> <li> <p>If you are running Loop and update to iOS 16 and watchOS 9; Loop will no longer run until you enable Developer Mode and you will see a message similar to the next graphic</p> </li> <li> <p>If you are building to a new Apple Watch - you must first build the app with Xcode before the developer mode will be available.</p> <p></p> </li> <li> <p>If your device uses iOS 16 (and watchOS 9); you must enable Developer Mode to build an app on that device using Xcode or it will show up as an \"Unavailable Device\" under Xcode</p> <p></p> </li> </ul>"},{"location":"intro/installing/macbuild/buildstub/#developer-mode-on-ios-16-device","title":"Developer Mode on iOS 16 Device","text":"<p>To determine if Developer Mode is enabled, go into your phone settings, choose Privacy &amp; Security, scroll to the bottom of the screen and tap on the Developer Mode row and examine the Developer Mode slider.</p> <ul> <li>If Developer Mode is enabled, the slider will be green and no further action is required</li> <li>If Developer Mode is not enabled, the slider will be blank<ul> <li>Move the slider so it is green</li> <li>Reboot the device when asked</li> <li>After the reboot, you will be asked if you want to turn on Developer mode</li> <li>Tap on the <code>Turn On</code> option</li> </ul> </li> </ul>"},{"location":"intro/installing/macbuild/buildstub/#developer-mode-on-watchos-9-device","title":"Developer Mode on watchOS 9 Device","text":"<p>Build, Enable, Build</p> <p>Reports from users indicate that when you are building to a new Apple Watch - you must first build the app with Xcode before the developer mode will be available. So plan to build with Watch paired, and then enable Developer Mode and build again.</p> <p>This must be configured on the watch itself (not the watch app on the iPhone). To determine if Developer Mode is enabled, look at the watch face icons and find the Settings icon. Tap on it and scroll to and tap the Privacy &amp; Security icon. Then scroll to the bottom and tap on Developer Mode.</p> <ul> <li>If Developer Mode is enabled, the slider will be green and no further action is required</li> <li>If Developer Mode is not enabled, the slider will be blank<ul> <li>Move the slider so it is green</li> <li>Reboot the device when asked</li> <li>After the reboot, if you are asked if you want to turn on Developer mode</li> <li>Tap on the <code>Turn On</code> option</li> </ul> </li> </ul>"},{"location":"intro/installing/macbuild/buildstub/#download-loop","title":"Download Loop","text":"<p>This page has the detailed steps to run the Build Select Script to download the Loop code, prepare your computer and build Loop.</p>"},{"location":"intro/installing/macbuild/buildstub/#open-terminal","title":"Open Terminal","text":"<p>Go to the Finder app, click on Applications, then open the Utilities folder.  Locate the Terminal app and double-click Terminal to open a terminal window. The terminal window is very plain looking when you open it. That is normal.</p>"},{"location":"intro/installing/macbuild/buildstub/#ensure-a-year","title":"Ensure a Year","text":"<p>Rebuild / Update on Same Computer?</p> <p>If you used this same computer to build Loop previously and you did not delete provisioning profiles - you will not get a full year with this build.</p> <p>If you missed doing the Updating: Delete Provisioning Profiles, do that step now and return to this page.</p> <p>or more experienced folks may want to just paste this command into their terminal:</p> Copy and Paste to remove Provisioning Profiles<pre><code>rm ~/Library/MobileDevice/Provisioning\\ Profiles/*.mobileprovision\n</code></pre>"},{"location":"intro/installing/macbuild/buildstub/#build-select-script","title":"Build Select Script","text":"<ul> <li>With the release of Loop 3, the build process is different and simpler<ul> <li>Please read each step as if you are a new builder</li> <li>Don't assume you know what you are doing</li> <li>FreeAPS is no longer supported by the Build Select Script</li> <li>Loop 3 with Patches is provided instead</li> </ul> </li> </ul> <p>These instructions show each step needed to download Loop using the Build-Select script.</p> <p>Optional</p> <p>The Build Select Script can also be used to build a companion app, called Loop Follow, and a fork of Loop, which has selected patches added. Follow these links to different websites for more information about those options.</p> <p>For those used to seeing FreeAPS here, it has been removed from the Build Select Script.</p> <p>Consider using Loop 3 as designed. If you need Libre or want the CustomTypeOne patches, those are provided in the Loop with Patches selection in the Build Select Script.</p> <ul> <li>Information about Loop Follow</li> <li>Information about Loop with Patches</li> </ul> <p>You do not need to know about these options to build Loop.</p> <p>Copy the line below that starts with <code>/bin/bash</code> by hovering the mouse near the bottom right side of the text and clicking the copy icon (should say Copy to Clipboard when you hover over it). When you click the icon, a message that says \u201cCopied to Clipboard\u201d will appear on your screen.</p> Copy and Paste to start the BuildLoop.sh script<pre><code>/bin/bash -c \"$(curl -fsSL \\\n  https://raw.githubusercontent.com/loopnlearn/LoopBuildScripts/main/BuildLoop.sh)\"\n</code></pre> <p>Paste the line of text into Terminal. Be sure to click anywhere in the terminal before trying to paste. (Ways to paste: CMD-V; or CNTL-click and select from menu or Edit-Paste at top of Mac screen.)</p> <p>Read the screen (shown below).  Type 1 and return if you understand the warning and agree.</p> <ul> <li>Please read what is on the screen as you progress.</li> <li>Adjust font size as directed if you have difficulty seeing the directions.</li> </ul> <p></p> <p>Next you will see an introduction to the Build-Select script.  Please read this.  To build Loop, you will select the Build Loop option by typing 1 and return.</p> <p></p> <p>Next you are asked which version of Loop you would like to build. Type 1 and return to build Loop (as shown in the graphic below) or 2 for the fork of Loop with added Libre CGM options and CustomTypeOne patches.</p> <p></p>"},{"location":"intro/installing/macbuild/buildstub/#xcode-errors-with-build-select","title":"XCode Errors with Build-Select","text":"<p>WARNINGS</p> <p>If you see errors like these . . .</p> <ul> <li><code>xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</code></li> <li><code>xcode-select: Failed to locate 'git', requesting installation of command line developer tools</code></li> <li><code>xcode-select: error: tool 'xed' requires Xcode</code></li> </ul> <p>You missed one of these steps:</p> <ul> <li>Install Xcode</li> <li>Xcode command line tools</li> </ul>"},{"location":"intro/installing/macbuild/buildstub/#wait-for-download-to-complete","title":"Wait for Download to Complete","text":"<p>This download can take from 3 minutes to 30 minutes depending on your download speed.  You can leave the room and return later to check on progress. When you read the words in the terminal, as the script runs, you may see terminology you do not understand - don't worry - you do not need to understand enumeration or submodule or cloning.  You only need to review the display to look for any error messages. </p> <p>The next graphic shows terminal messages for the beginning of a successful download.</p> <p></p> <p>When the download completes, the \"Check for successful download\" message is displayed as shown in the graphic below. You will need to scroll up in the terminal window to look through all the messages output to the terminal from the beginning of the download. (Your messages that start with \"Submodule path\" may differ.)</p> <p></p> <p>If you do not find the word error in your terminal window, continue with Download was Successful.</p> <p>If you see the word \"error\" in your terminal window:</p> <ul> <li>Read the error message</li> <li>Try to figure out the problem</li> <li>If you need help, reach out to your favorite Loop Social Media site</li> <li>Tap any key other than 1, followed by return to cancel</li> </ul>"},{"location":"intro/installing/macbuild/buildstub/#download-was-successful","title":"Download was Successful","text":"<p>If there are no errors, type 1 in the terminal window to continue. At this point you choose how to sign the targets, so first an explanation.</p>"},{"location":"intro/installing/macbuild/buildstub/#sign-targets","title":"Sign Targets","text":"<p>What does Sign Targets Mean?</p> <p>\"Sign Targets\" in Xcode identifies who built the app. You cannot deploy an app to a phone if you do not sign each target associated with that app.</p> <p>Experienced Builders</p> <p>This replaces several of the steps that used to be required to build Loop.</p> <p>The first time you use the script, you will be asked how you want to sign the targets. If you have previously run the script and configured your computer to have a permanent file that contains your Apple Developer ID, this question will not be shown. Skip ahead to Review LoopConfigOverride.xcconfig.</p> <p>The next question, as shown in graphic below, is whether you will (1) Sign Automatically or (2) Sign Manually.</p> <ul> <li>If you are building with a paid developers account, choose option 1, and continue on this page</li> <li>If you are building with a Free option or plan to build to a simulator on your computer, choose option 2 and click on Build Free Loop to move to the page with those instructions</li> </ul> <p></p>"},{"location":"intro/installing/macbuild/buildtestflight/","title":"Buildtestflight","text":""},{"location":"intro/installing/macbuild/buildtestflight/#summary","title":"Summary","text":"<p>Time Estimate</p> <ul> <li>60-80 minutes for first time builders</li> <li>10-15 minutes for repeat builders</li> </ul> <p>Summary</p> <p>You will:</p> <ul> <li>Run the Build Select Script to download Loop code</li> <li>Prepare to build the Loop app</li> <li>Press the Xcode Build Button to build Loop</li> <li>Watch in awe as you build your very own Loop app</li> </ul> <p>FAQs</p> <ul> <li>Why does Xcode show a colorful spinning icon and not respond to me? Unfortunately, sometimes Xcode gets confused and you need to force quit the application. See Xcode Not Responding for instructions.</li> <li>Many more FAQs for building Loop are in-line with the steps that trigger the questions.</li> </ul>"},{"location":"intro/installing/macbuild/buildtestflight/#build-video","title":"Build Video","text":"<p>The Loop and Learn team prepared this YouTube video showing how to build Loop 2.2.x including the steps required to update if you previously built. The steps are different now. The video may be worth watching, but once you've reviewed it, work through the new build process described on this page.</p>"},{"location":"intro/installing/macbuild/buildtestflight/#github-build-loop","title":"GitHub Build Loop","text":"<p>If you previously used GitHub Build to install Loop on this phone, you must make sure that automatically install is disabled in TestFlight, or you will not be able to install on that phone with Xcode.</p>"},{"location":"intro/installing/macbuild/buildtestflight/#developer-mode","title":"Developer Mode","text":"<p>If you are running iOS 15 or watchOS 8 and earlier, you do not have developer mode and can skip ahead to Download Loop.</p> <p>New with iOS 16 and watchOS 9, you must enable Developer Mode to run or build Loop. (This is true for any app created by Xcode directly on your device.) If you want to know more, click on this Apple Link about Developer Mode.</p> <p>Loop will not run until you enable Developer Mode for iOS 16.</p>"},{"location":"intro/installing/macbuild/buildtestflight/#prepare-your-phone-and-watch","title":"Prepare your Phone and Watch","text":"<ul> <li> <p>If you are running Loop and update to iOS 16 and watchOS 9; Loop will no longer run until you enable Developer Mode and you will see a message similar to the next graphic</p> </li> <li> <p>If you are building to a new Apple Watch - you must first build the app with Xcode before the developer mode will be available.</p> <p></p> </li> <li> <p>If your device uses iOS 16 (and watchOS 9); you must enable Developer Mode to build an app on that device using Xcode or it will show up as an \"Unavailable Device\" under Xcode</p> <p></p> </li> </ul>"},{"location":"intro/installing/macbuild/buildtestflight/#developer-mode-on-ios-16-device","title":"Developer Mode on iOS 16 Device","text":"<p>To determine if Developer Mode is enabled, go into your phone settings, choose Privacy &amp; Security, scroll to the bottom of the screen and tap on the Developer Mode row and examine the Developer Mode slider.</p> <ul> <li>If Developer Mode is enabled, the slider will be green and no further action is required</li> <li>If Developer Mode is not enabled, the slider will be blank<ul> <li>Move the slider so it is green</li> <li>Reboot the device when asked</li> <li>After the reboot, you will be asked if you want to turn on Developer mode</li> <li>Tap on the <code>Turn On</code> option</li> </ul> </li> </ul>"},{"location":"intro/installing/macbuild/buildtestflight/#developer-mode-on-watchos-9-device","title":"Developer Mode on watchOS 9 Device","text":"<p>Build, Enable, Build</p> <p>Reports from users indicate that when you are building to a new Apple Watch - you must first build the app with Xcode before the developer mode will be available. So plan to build with Watch paired, and then enable Developer Mode and build again.</p> <p>This must be configured on the watch itself (not the watch app on the iPhone). To determine if Developer Mode is enabled, look at the watch face icons and find the Settings icon. Tap on it and scroll to and tap the Privacy &amp; Security icon. Then scroll to the bottom and tap on Developer Mode.</p> <ul> <li>If Developer Mode is enabled, the slider will be green and no further action is required</li> <li>If Developer Mode is not enabled, the slider will be blank<ul> <li>Move the slider so it is green</li> <li>Reboot the device when asked</li> <li>After the reboot, if you are asked if you want to turn on Developer mode</li> <li>Tap on the <code>Turn On</code> option</li> </ul> </li> </ul>"},{"location":"intro/installing/macbuild/buildtestflight/#download-loop","title":"Download Loop","text":"<p>This page has the detailed steps to run the Build Select Script to download the Loop code, prepare your computer and build Loop.</p>"},{"location":"intro/installing/macbuild/buildtestflight/#open-terminal","title":"Open Terminal","text":"<p>Go to the Finder app, click on Applications, then open the Utilities folder.  Locate the Terminal app and double-click Terminal to open a terminal window. The terminal window is very plain looking when you open it. That is normal.</p>"},{"location":"intro/installing/macbuild/buildtestflight/#ensure-a-year","title":"Ensure a Year","text":"<p>Rebuild / Update on Same Computer?</p> <p>If you used this same computer to build Loop previously and you did not delete provisioning profiles - you will not get a full year with this build.</p> <p>If you missed doing the Updating: Delete Provisioning Profiles, do that step now and return to this page.</p> <p>or more experienced folks may want to just paste this command into their terminal:</p> Copy and Paste to remove Provisioning Profiles<pre><code>rm ~/Library/MobileDevice/Provisioning\\ Profiles/*.mobileprovision\n</code></pre>"},{"location":"intro/installing/macbuild/buildtestflight/#build-select-script","title":"Build Select Script","text":"<ul> <li>With the release of Loop 3, the build process is different and simpler<ul> <li>Please read each step as if you are a new builder</li> <li>Don't assume you know what you are doing</li> <li>FreeAPS is no longer supported by the Build Select Script</li> <li>Loop 3 with Patches is provided instead</li> </ul> </li> </ul> <p>These instructions show each step needed to download Loop using the Build-Select script.</p> <p>Optional</p> <p>The Build Select Script can also be used to build a companion app, called Loop Follow, and a fork of Loop, which has selected patches added. Follow these links to different websites for more information about those options.</p> <p>For those used to seeing FreeAPS here, it has been removed from the Build Select Script.</p> <p>Consider using Loop 3 as designed. If you need Libre or want the CustomTypeOne patches, those are provided in the Loop with Patches selection in the Build Select Script.</p> <ul> <li>Information about Loop Follow</li> <li>Information about Loop with Patches</li> </ul> <p>You do not need to know about these options to build Loop.</p> <p>Copy the line below that starts with <code>/bin/bash</code> by hovering the mouse near the bottom right side of the text and clicking the copy icon (should say Copy to Clipboard when you hover over it). When you click the icon, a message that says \u201cCopied to Clipboard\u201d will appear on your screen.</p> Copy and Paste to start the BuildLoop.sh script<pre><code>/bin/bash -c \"$(curl -fsSL \\\n  https://raw.githubusercontent.com/loopnlearn/LoopBuildScripts/main/BuildLoop.sh)\"\n</code></pre> <p>Paste the line of text into Terminal. Be sure to click anywhere in the terminal before trying to paste. (Ways to paste: CMD-V; or CNTL-click and select from menu or Edit-Paste at top of Mac screen.)</p> <p>Read the screen (shown below).  Type 1 and return if you understand the warning and agree.</p> <ul> <li>Please read what is on the screen as you progress.</li> <li>Adjust font size as directed if you have difficulty seeing the directions.</li> </ul> <p></p> <p>Next you will see an introduction to the Build-Select script.  Please read this.  To build Loop, you will select the Build Loop option by typing 1 and return.</p> <p></p> <p>Next you are asked which version of Loop you would like to build. Type 1 and return to build Loop (as shown in the graphic below) or 2 for the fork of Loop with added Libre CGM options and CustomTypeOne patches.</p> <p></p>"},{"location":"intro/installing/macbuild/buildtestflight/#xcode-errors-with-build-select","title":"XCode Errors with Build-Select","text":"<p>WARNINGS</p> <p>If you see errors like these . . .</p> <ul> <li><code>xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</code></li> <li><code>xcode-select: Failed to locate 'git', requesting installation of command line developer tools</code></li> <li><code>xcode-select: error: tool 'xed' requires Xcode</code></li> </ul> <p>You missed one of these steps:</p> <ul> <li>Install Xcode</li> <li>Xcode command line tools</li> </ul>"},{"location":"intro/installing/macbuild/buildtestflight/#wait-for-download-to-complete","title":"Wait for Download to Complete","text":"<p>This download can take from 3 minutes to 30 minutes depending on your download speed.  You can leave the room and return later to check on progress. When you read the words in the terminal, as the script runs, you may see terminology you do not understand - don't worry - you do not need to understand enumeration or submodule or cloning.  You only need to review the display to look for any error messages. </p> <p>The next graphic shows terminal messages for the beginning of a successful download.</p> <p></p> <p>When the download completes, the \"Check for successful download\" message is displayed as shown in the graphic below. You will need to scroll up in the terminal window to look through all the messages output to the terminal from the beginning of the download. (Your messages that start with \"Submodule path\" may differ.)</p> <p></p> <p>If you do not find the word error in your terminal window, continue with Download was Successful.</p> <p>If you see the word \"error\" in your terminal window:</p> <ul> <li>Read the error message</li> <li>Try to figure out the problem</li> <li>If you need help, reach out to your favorite Loop Social Media site</li> <li>Tap any key other than 1, followed by return to cancel</li> </ul>"},{"location":"intro/installing/macbuild/buildtestflight/#download-was-successful","title":"Download was Successful","text":"<p>If there are no errors, type 1 in the terminal window to continue. At this point you choose how to sign the targets, so first an explanation.</p>"},{"location":"intro/installing/macbuild/buildtestflight/#sign-targets","title":"Sign Targets","text":"<p>What does Sign Targets Mean?</p> <p>\"Sign Targets\" in Xcode identifies who built the app. You cannot deploy an app to a phone if you do not sign each target associated with that app.</p> <p>Experienced Builders</p> <p>This replaces several of the steps that used to be required to build Loop.</p> <p>The first time you use the script, you will be asked how you want to sign the targets. If you have previously run the script and configured your computer to have a permanent file that contains your Apple Developer ID, this question will not be shown. Skip ahead to Review LoopConfigOverride.xcconfig.</p> <p>The next question, as shown in graphic below, is whether you will (1) Sign Automatically or (2) Sign Manually.</p> <ul> <li>If you are building with a paid developers account, choose option 1, and continue on this page</li> <li>If you are building with a Free option or plan to build to a simulator on your computer, choose option 2 and click on Build Free Loop to move to the page with those instructions</li> </ul> <p></p>"},{"location":"intro/installing/macbuild/buildtestflight/#introduction","title":"Introduction","text":"<p>There are several different methods for making use of TestFlight:</p> <ul> <li>Test an app someone else is developing</li> <li>Use the GitHub Browser Build method to build and distribute your own Loop app</li> <li>Use TestFlight as a remote distribution (and backup) for an app you build using Xcode</li> </ul> <p>If you want to add specific customizations, Customize your Loop, to your build, that can be more difficult with the GitHub method. There are a few customizations available from Loop and Learn: Loop Customization, but some people prefer additional modifications.</p> <p>This guide can also be followed to install other apps you build with Xcode via TestFlight. Examples include LoopFollow, LoopCaregiver, xDrip4iOS and GlucoseDirect.</p> <p>Some useful features of using TestFlight to install Loop:</p> <ul> <li>You don't need to plug your phone into your computer</li> <li>You can update Loop on your kid's phone while they're away at college</li> <li>Reinstalling Loop on the fly is quick and easy from your phone, even if you accidentally delete the app, see Protect that App, or need to install Loop on a brand new phone</li> </ul> <p>Since apps built with TestFlight expire after 90 days, it is recommended you also setup a build using the GitHub Browser Build method even if you don't plan on using it. The GitHub build can be updated in a few minutes from any browser and is an extra layer of protection in these scenarios if you do not have access to your Mac for a rebuild:</p> <ul> <li>Your Xcode built Loop in TestFlight expires</li> <li>An urgent update to Loop is released</li> </ul> <p>In all cases, except accidental deletion of Loop or loss of phone, the Loop you install from TestFlight builds over your existing app and you keep all your settings including your pump.</p>"},{"location":"intro/installing/macbuild/buildtestflight/#build-to-testflight-via-xcode","title":"Build to TestFlight via Xcode","text":""},{"location":"intro/installing/macbuild/buildtestflight/#initial-steps","title":"Initial Steps","text":"<p>Before creating or uploading to a TestFlight, use the Mac Build guide to sign your targets and build Loop to a simulator phone in Xcode. This checks to ensure the app you upload to your TestFlight will work as expected.</p>"},{"location":"intro/installing/macbuild/buildtestflight/#archive-the-project","title":"Archive the Project","text":"<p>Change the build target to from building to a simulated phone to Loop (Workspace) &gt; Any iOS Device (arm64) like the image below.</p> <p></p> <p>Now go to the top menu and choose Product &gt; Clean Build Folder. Once it's done, it should say \"Clean Finished\".</p> <p></p> <p>Go back to the top menu and choose Product &gt; Archive. This will build Loop into a file rather than a phone or simulator. It should take about the same amount of time as building to a phone or simulator does.</p>"},{"location":"intro/installing/macbuild/buildtestflight/#upload-the-archive","title":"Upload the Archive","text":"<p>Once the archive finishes building, it should automatically open the Archives window. If you want to open this window without re-archiving, click the following in the top menu: Xcode &gt; Window &gt; Organizer.</p> <p></p> <p>Select the archive and click Distribute App. If you've archived the project before, be sure to select the archive you intend to upload - most likely the one with the most recent Creation Date. </p> <p>On the next screen, App Store Connect is selected by default. Click Next.</p> <p></p> <p>On the next screen, Upload is selected by default. Click Next.</p> <p></p>"},{"location":"intro/installing/macbuild/buildtestflight/#first-time-archive-upload","title":"First-Time Archive Upload","text":"<p>If you have already created a TestFlight for Loop via Xcode or the GitHub Build method, the next screen will not be shown, so skip ahead to Subsequent Archive Upload.</p> <p>If this is the first time you're creating a TestFlight for Loop, enter the following on the next screen and click Next:</p> <ul> <li>Name: Enter a name that is unique. Most people just use \"Loop\" followed by their initials, so James Kirk would use \"LoopJK\". If he gets an error that the name is already taken, he might try something like \"LoopJTK\" or \"Loop_JTK_1701\".</li> <li>SKU: This can be anything, but it can't be the same SKU that you've used for a different app that you've created a TestFlight for. Ideally, just leave it as the autofilled bundle id.</li> <li>Primary Language: Set this to your primary language.</li> <li>Bundle Identifier: This should already be autofilled. If it's not, it should be \"com.YOUR_TEAM_ID.loopkit.Loop\". Make sure you replace YOUR_TEAM_ID with your actual TEAM ID, which you can find at developer.apple.com/account.</li> </ul> <p></p>"},{"location":"intro/installing/macbuild/buildtestflight/#subsequent-archive-upload","title":"Subsequent Archive Upload","text":"<p>On the next screen, leave everything checked and click Next.</p> <p></p> <p>On the next screen, leave it set to Automatically manage signing and click Next. You will see a few messages as it performs some tasks. Be patient.</p> <p></p> <p>When you see the next screen, click Upload.</p> <p></p> <p>Wait until uploading is finished. Don't be alarmed if you see the following screen, just click Done.</p> <p></p>"},{"location":"intro/installing/macbuild/buildtestflight/#deploy-app","title":"Deploy App","text":"<p>Now that it's uploaded to TestFlight, it will take a little bit before it finishes processing and becomes available for installation on your iPhone. You can check appstoreconnect.apple.com/apps to find it's progress by clicking Test Flight and then iOS under Builds in the upper left. Once it no longer says \"Processing\" and instead says \"Ready to Submit\" next to the build's number, it should be available and ready to install on your iPhone.</p> <p></p> <p>To install Loop from TestFlight onto your iPhone, follow the instructions on the GitHub Deploy page.</p>"},{"location":"intro/installing/macbuild/buildtestflight/#update-app","title":"Update App","text":"<p>Apps installed via TestFlight are only valid for a maximum of 90 days, so you must upload a new build to TestFlight at least every 90 days.</p> <p>To update, simply repeat all the steps on this page.</p> <p>Add a Calendar Reminder</p> <p>Note that the built-in Loop Notification for expiration has not been modified to read TestFlight expiration, yet.</p> <p>So, please add a calendar reminder.</p>"},{"location":"intro/installing/macbuild/computer/","title":"Computer","text":""},{"location":"intro/installing/macbuild/computer/#compatible-computer","title":"Compatible Computer","text":"<p>Time Estimate</p> <p>If you are building with a Mac and Xcode:</p> <ul> <li>5 minutes, if you have a Mac with Monterey (macOS 12.5) or higher<ul> <li>Ventura (macOS 13.x) can be used to build Loop, but is not (yet) required</li> </ul> </li> <li>30-60 minutes, if you need to install macOS updates</li> </ul> <p>Hint: OS stands for Operating System</p> <p>New Method (Loop 3):</p> <p>If you do not have a Mac, you can build Loop 3 with any computer using a browser. If you want to use that method, review this list and head over to Browser Build.</p> <ul> <li>You need a paid ($99/year) Apple Developer Account</li> <li>You need an account (free) with github</li> <li>You need a compatible phone to install the app from TestFlight</li> <li>You need a compatible Pump and CGM if you want to actually Loop (and not just explore the app)</li> </ul> <p>Summary</p> <p>Your computer, iPhone and Xcode must have compatible versions to build Loop with the Mac / Xcode method.</p> <ul> <li>A summary list of Compatible Versions is found on this page with more detail in a later page</li> </ul> <p>If you are buying a Mac, chose one with Ventura operating system and at least 256 GB (512 GB is better).</p> <p>FAQs</p> <ul> <li>\"Do I need a Mac or Virtual Machine?.\" Not any more! You can build Loop 3 with any browser on any computer.</li> <li>\"I want to use the Mac / Xcode build method. Can I use a PC or Windows computer? I don't own an Apple computer.\" Yes, you can. Please read this FAQ about using a Virtual Machine.</li> <li>\"How often do I need to use the computer if I choose the Mac / Xcode build method?\" Computer access is required when<ul> <li>Initially installing the Loop app</li> <li>Loop app expires (Annually for a paid account or weekly for a free account)</li> <li>Updating to a newer Loop release</li> <li>You do NOT need access to an Apple computer to update your phone iOS, troubleshoot or change Loop settings</li> </ul> </li> </ul> <p>If you have access to a computer with MacOS 12.5 or newer, you can skip ahead to Check Space Available.</p>"},{"location":"intro/installing/macbuild/computer/#compatible-versions","title":"Compatible Versions","text":"<p>With the release of Loop 3:</p> <ul> <li>Minium Mac operating system is Monterey, macOS 12.5 or higher</li> <li>Mac operating system of Ventura, macOS 13.x is available and works fine to build Loop</li> </ul> <p>The Loop and Learn Version Updates page posts an update every time a new iOS is released and tested. That page is typically updated faster than LoopDocs and reports changes, if any, to the minimum Xcode or macOS.</p> <ul> <li> iOS 16 or newer, the minimum macOS is Monterey (12.5)</li> <li>Loop 3, the minimum macOS is Monterey (12.5)</li> </ul> <p>If your macOS does not meet the minimum, check to see if you can update your macOS or consider using the Browser Build method, which works on any computer.</p> <p>iOS Dictates Your Computer Needs</p> <p>The more up-to-date you keep your phone iOS, the more up-to-date your computer and macOS needs to be to build Loop with the Mac / Xcode build method. A new build is required at least once a year. More information on iOS is in Download Xcode.</p> <p>Do not use any of the beta macOS versions. (If you don't know what that means, you aren't using one.)</p>"},{"location":"intro/installing/macbuild/computer/#check-your-macos-version","title":"Check Your macOS Version","text":"<p>To find your macOS version, click on the Apple icon in the computer's upper left corner and select <code>About this Mac</code>. The graphic below highlights the macOS version with a red rectangle. Your computer can be a MacBook, iMac, macMini, etc. It will work to build Loop if it has the minimum required macOS version and enough storage.</p> <p>With the Ventura macOS version, the <code>About this Mac</code> display changed. The left side of the graphic shows Monterey (or earlier) and the right side shows Ventura. Both styles of display indicate the macOS on this screen (red rectangle). For Ventura, when you tap on the <code>More Info</code> icon, it opens the General -&gt; About screen from the System Settings menu. This is very similar to the phone Settings -&gt; General -&gt; About screen.</p> <p></p> <p>If you do not have the required minimum macOS version</p> <ul> <li>For macOS 12.6.1 or earlier, check the <code>Software Update</code> button on the screen shown above</li> <li>For macOS 13.0 or later, click on the Apple and choose <code>System Settings</code><ul> <li>Select <code>General</code> and <code>Software Update</code>, just like you would on the phone interface</li> </ul> </li> </ul> <p>Apple says upgrading to macOS Monterey or Ventura requires 26 GB of available storage.</p>"},{"location":"intro/installing/macbuild/computer/#check-the-space-available","title":"Check the Space Available","text":"<p>You need to have 50 GB free space in order to install Xcode in Download Xcode. At the top of the menu on the graphic above, click on the Storage Tab highlighted with a red rectangle, or, if running Ventura, tap on More Info to open the About screen (under System Settings-&gt;General), which includes storage at the bottom of the display.</p> <p>To free up space, move things like photos to an external drive. The Xcode application cannot be run from an external drive.</p> <p>If you are evaluating a used computer, it's best to have at least 256 GB total disk space (more is better).</p>"},{"location":"intro/installing/macbuild/computer/#configure-terminal-app-for-rosetta","title":"Configure Terminal App for Rosetta","text":"<p>This step is only if your Mac uses an M1 or M2 chip. It is not needed for Macs that use an Intel chip. If you don't know if you have an M1, M2 or Intel chip, go back to the Check Your macOS Version section, and read the Chip line.</p> <p>New Apple M1/M2 chip users: IMPORTANT STEP</p> <p>If you purchased an Apple computer with an M1 or M2 chip, you will need to do this step (one time only) to open the Terminal app using a \"converter\" app, called Rosetta.</p> <p>Go to the Finder app, click on Applications, then open the Utilities folder.  Locate the Terminal app but do not double click it to open a Terminal window. Instead, hold down the Control Key on the keyboard and single click on Terminal. This will bring up a menu of choices, select the \"Get Info\" option.</p> <p></p> <p>Now in the informational window that appears...you'll see a checkbox that says \"Open using Rosetta\". Check that box...that will allow Terminal app to open using Rosetta when you double click on terminal in the future. You can close that informational window, after you check the box for \"Open using Rosetta\", and proceed with the rest of the directions just like normal.</p> <p></p> <p>Click on this link for more information from Apple about Rosetta.</p>"},{"location":"intro/installing/macbuild/computer/#which-macs-are-compatible-with-macos-ventura","title":"Which Macs Are Compatible with macOS Ventura?","text":"<p>Ventura will eventually be required for building Loop. You can install Ventura on the following:</p> <ul> <li>MacBook Pro introduced in 2017 or later</li> <li>MacBook Air introduced in 2018 or later</li> <li>MacBook introduced in 2017 or later</li> <li>Mac mini introduced in 2018 or later</li> <li>iMac introduced in late 2017 or later</li> <li>iMac Pro</li> <li>Mac Studio</li> <li>Mac Pro introduced in 2019 or later</li> <li>get the full list from Apple for Ventura</li> </ul>"},{"location":"intro/installing/macbuild/computer/#which-macs-are-compatible-with-macos-monterey","title":"Which Macs Are Compatible with macOS Monterey?","text":"<p>Monterey can be used for building Loop. You can install Monterey on the following:</p> <ul> <li>MacBook Pro, early 2015 or newer</li> <li>MacBook Air, early 2015 or newer</li> <li>MacBook, early 2016 or newer</li> <li>Mac Mini, late 2014 or newer</li> <li>iMac, 2015 or newer</li> <li>iMac Pro, 2017 or newer</li> <li>Mac Pro, late 2013 or newer</li> <li>get the full list from Apple for Monterey</li> </ul>"},{"location":"intro/installing/macbuild/computer/#older-macs","title":"Older Macs","text":"<p>Several experienced Loopers have reported success using OpenCore-Legacy-Patcher to enable older Macs computers to use new versions of the operating system. Use this link at your own risk. This is not suggested for novice Mac users.</p> <ul> <li>OpenCore Legacy Patcher</li> </ul> <p>Or - look into building with GitHub Actions - no Mac computer required, no need to worry about versions for Mac OS or Xcode - all done for you on GitHub (some configuration required).</p>"},{"location":"intro/installing/macbuild/computer/#next-step","title":"Next Step:","text":"<p>If you already have an Apple Developer ID or you are using a free ID, next step is Download Xcode.</p> <p>Free ID</p> <p>The free ID method only works when using the Mac / Xcode build method. The Browser Build method requires a paid developer ID ($99/year) but does not require a Mac computer.</p>"},{"location":"intro/installing/macbuild/overview/","title":"Overview","text":""},{"location":"intro/installing/macbuild/overview/#mac-build-requirements","title":"Mac Build Requirements","text":"<p>The complete requirements for building Loop with a Mac are given in the next two sections. The first list contains the common requirements that are the same regardless of build method. The second list contains the additional requirements for building with a Mac and Xcode.</p> <p>Each requirement in the list is linked to the LoopDocs pages with more information.</p>"},{"location":"intro/installing/macbuild/overview/#common-requirements","title":"Common Requirements","text":"<ol> <li>Compatible iPhone/iPod Touch</li> <li>Compatible Pump</li> <li>Compatible CGM</li> <li>RileyLink Compatible Device (not needed for Omnipod DASH)</li> <li>Apple Developer Membership (not needed if you rebuild weekly using the Mac / Xcode method)</li> </ol>"},{"location":"intro/installing/macbuild/overview/#mac-build-additional-requirements","title":"Mac Build Additional Requirements","text":"<ol> <li>Compatible Computer</li> <li>Xcode (a free Apple application)</li> </ol> <p>If building to a Simulator to try things out, the only requirements are a computer and Xcode.</p>"},{"location":"intro/installing/macbuild/overview/#getting-ready-to-build","title":"Getting Ready to Build","text":"<p>Review the Common Requirements pages, listed above.</p> <p>Then review the Build pages for the method you have chosen. Read the top three boxes on each page: icons for those boxes are displayed below for reference. On a desktop, you can use <code>n</code> for next and <code>p</code> for previous.</p> <p>Time Estimate</p> <p>Summary</p> <p>FAQs</p> <p>Next, read pages completely and skim Oh dear! Build errors?. Most of the mistakes you can make when building with Xcode and a Mac have already been made. The Build Errors page shows how to fix them.</p> <p>When you are ready to proceed, complete the tasks on each page.  You can do one a day, take a week per page or blaze through them quickly.  Just be sure to read carefully and if you are confused - reach out for help: How to Find Help.</p> <p>After you build Loop on your phone, keep following along in the docs as you Set up and Operate your Loop app.</p>"},{"location":"intro/installing/macbuild/overview/#what-if-i-get-stuck","title":"What if I get stuck?","text":"<p>Try to:</p> <ul> <li>Scroll back in the directions and see if you missed a paragraph or step.</li> <li>Compare your screen's display with the graphics in the step. Is something different or does yours have an error message? If you have an error message, does it guide you to the problem and solution?</li> <li>If you are still stumped - reach out for help: How to Find Help.</li> </ul>"},{"location":"intro/installing/macbuild/xcode/","title":"Xcode","text":""},{"location":"intro/installing/macbuild/xcode/#download-xcode","title":"Download Xcode","text":"<p>Time Estimate</p> <ul> <li>45 minutes to 2 hours, depending on internet connection...but you don't need to babysit the download.</li> </ul> <p>Summary</p> <ul> <li>Check iPhone/iPod iOS version<ul> <li>The iOS version determines minimum Xcode version</li> <li>The minimum Xcode version determines minimum macOS version<ul> <li>To make it even more fun, the minimum macOS depends on whether your Mac uses M1 or is Intel-based (Mac or VM)</li> </ul> </li> <li>If necessary, update macOS first and then return to this step</li> </ul> </li> <li>Download Xcode from your computer's App Store application</li> </ul> <p>FAQs</p> <ul> <li>\"Why isn't my Xcode installing?\" The two most common reasons are:<ol> <li>Lack of internet connection, or</li> <li>Not enough space on your hard drive<ul> <li>Xcode is a large download, and needs at least 50GB of space to properly unpack and install itself</li> <li>If you do not have enough space on your hard drive, you will have installation failures</li> <li>Check the Space Available</li> <li>Although the download takes a long time, the good news is you can walk away once the download starts. If your laptop goes to sleep when you close the lid or when the screen saver starts, disable the screen saver and leave the laptop open.</li> <li>After Xcode has finished downloading (looks like the progress bar is almost completed), it takes a long time to unpack and install, be patient</li> </ul> </li> </ol> </li> <li>\"Can I install Xcode on an external drive?\" Unfortunately, no. Xcode needs to be on the Mac hard drive. But other things--like photos and documents--can be moved to an external drive to make room for macOS and Xcode updates.</li> </ul>"},{"location":"intro/installing/macbuild/xcode/#what-is-xcode","title":"What is Xcode?","text":"<p>Xcode is a free application for Apple computers. You will use Xcode to turn the \"raw\" Loop source code into an iOS application and install it onto your iPhone/iPod.  Which version of Xcode you install on your computer depends on the iOS version you have on the iPhone/iPod you are going to be installing Loop on and the macOS version you have on your computer. </p> <p>Because of the complexity of these dependencies, please read this entire page.</p> <p>Or - look into building with GitHub Actions - no Mac computer required, no need to worry about versions for Mac OS or Xcode - all done for you on GitHub (some configuration required).</p>"},{"location":"intro/installing/macbuild/xcode/#which-version-of-xcode-do-i-need","title":"Which version of Xcode do I need?","text":"<p>First, choose a version of Xcode appropriate for your iOS device. Then, determine the minimum macOS version required for that Xcode version. Update to at least that minimum macOS version. Then follow the instructions to download and install Xcode (or update an existing installation):</p> <ul> <li>Open the App Store on your computer and search for \"Xcode\"</li> <li>If the version number you need is bigger than what is shown in the App Store, you need to first update your macOS<ul> <li>Do not rely on the version number in this graphic</li> </ul> </li> </ul> <p></p>"},{"location":"intro/installing/macbuild/xcode/#version-relationship-overview","title":"Version Relationship Overview","text":"<p>Have you turned off automatic updates on your iOS device?</p> <p>Loop and iOS Updates</p> <p>Please Read: Turn Off Automatic Updates</p> <p>Before manually accepting an iOS update, be sure you have compatible versions of Xcode and MacOS.  </p> <p>Minimum Xcode Version</p> <p>The minimum version of Xcode you need depends on the iOS version you have on your phone.</p> <p>Please Read: Minimum Version List</p> <p>Can't find the required Xcode version</p> <ul> <li>If your computer is not running the required minimum macOS, the App Store won't show the required minimum Xcode version</li> <li>You must use iOS to determine which Xcode, which determines which macOS</li> <li>Update your computer to at least that minimum macOS first</li> </ul> <p>Don't be the person who posts for help saying, \"I'm trying to update my Loop app but am getting errors.\" When asked what Xcode version they have and if they've updated, they respond, \"I don't have any Xcode updates available in the App Store, so I must be running the most current version.\"</p> <p>Actually, they forgot to check for macOS updates and therefore cannot see the needed Xcode update yet.</p>"},{"location":"intro/installing/macbuild/xcode/#after-update-reboot","title":"After Update - Reboot","text":"<p>After any update of macOS or Xcode, it is always a good idea to reboot your computer.</p>"},{"location":"intro/installing/macbuild/xcode/#how-do-all-the-minimum-versions-relate-to-each-other","title":"How do all the minimum versions relate to each other?","text":"<p>The list below contains the minimum versions of macOS and Xcode you'll need based on your iOS version. The highlighted sections, coordinated by <code>color</code> and <code>linestyle</code> in the graphic below, tie together the operating system nomenclature in the following bullets. The graphic is not updated as frequently as the words.</p> <p>Newer versions of Xcode are always OK and should be used if your computer will accept the upgrade. Xcode 14.1 is listed instead of 14.0 because that version had a lot of bugs in it.</p> <p>With the release of Loop 3.0.0, this list is pretty simple.</p> <ul> <li>Xcode 14.1 or higher is required<ul> <li>iOS 15.1 is minimum version for phone but 15.7.1 is better (for older phones)</li> <li>iOS 16.x is supported (turn on developer mode when using Mac / Xcode build)</li> </ul> </li> </ul> <p>This older list is left in for those still using code based off Loop 2.2.x</p> <ul> <li>For iOS 16 or greater, minimum macOS is 12.5<ul> <li>Minimum Xcode version is 14</li> </ul> </li> <li>For iOS 15.4 to 15.7, minimum macOS is 12.0<ul> <li>For iOS 15.5 to 15.7, minimum Xcode version is 13.4.x<ul> <li>WARNING: A first build to a phone newly updated to iOS 15.7 cannot use Xcode 14.0; Xcode 13.4.1 and 14.0.1 (or greater) are fine</li> </ul> </li> <li>For iOS 15.4.x, minimum Xcode version is 13.3</li> </ul> </li> <li>For iOS 15.1 to 15.3.x, minimum macOS is 11.3<ul> <li>For iOS 15.2.x to iOS 15.3.x, minimum Xcode version is 13.2</li> <li>For iOS 15.1.x, minimum Xcode version is 13.0</li> </ul> </li> </ul>"},{"location":"intro/installing/macbuild/xcode/#wikipedia-chart-for-apple-versions","title":"Wikipedia Chart for Apple Versions","text":"<p>This graphic (copied from Wikipedia and last updated March 2022) is not updated with every iOS update - use it as a map to read the minimum requirements.  Every attempt will be made to update the words in the Minimum Version List promptly - that's much easier than updating a graphic.</p> <p>Follow this link to Wikipedia and scroll down to the the current version of this figure - the graphic shown below is a map of how to read the current version of this figure at Wikipedia.</p> <p></p>"},{"location":"intro/installing/macbuild/xcode/#what-happens-if-you-try-using-too-old-of-xcode","title":"What happens if you try using too old of Xcode?","text":"<p>It isn't some catastrophic failure if you try to build with an outdated Xcode without realizing it. If the build fails, nothing happens to your phone (or Loop on your phone if you are rebuilding).  Nothing is copied from the computer to the phone until after you see the Build Succeeded message. You'll see a pretty obvious error message during your Loop build that says \"Could not locate device support files.\" That messages is telling you that your iOS on the phone requires you to get a newer version of Xcode to be able to build Loop onto that phone.</p> <p></p> <p>So, if you see that error message, realize you may have to update your macOS to be able to see the newest Xcode version that you will need. Make sure to check that chart to see what your minimum versions are for the iOS you are running on your iPhone.</p> <p>With Loop 3, there is a new error when the Xcode version does not support the phone iOS. You will see Package.resolved file corrupted or malformed</p>"},{"location":"intro/installing/macbuild/xcode/#next-step-xcode-preferences","title":"Next Step: Xcode Preferences","text":"<p>Now you are ready to set up Xcode Preferences.</p>"},{"location":"intro/installing/macbuild/xcodepref/","title":"Xcodepref","text":""},{"location":"intro/installing/macbuild/xcodepref/#xcode-preferences-or-settings","title":"Xcode Preferences (or Settings)","text":"<p>Time Estimate</p> <ul> <li>about 10-15 minutes to install the Command Line Tools</li> <li>5 minutes to add your Apple ID, assuming you remember your password</li> </ul> <p>Summary</p> <p>ALERT: the Xcode menu structure has changed:</p> <ul> <li>For Xcode 13.x and earlier: Xcode-&gt;Preferences</li> <li>For Xcode 14.x and later: Xcode-&gt;Settings</li> </ul> <p>The LoopDocs instructions have been updated to Preferences (or Settings). Choose that one that matches your version of Xcode.</p> <ul> <li>Verify that Command Line Tools are installed: Xcode-&gt; Preferences (or Settings) -&gt; choose Locations tab.</li> <li>Add your Apply ID:  Xcode-&gt; Preferences (or Settings) -&gt; choose Accounts tab.</li> </ul> <p>FAQs</p> <ul> <li>\"I still only see an account with <code>(personal team)</code> beside it even though I enrolled in the paid Developer Account program...what should I do?\" You should check your spam email box in case Apple sent you an email there. Make sure you've waited the 48 hours that Apple says it may take to get your account approved. If it's been 48 hours and you still don't see anything in your email, contact Apple support and ask them about the status of your enrollment. It may be held up by something on their end.</li> </ul>"},{"location":"intro/installing/macbuild/xcodepref/#xcode-version","title":"Xcode Version","text":"<p>Open Xcode from your Applications folder. If it offers to start a new project with you, just close that window.</p> <p>Click on the Xcode-&gt;About Xcode menu item. The version number is displayed.</p>"},{"location":"intro/installing/macbuild/xcodepref/#watchos-simulators","title":"watchOS Simulators","text":"<p>Yes, watchOS simulators are required to build Loop. If Xcode asks if you want to download them - say yes. It's slow but you cannot build Loop without the simulator.</p> <ul> <li>Tap on New with Xcode 14 for more information</li> </ul>"},{"location":"intro/installing/macbuild/xcodepref/#command-line-tools","title":"Command Line Tools","text":"<p>The very first time you open Xcode it may install a package of command line tools. Wait patiently until it finishes.  The command line tools may have installed without asking.</p> <ul> <li>Check that your Command Line Tools installed correctly.<ul> <li>First, open Xcode Preferences (or Settings)<ul> <li>Click on the word <code>Xcode</code> in the top menu bar (just to the right of the Apple icon in the upper-left corner) and select <code>Preferences</code>  (or <code>Settings</code>) in the drop-down menu</li> </ul> </li> <li>Then select the <code>Locations</code> tab in the Preferences (or Settings) window to see the dropdown menu for Command Line Tools.  Make sure the Xcode version listed matches what you just installed (not the version in this graphic)</li> </ul> </li> <li>If it's blank, use the blue arrows to the right of the Command Line Tools row to select it</li> </ul> <p></p>"},{"location":"intro/installing/macbuild/xcodepref/#add-apple-id","title":"Add Apple ID","text":"<p>Go to the Xcode Preferences (or Settings) window from above, click on the <code>Accounts</code> tab and then press the + in the lower-left corner to add an Apple ID account.</p> <p></p>"},{"location":"intro/installing/macbuild/xcodepref/#xcode-accounts-tab","title":"Xcode Accounts Tab","text":"<p>The Xcode Accounts Tab, shown in the graphic (from Xcode 13) below allows you to have more than one account available to choose from when you sign your targets (another new term that is explained later).  Normally, you would only have one.</p> <p>In the graphic, whichever item is selected on the left side (highlighted by Xcode in blue) shows up with more details on the right side of the display. If the Free account had been selected, the information shown in the red inset would have been displayed.</p> <p>Free and Paid</p> <p>The graphic below shows examples for a paid account and a free account. You will only see one.</p>"},{"location":"intro/installing/macbuild/xcodepref/#free-developer-account","title":"Free Developer Account","text":"<p>If you want to use a free developer account, you will simply enter your Apple ID in this section and Xcode will automatically enroll your Apple ID in the free developer program. It will show up with the <code>(Personal Team)</code> and <code>User</code> indication.</p>"},{"location":"intro/installing/macbuild/xcodepref/#paid-developer-account","title":"Paid Developer Account","text":"<p>If you enrolled in the paid account already and have confirmation that your account is active, enter the Apple ID of the paid developer account. It will show up with just your name and the <code>Admin</code> indication. If you have enrolled and are waiting, the <code>(Personal Team)</code> and <code>User</code> indication shows up until the paid account is confirmed by Apple.</p> <p>Description</p> <p>The description line is initially empty. You can add your own description or just leave the line blank. Text added to the decription line shows up in two places: To the left, just above the email address and to the right once that Apple ID is selected.</p> <p></p> <p>You are now done setting up Xcode.  Great job!  You will not need to redo the account setup steps on any subsequent builds or updates of your Loop app.  Xcode will remember these settings.</p>"},{"location":"intro/installing/macbuild/xcodepref/#next-step-build-loop","title":"Next Step: Build Loop","text":"<p>Now you are ready to Build Loop.</p>"},{"location":"intro/requirements/cgm/","title":"Cgm","text":""},{"location":"intro/requirements/cgm/#compatible-cgm","title":"Compatible CGM","text":"<p>Time Estimate</p> <ul> <li>10 minutes to read this page</li> </ul> <p>Summary</p> <p>iAPS is compatible with:</p> <ul> <li>Dexcom G4 Share, G5, G6, G7 or ONE CGM systems<ul> <li>Dexcom ONE is available in some countries</li> </ul> </li> <li>Medtronic enlite sensors connected to a iAPS compatible Medtronic pumps</li> <li>Libre 1 or European Union Libre 2</li> </ul>"},{"location":"intro/requirements/cgm/#continuous-glucose-monitor-cgm","title":"Continuous Glucose Monitor (CGM)","text":"<p>iAPS uses your CGM glucose readings, carbohydrate input and therapy settings, to model your current glucose trend, predict future glucose and automatically adjust insulin dosing. A compatible CGM is essential to operation of the iAPS app.</p>"},{"location":"intro/requirements/cgm/#dexcom-g5-g6-g7-and-one-cgm","title":"Dexcom G5, G6, G7 and ONE CGM","text":"<p>The Dexcom sensors transmit data directly to the Dexcom app on your iPhone via Bluetooth.</p> <p>The Dexcom ONE, available in some countries, acts just like the G6 as far as iAPS is concerned. The Dexcom ONE app does not provide some features, such as Dexcom Share, that come with the G6. When you set up iAPS, select Dexcom G6 as your CGM to use Dexcom ONE CGM with the Dexcom ONE app installed on your phone.</p> <p>If the Dexcom app is on the same device as iAPS, iAPS can function without an internet connection. See Offline Use below.</p>"},{"location":"intro/requirements/cgm/#medtronic-cgm","title":"Medtronic CGM","text":"<p>The Minimed Enlite CGM, available with the Medtronic 522/722, 523/723, and 554/754, wirelessly sends glucose readings to the pump. iAPS can read the Medtronic CGM data directly from the pump using a RileyLink compatible device.</p>"},{"location":"intro/requirements/cgm/#offline-use","title":"Offline Use","text":"<p>\"Offline Use\" means using iAPS when there is no cell data or internet available. iAPS does not require any special setup to operate offline.</p> <p>For offline iAPS use, the iPhone's Bluetooth still needs to be active; and for Dexcom users, the G5, G6 or G7 app also needs to be running on your iAPS phone. If you put your iPhone into Airplane mode, remember to turn Bluetooth back on to keep your iAPS running. If your offline use is failing, chances are you have forgotten to update your transmitter ID in iAPS settings when you changed transmitters.</p>"},{"location":"intro/requirements/iphone/","title":"Iphone","text":""},{"location":"intro/requirements/iphone/#compatible-iphone-or-ipod-touch","title":"Compatible iPhone or iPod touch","text":"<p>Time Estimate</p> <ul> <li>5 minutes, to check your device and iOS</li> <li>20 minutes, if need to update your compatible device to a new iOS</li> <li>10 minutes, if you need to order a compatible device from Apple website</li> <li>0 minutes, if you own an Android device and won't buy Apple products; check out AndroidAPS Documention</li> </ul> <p>Summary</p> <ul> <li>Check your iPhone/iPod touch against the device compatibility list<ul> <li>For all devices, the newest iOS is strongly recommended</li> </ul> </li> <li>Make sure the phone has good battery life</li> <li>Turn off automatic updates</li> </ul> <p>FAQs</p> <ul> <li>\"Can I use an Android?\" No. Check out AndroidAPS Documention.</li> <li>\"Does my iPhone need a cell plan?\" No. iAPS works using communication on your phone with your CGM and your pump; no internet connection required. However, if access to Dexcom Follow or Nightscout monitoring of iAPS is a priority, then a cell plan may be desired.</li> </ul>"},{"location":"intro/requirements/iphone/#which-devices-are-compatible","title":"Which Devices Are Compatible?","text":"<p>iAPS requires a relatively recent iPhone. The faster the phone, the better for the algorithm. You need a minimum version of the mobile operating software, called the phone's \"iOS\", to be installed on your iPhone or iPod touch. iAPS is compatible with iPhones running on iOS 15.1 or newer.</p>"},{"location":"intro/requirements/iphone/#compatible-devices","title":"Compatible Devices","text":"<p>These devices are compatible with iOS 15.1 and newer iOS.</p> <ul> <li>iPhone 14, all variants</li> <li>iPhone 13, all variants</li> <li>iPhone 12, all variants</li> <li>iPhone 11, all variants</li> <li>iPhone X, all variants</li> <li>iPhone 8, all variants</li> <li>iPhone SE (3rd generation or later model; 2022 first release)</li> <li>iPhone SE (2nd generation; 2020 first release)</li> </ul> <p>These devices are compatible with iAPS, which requires iOS 15.1, but cannot be upgraded to iOS 16.</p> <ul> <li>iPhone 7, all variants</li> <li>iPhone 6s, all variants - but note the \"s\"</li> <li>iPhone SE (1st generation; 2016 first release)</li> </ul>"},{"location":"intro/requirements/iphone/#find-your-devices-ios","title":"Find Your Device's iOS","text":"<p>Your phone's iOS version can be found under the phone Settings -&gt; General -&gt; About display as shown below. The iOS number is found on the <code>Software Version</code> line. When you start on looping, you should delay iOS updates until others have confirmed the software functions as normal on the newest update.</p> <p></p>"},{"location":"intro/requirements/iphone/#developer-mode-mac-build","title":"Developer Mode - Mac Build","text":"<p>With iOS 16 and watchOS 9, Apple added a feature. If you want to know more, click on this Apple Link about Developer Mode.</p> <p>When you build iAPS on your phone from Xcode directly and then transition to or start with iOS 16, you need to have Developer Mode enabled. This is also a requirement to use the iAPS app on a watch paired to your phone running watchOS 9. </p> <p>Developer Mode with iOS 16, watchOS 9</p> <p>If you already have iAPS, built with Xcode on a Mac, on your phone/watch when you update to iOS 16/watchOS 9, you will be told that iAPS requires Developer Mode to run.</p> <p>You will not be able to run iAPS on your phone (or watch) until you have enabled Developer Mode on the device(s).</p> <p></p>"},{"location":"intro/requirements/iphone/#battery-health","title":"Battery Health","text":"<p>Make sure the battery on your phone is solid. Your phone will become a critical health device - you want it to keep working.</p> <ul> <li>Make sure a charger and cord are in your diabetes supplies</li> <li>Consider buying a battery pack, keep it charged and add it to your travel bag</li> </ul> <p>Low Power Mode</p> <p>With newer iOS (15 and 16), some people have reported iAPS continues working in the background (phone locked) even in Low Power Mode. Others, have reported they still get red loops. You can experiment to determine if your phone/iOS/app is able to maintain green loops in low power mode.  Otherwise, best practice is to avoid Low Power Mode.</p>"},{"location":"intro/requirements/iphone/#turn-off-automatic-updates","title":"Turn Off Automatic Updates","text":"<p>Apple provides updates regularly to the iOS.  Often, these updates include critical security patches in addition to improved new features.</p>"},{"location":"intro/requirements/iphone/#why-turn-off-automatic-updates","title":"Why Turn off Automatic Updates?","text":"<ul> <li>Once you accept an iOS phone update, you cannot go backwards<ul> <li>Some iOS updates require updates to Xcode and macOS before people can build iAPS on that device again</li> <li>It is rare, but iOS updates have caused iAPS to stop working until other updates were made and iAPS was rebuilt on that phone</li> </ul> </li> <li>Turn off automatic updates so you can choose when to update your phone and avoid being caught without a working iAPS app</li> <li>Google the instructions for your device:<ol> <li>Configure your phone to automatically download the updates</li> <li>Choose to perform the installation of the updates manually</li> </ol> </li> </ul>"},{"location":"intro/requirements/pump/","title":"Pump","text":""},{"location":"intro/requirements/pump/#compatible-pump","title":"Compatible Pump","text":"<p>Time Estimate</p> <ul> <li>Omnipod users: 3 seconds to remember which PDM you've been using.</li> <li>Medtronic users: 10 minutes to put a battery in and look at model and firmware</li> <li>Other pump users: 5 days to email friends asking them to check closets for their old Medtronic pump or call your insurance to start prior authorization for Omnipod</li> </ul> <p>Summary</p> <ul> <li>If you have a Medtronic pump, check the Medtronic Pump Version list to ensure compatible model/firmware</li> <li>If you use Omnipod - check which kind</li> </ul> <p>FAQs</p> <ul> <li>\"How can I find a compatible Medtronic pump?\" Refer to Finding a Medtronic Pump</li> <li>\"What are the differences between Medtronic pump models?\" This question is also answered in the Extra Details section</li> <li>\"But what about the other types of pumps?\" No other pumps work with Loop at this time  <ul> <li>There are other open-source closed loop options such as AAPS: Android Artificial Pancreas System and OpenAPS that support other pumps.</li> </ul> </li> <li>\"Can I change the firmware of my Medtronic pump?\" No.</li> </ul>"},{"location":"intro/requirements/pump/#pumps-compatible-with-loop","title":"Pumps Compatible with Loop","text":"<p>There are three types of pumps compatible with Loop.</p> <ul> <li>Older Medtronic pumps</li> <li>Omnipod Eros pumps</li> <li>Omnipod DASH pumps</li> </ul>"},{"location":"intro/requirements/pump/#check-medtronic-pump-version","title":"Check Medtronic Pump Version","text":"<ul> <li>Medtronic 515 or 715 (any firmware)</li> <li>Medtronic 522 or 722 (any firmware)</li> <li>Medtronic 523 or 723 (firmware 2.4 or lower)</li> <li>Medtronic Worldwide Veo 554 or 754 (firmware 2.6A or lower)</li> <li>Medtronic Canadian/Australian Veo 554 or 754 (firmware 2.7A or lower)</li> </ul> <p>If you have one of the pumps listed above, you are good to go on Loop! Congrats!</p>"},{"location":"intro/requirements/pump/#extra-details-on-medtronic","title":"Extra Details on Medtronic","text":"<p>There are a number of Medtronic insulin pumps manufactured between 2006 \u2013 2012 which are Loop compatible.  Compatibility has two requirements: (1) pump model and (2) firmware.</p>"},{"location":"intro/requirements/pump/#medtronic-pump-model","title":"Medtronic Pump Model","text":"<p>To determine your pump model, look at the backside of your pump.  There should be a sticker on the underside of the pump.  On the right-hand side of the sticker, it says REF MMT-XXXXXX</p> <p></p> <ul> <li>MMT ---&gt; Pump Manufacturer Model (MiniMed Medtronic)</li> <li>722 ---&gt; Pump Model Number</li> <li>NA ---&gt; Pump Region (NA=North America, CA=Canada/Australia, WW=Worldwide)</li> <li>S ---&gt; Pump Color (S=Smoke, L=Clear/Lucite, B=Blue, P=Pink/Purple)</li> </ul> <p>Some pumps may have an \u201cL\u201d or \u201cS\u201d or \"R\" before the pump region, e.g. a model number like MMT-722LNAS.  This does not affect Loop compatibility.</p>"},{"location":"intro/requirements/pump/#medtronic-pump-firmware","title":"Medtronic Pump Firmware","text":"<p>A pump\u2019s firmware is the internal software that runs your pump.  Older Medtronic firmware allows Loop to act as a \u201cremote control\u201d to set temp basals and report back pump data.  Newer firmware disabled that \u201cremote control\u201d access and therefore cannot be used with these DIY closed-loop systems.  There is currently no ability to downgrade a pump\u2019s firmware or replace it with older firmware.  Before you buy a used pump, make sure you are getting one with compatible firmware.</p> <p>The firmware on all 515/715 and 522/722 model Medtronic pumps is compatible with Loop. You will only need to check the firmware version for 523/723 and 554/754 model Medtronic pumps.</p> <ul> <li>Medtronic 515 or 715 --&gt; any firmware</li> <li>Medtronic 522 or 722  --&gt; any firmware</li> <li>Medtronic 523 or 723 --&gt; firmware 2.4 or lower</li> <li>Medtronic Worldwide Veo 554 or 754 --&gt; firmware 2.6A or lower</li> <li>Medtronic Canadian/Australian Veo 554 or 754 --&gt; firmware 2.7A or lower</li> </ul> <p>To find your pump\u2019s firmware you will need to power it on. If the pump has not been powered on for some time (i.e., has been in storage without a battery for a while), it will run through a start-up count and the firmware version will appear on the bottom right of the pump\u2019s screen.  Don\u2019t turn away, as the version number will only be displayed for a little while before the screen moves onto other information displays.  </p> <p>If the pump has been active recently or has a reservoir installed, follow these steps:</p> <ol> <li> <p>Press the  button on your pump.  </p> </li> <li> <p>Scroll down with the  button to the bottom of the status display.  </p> </li> <li> <p>Read the bottom line of the display.</p> </li> </ol> <p></p>"},{"location":"intro/requirements/pump/#medtronic-pump-differences","title":"Medtronic Pump Differences","text":"<p>If you are in the position of being able to shop around for different pump models, there are some slight differences between the Loop-compatible Medtronic pumps.</p> <p>500 vs 700:  The difference between the Medtronic 500 series and the 700 series pumps is the size of the insulin reservoirs.  The 500 series pumps use a 180 unit reservoir, and the 700 series pumps use a 300 unit reservoir (or smaller 180 unit reservoir, if you want).</p> <p>x15/x22 vs x23/x54:  The differences noteworthy between the x15 and x22 pumps versus the x23 and x54 series pumps are:</p> <ul> <li>The x23/x54 pumps will allow for smaller insulin deliveries in certain situations, if the smaller scroll rate is selected in the Bolus&gt;Setup&gt;Scroll Rate menu.  Loop will have the insulin delivery automatically rounded by the pump to the units available in the pump model, and any smaller adjustments (to make up for the rounding) will be made through Loop\u2019s use of temp basals.  If you want the smaller increments of basal rates, you can still enter those values in the Loop app's settings and Loop will use those values for the purposes of insulin delivery calculations.</li> </ul> Pump Model Basal increments Bolus increments Range 515/715and522/722 0.050.1 0.10.1 deliveries of less than 10 unitsgreater than 10 units 523/723and554/754 0.0250.050.1 0.025 0.05 0.1 between 0.025 to 0.975 unitsbetween 1 to 9.95 unitsgreater than 10 units <ul> <li> <p>Additionally, because of the way Loop fetches information from the pump, the x23/x54 series of pumps are slightly better at conserving battery life through the use of the MySentry packets to collect information from the pump.  x22 pumps do not use MySentry.</p> </li> <li> <p>The x23/x54 series pumps are also faster at delivering boluses greater than 10 units.  On an x23 pump, a 13-unit bolus takes 5:00 minutes to complete.  On an x22 pump, a 13-unit bolus takes 8:40 minutes to complete.</p> </li> </ul>"},{"location":"intro/requirements/pump/#finding-a-medtronic-pump","title":"Finding a Medtronic Pump","text":"<p>Finding a compatible Medtronic pump is probably the most difficult part for most new Loopers.  Our suggestions:</p> <ul> <li> <p>Talk to friends in the diabetic community.</p> </li> <li> <p>Ask your endocrinologist.  </p> </li> <li> <p>Ask at a local JDRF chapter meeting if someone has an old backup pump they'd be willing to donate to you.  </p> </li> <li> <p>Join diabetic supply groups on Facebook; both for-trade and for-sale groups.  </p> </li> <li> <p>Check Craigslist often and be willing to expand your search area to include larger cities.</p> </li> <li> <p>Check out the HelpAround, NextDoor, OfferUp, and/or LetGo apps for pumps.</p> </li> <li> <p>Search Medwow for used Medtronic pumps.</p> </li> </ul> <p>Medwow has been fairly frustrating for most people; poor response rate and high prices.  The most success appears to come from either one-on-one discussions with fellow diabetics/doctors or using apps (Craigslist, NextDoor, LetGo, HelpAround).  If you are using Craigslist, you may wish to use an app on your iPhone to make the searching easier.  There are apps to search multiple cities at once for your keywords and set up alerts.</p> <p></p>"},{"location":"intro/requirements/pump/#safe-purchasing","title":"Safe Purchasing","text":"<p>If you choose to purchase from a remote or unknown seller, here are some tips for safe purchasing:</p> <ul> <li> <p>Use PayPal and purchase using the \"Goods and Services\" payment option. This costs nothing for the buyer, but the seller will lose 2.95% of the sale to PayPal fees. PayPal offers some protection for both buyer and seller in the event of fraud.  </p> </li> <li> <p>Ask for photos of the pump. Check to make sure the serial number of the pump on the backside matches the serial number of the pump showing in the display menu. Ask for a short video of the pump, or at least a photo of the pump turned on, so that you can see the pump's firmware and model number. Cracks and some wear on these pumps are expected. These pumps are not usually free of marks. Many people are successfully looping on pumps that have cracks and rub marks, but you may want to ask if you are concerned about any you see in photos.</p> </li> <li> <p>Beware if the bottom of the reservoir/motor sleeve has the drive support cap pushed out, as shown here. Those pumps will generally not work (or only work intermittently), however some people have successfully repaired those pumps as shown in that link. Just be aware that it should be checked in advance.</p> </li> <li> <p>Repairs to cracks or missing bits of plastic on battery cap area and reservoir caps are possible and not very difficult in most situations. You can read more about how to repair those here.</p> </li> <li> <p>Ask for shipping that includes a tracking number. USPS Priority Mail's smallest box is a great option.  It's only $7.20 domestically in the US and includes tracking. Ask the seller to add a small bit of packing protection such as bubble wrap around the pump to keep it safe during shipping. Make sure you get a tracking number within a reasonable period of time after you have paid.  </p> </li> </ul> <p>Red flags that may indicate a scam:</p> <ul> <li> <p>Asking for payment through \"friends and family\" on PayPal, especially if you don't know the person or have any solid references for them. Paying in that way offers you no buyer protection. It's just like giving the seller cash, so you had better trust the seller.  </p> </li> <li> <p>Offering an \"almost new\" pump is a big red flag. These pumps should be at least 5-years-old by now. Do you really think a 5 year old pump should be unused and sitting in shrink wrap at this point? This seems highly suspicious. There are some out there, but they are very infrequent.  </p> </li> <li> <p>Not able to provide new pictures of the pump when requested. Sure they posted some pictures with the ad, but what if they just downloaded them from other people's ads? The seller should be able to furnish a couple of \"new\" photos at your request. A good one to ask for is the battery and reservoir tops so you can see the condition of those.</p> </li> </ul>"},{"location":"intro/requirements/pump/#pump-supplies","title":"Pump Supplies","text":"<p>Medtronic will not typically sell pump supplies directly to customers who have not previously purchased a registered Medtronic pump. Ask your insurance about purchasing pump supplies through a durable medical equipment (DME) provider. Typically, the DME provider will coordinate with your insurance and doctor's office to get the necessary insurance approval and prescriptions for the supplies. If you are brand new to Medtronic infusion sites, you may want to ask for help from friends to try a variety of infusion sets before purchasing a full 90-day supply of any type in particular.</p>"},{"location":"intro/requirements/pump/#omnipod-pumps","title":"Omnipod Pumps","text":"<p>Reminder and Disclaimer</p> <p>The use of Omnipod pumps with Loop is not supported by Insulet, although they are aware it is happening. Do not call Insulet asking for help with your Loop build, setup, or operation. You are fully responsible for your use of Loop and do so at your own risk. Please read these documents and familiarize yourself with Loop before using.</p>"},{"location":"intro/requirements/pump/#omnipod-eros","title":"Omnipod Eros","text":"<p>Eros pods were launched in 2013 and continue to be sold by Insulet. As far as we know, there have been no plans or timelines announced for the discontinuation of Eros pods for existing customers. Insulet doesn't specifically call these \"Eros\" anymore, they just use the term \"omnipod system\". For clarity, from Insulet's webpage:</p> <p>Eros system has that PDM we all recognize from the last several years.</p> <p></p>"},{"location":"intro/requirements/pump/#omnipod-dash","title":"Omnipod DASH","text":"<p>Insulet has announced their DASH system as an eventual replacement for the Eros/Omnipod System. The DASH system has the newer, slimmer locked-android PDM and built-in BLE communications in the pod, so there is no requirement for a RileyLink compatible device. </p> <p>Loop 3.0 and later works with DASH pods. If your version of Loop is 2.2.9 or earlier, you cannot use DASH pods.</p> <p></p>"},{"location":"intro/requirements/pump/#omnipod-5","title":"Omnipod 5","text":"<p>Loop does not support Omnipod 5 pods.</p>"},{"location":"intro/requirements/pump/#next-step-compatible-cgm","title":"Next Step: Compatible CGM","text":"<p>Now you are ready to check if you have a Compatible CGM.</p>"},{"location":"intro/requirements/rileylink/","title":"Rileylink","text":""},{"location":"intro/requirements/rileylink/#order-a-rileylink-compatible-device","title":"Order a RileyLink Compatible Device","text":"<p>Not needed for DASH</p> <p>Time Estimate</p> <ul> <li>15-20 minutes to read about RileyLink compatible devices</li> <li>15 minutes to order a device</li> </ul> <p>Summary</p> <ul> <li>Decide what kind of RileyLink compatible device to buy</li> <li>Order your compatible device</li> </ul> <p>FAQs</p> <ul> <li>What is a RileyLink Compatible Device? RileyLink refers to both the communication protocol and the name of the original device. Other DIY Loopers have created RileyLink Compatible Devices that use the RileyLink protocol. At the current time, RileyLink, OrangeLink and EmaLink devices are available for purchase and all can be used interchangeably with Loop.</li> <li>Do I have to buy one? These are open-source hardware devices, but it takes special skills to build them yourself. It is recommended you buy one (or two).</li> <li>\"What happens if I lose my RileyLink compatible device or walk away from it?\" Within a half hour, your pump returns to normal scheduled basal rate</li> <li>\"Can I swap out RileyLink compatible devices at any time?\" Yes, you can. You do not need to start a new pod or rebuild the Loop app. Tap on the pump menu in Loop settings to search for new devices and enable Loop to create a Bluetooth connection. You can swap between RileyLink, OrangeLink, EmaLink or some future RileyLink compatible device.</li> <li>\"How close does the RileyLink compatible device need to be to me? Do I have to carry it with me?\" See RileyLink Compatible Device Range.</li> </ul>"},{"location":"intro/requirements/rileylink/#what-is-a-rileylink-compatible-device","title":"What is a RileyLink Compatible Device","text":"<p>The RileyLink compatible device is required to allow your phone to talk to Compatible Medtronic and Omnipod Pumps.</p> <p>Details for RileyLink</p> <p>The RileyLink compatible device is an open-source hardware device that can bridge Bluetooth Low Energy (BLE) to the radio-frequency wireless communication used by select Medtronic and Omnipod pumps.</p> <p>Loop 3 has Omnipod DASH support, among other new features. When using Omnipod DASH, the RileyLink compatible device is not necessary.  If you are using Medtronic or Omnipod (Eros, not DASH), you still need the device regardless of which version of Loop you are running.</p> <p>Medtronic and Omnipod Eros pumps require a RileyLink compatible device.</p> <p></p>"},{"location":"intro/requirements/rileylink/#rileylink-compatible-devices","title":"RileyLink Compatible Devices","text":"<p>The RileyLink protocol defines a specific bluetooth interface and way of opening a Sub-GHz radio channel to pumps. All RileyLink compatible devices follow the RileyLink protocol.</p> <p>There used to be just one option, the original RileyLink. Now there are more options, so you have to make a decision. Depending on your choice, be sure to have the correct charger and cables or batteries handy and add spare compatible supplies to your diabetes go-bag.</p> <ul> <li>A Comparison Chart is provided by the GetRileyLink organization for all the RileyLink compatible devices listed below</li> <li>RileyLink<ul> <li>Designed by Pete Schwamb</li> <li>Rechargable battery (max 36 hours per charge)</li> <li>No longer available new, check these Facebook Groups for used ones:<ul> <li>Loop Resale</li> <li>Looping in a time of covid</li> </ul> </li> </ul> </li> <li>OrangeLink<ul> <li>Designed by Vic Wu, available from GetRileyLink</li> <li>Uses 2 AAA batteries, batteries typically last weeks or more, depending on batteries/pump type</li> <li>Works with either Omnipod or Medtronic</li> <li>Uses new chipsets, reported to have longer range</li> <li>Matches Apple Airpod form factor, so you can use airpod cases</li> </ul> </li> <li>EmaLink<ul> <li>Designed by Sorin Kupas-Spunei to increase range, offer smaller sizes</li> <li>Rechargable battery (various case/battery sizes available)<ul> <li>Micro/Nano: 2 to 3 days</li> <li>Standard: 6 to 7 days</li> <li>Maxx: 12 to 14 days</li> </ul> </li> <li>Must order either Omnipod or Medtronic version</li> <li>This EmaLink Information includes photos of various EmaLink configurations as well as photos showing relative sizes of EmaLink, OrangeLink and RileyLink</li> <li>In North America, available from EmaLink.us</li> </ul> </li> </ul>"},{"location":"intro/requirements/rileylink/#more-information","title":"More information","text":"<p>There is an entire FAQs page on RileyLink Compatible Devices.</p> <p>Sections of interest include:</p> <ul> <li>Firmware Update information on the OrangeLink</li> <li>Ema and Orange Patch to see extra features on the Loop 2.2.x app screens</li> </ul>"},{"location":"intro/requirements/rileylink/#waiting-for-your-rileylink-compatible-device","title":"Waiting for your RileyLink Compatible Device","text":"<p>While you are waiting for the RileyLink compatible device to arrive, you can proceed with these build directions and can try one of the Simulated Loop options. After that, unless you are using Omnipod DASH, you'll have to wait for your device.</p> <p>The population of DIY loopers (Loop and Android APS) has grown enough that you might be able to find someone local to loan you their spare.</p>"},{"location":"operate/interface/","title":"User Interface","text":""},{"location":"operate/interface/#main-screen","title":"Main Screen","text":"<p>The main screen of iAPS can be divided into three sections: </p> <ul> <li>Status (top)</li> <li>Graphs and Statistics (middle)</li> <li>Actions (bottom)</li> </ul>"},{"location":"operate/interface/#status","title":"Status","text":"<p>The Status section shows your current insulin on board (IOB), carbs on board (COB), blood glucose, pump status, and looping status. A yellow loop indicates a loop cycle has not occured in the last 30 minutes, whereas a red loop indicates a cycle has not occured for longer. </p> <p>Tapping the top of the screen will give you information on changes implemented by the most recent loop cycle.</p>"},{"location":"operate/interface/#graphs-and-statistics","title":"Graphs and Statistics","text":"<p>The middle of the screen graphs your current blood sugar data and inputted carbs overlayed with iAPS's insulin delivery and blood sugar predictions.</p> <p>The zero temp (ZT) line predicts where your blood sugar would be if insulin delivery and carb absorption were ceased. The IOB line predicts where blood sugar would be if insulin deliver was ceased and carb absorption were minimal. The unannounced meal (UAM) line predicts how long blood glucose will continue to rise, to dose insulin accordingly. For more information on prediction lines, see the OpenAPS documentation.</p> <p>If enabled, statistics are displayed underneath these graphs detailing your time in range, coefficent of variance (CV) and average glucose. Tapping in this area allows you to change the time interval used to calculate these statistics.</p>"},{"location":"operate/interface/#actions","title":"Actions","text":"<p>At the bottom of the screen, you have four action icons:</p> <ul> <li>Meal bolus</li> <li>Temp Targets</li> <li>Correction Bolus</li> <li>Settings</li> </ul> <p>The left icon is the meal bolus option which allows you to enter Carbs and bolus accordingly. If you have \"Fat And Protein Conversion\" enabled, you will also be provided the option to enter fat and protein content in grams.</p> <p>The target icon allows you to set temporary targets. Most common targets are a high target for exercise, and a low target in preparation for meals. </p> <p>The insulin drop icon allows you to give manual correction boluses. Manually correcting is not recommended if you are using iAPS's SMB and UAM feature.</p> <p>The rightmost icon allows you to access your iAPS settings. The settings screen allows you to adjust your configuration. Please see Configure for more information on each configuration option.</p> <p> </p>"},{"location":"operate/temptarget/","title":"Temporary Targets","text":""},{"location":"operate/temptarget/#exercise","title":"Exercise","text":"<p>Highlights</p> <ul> <li>Pack a snack when you plan to exercise</li> <li>Set a high temptarget 1-2 hours before your exercise</li> <li>Enable exercise related settings in preferences to reduce insulin delivered while exercising</li> </ul> <p>Exercise can have immediate and long term effects on glycemic control. Generally individuals will find their blood sugar drops during intense exercise, and continues to drop for 3-4 hours after. They may also experience increased insulin sensitivity for 24 hours after exercise.</p> <p>It is important you are consuming enough slow-acting carbohydrates before and after your exercise session. Pack a snack incase a source of simple carbs is needed during your routine. </p> <p>iAPS has some quality of life features that can make exercise easier to do while looping. When you plan to exercise, set a temptarget approximately 3 mmol/L above your normal target 2 hours before your exercise. If you have SMB enabled, be sure that \"Allow SMB With High Temptarget\" is disabled. Finally, you can enable \"High Temptarget Raises Sensitivity\" to prevent iAPS from providing too much insulin during exercise. </p>"},{"location":"operate/temptarget/#pre-meal","title":"Pre-Meal","text":"<p>Highlights</p> <ul> <li>Set a low temptarget 1-2 hours before meals to help with spikes</li> <li>Enable \"Low Temptarget Lowers Sensitivity\" to allow for greater insulin delivery</li> </ul> <p>If you plan to eat soon, you may want iAPS to provide you extra room to fill up on carbs. One way you can do this is by setting a temptarget approximately 1 mmol/L below your target, 1-2 hours prior to meals. You can also enable \"Low Temptarget Lowers Sensitivity\"  to give yourself more insulin for the upcoming meal and to bring your blood sugar down faster to the pre-meal range.</p>"},{"location":"operate/troubleshoot/","title":"Optimizing and Troubleshooting Your Settings","text":"<p>Adapted from looptips</p>"},{"location":"operate/troubleshoot/#morning-iob","title":"Morning IOB","text":"<p>Highlights</p> <ul> <li>Check your morning IOB: if it is positive, increase your basal rates, if it is negative, decrease your basal rates.</li> </ul> <p>One of the easiest ways of optimizing your basal rates is by checking your IOB when you wake up in the morning. iAPS uses your basal profile as its net zero. If iAPS needs to give you more insulin overnight than your set basal rates, your IOB will be positive. Likewise, if you need less insulin overnight than your current basal rates, it will be negative. You can adjust your basal profile by 10%, and reassess the impact the following morning. Below are some nightscout images showing the impact of changing basal rates on IOB. You can also view your IOB on iAPS itself.</p> <p> </p> <p>Inaccurate basal rates can impact your control in a number of ways. Their values determine how much insulin iAPS delivers with temporary basal rates and autobolus functions. If you consistently have negative IOB in the morning, you are at danger of having lows when your blood sugar rises above your correction range.</p> <p>Note that iAPS does adjust your basal profile with autotune, but this system is slow and has strict limits to prevent too much divergence from your set settings. If your basal rates are widely inaccurate, its best to make manual changes. </p>"},{"location":"operate/troubleshoot/#site-change-or-failure","title":"Site Change or Failure","text":"<p>Highlights</p> <ul> <li>Pump changes can temporarily impact control. </li> <li>Pump failures can negatively impact control for hours. Turn off closed loop when failure is discovered, and only turn back on when a new pump is installed.</li> </ul> <p>Pump site changes can negatively impact your immediate glycemic control. Different delivery sites vary in their ability to absorb insulin, impacting your perceived insulin sensitivity. iAPS should be able to accommodate to this change by resetting its Autosens meaurements (assuming \"Rewind Resets Autosens\" is on) and adapting as needed.</p> <p>Pump failures can result from kinks or improper insertion of the cannula. As a result of a pump failure, iAPS may come under the impression that more insulin is on board the patient than what was delivered, leading to sustained highs even after the pump is replaced. </p> <p>When you find out your pump has failed, immediately turn off closed loop to prevent iAPS from trying to deliver more insulin. Upon your next pump installation, you can then start closed loop and be patient. iAPS will wait for the calculated insulin on board to drop before continuing to deliver insulin.</p>"},{"location":"operate/troubleshoot/#low-treatment","title":"Low Treatment","text":"<p>Highlights</p> <ul> <li>Enter carbs for treatment into iAPS but do not bolus for it</li> <li>Consider reducing your profile ISF or Adjustment Factor if Dynamic ISF is enabled.</li> </ul> <p>Low blood sugar events can happen from time to time, but you will typically not require as much carbs to treat your lows as opposed to MDI or using a pump. When you treat a low, you should still enter the carbs consumed into the iAPS system so its autotune functionality can make better choices on your ICR, ISF and basal rates.</p> <p>If you experience a roller coaster pattern of highs and lows after treating, your insulin sensitivity factor (ISF) is most likely to blame. Look to making your insulin sensitivity less aggressive by 10% or reducing your adjustment factor by 0.1 increments. </p>"},{"location":"resources/alternative/","title":"Comparison Table of Automated Insulin Delivery Systems","text":""},{"location":"resources/citations/","title":"Resources","text":""},{"location":"resources/citations/#openaps-documentation","title":"OpenAPS Documentation","text":"<p>The first place to start if you want to learn more about the underlying algorithm, is the extensive OpenAPS documentation. OpenAPS is the underlying algorithm that iAPS implements to control blood sugar, with small modifications mostly pertaining to the Dynamic settings. </p>"},{"location":"resources/citations/#androidaps-documentation","title":"AndroidAPS Documentation","text":"<p>AndroidAPS implements the same OpenAPS algorithm with dynamic enhancements and maintains an extensive documentation for new users. Recommend if you have additional questions, you skim through its documentation for your answer.</p>"},{"location":"resources/citations/#loop-documentation","title":"Loop Documentation","text":"<p>iAPS is a fork of Loop. While their underlying algorithms are different, they share some parts of their code base. Its recommended you take a quick glance in the Loop Docs for your issue, especially if it relates to pump usage and build errors. Many of these documents have been adapted from Loopdocs.</p>"},{"location":"resources/citations/#community-support","title":"Community Support","text":"<p>There are many help groups surrounding iAPS. It is likely someone else has has your issue in the past. Please visit the Discord and Telegram channels and review previous chat logs to find a solution. If you are a BC Diabetes Looper, please request a link to our Slack group from your case manager.</p>"},{"location":"resources/citations/#citations","title":"Citations","text":"<ul> <li>Loop Documentation</li> <li>Loop Tips</li> <li>OpenAPS Documentation</li> <li>AndroidAPS Documentation</li> <li>Support groups on Telegram Releases, Telegram News, Discord and Slack</li> </ul>"},{"location":"resources/bcdiabetes/bcdiabetesagreement/","title":"BC Diabetes Looping Agreement","text":"<p>Informed Consent and Waiver for Adults (18 years and older) Dr. Tom Elliott, Medical Director of Dr. T.G. Elliott Inc. (BC Diabetes) https://w.smrtwvr.com/w/5fc54955413f2/web/</p>"},{"location":"resources/bcdiabetes/bcdiabetesagreement/#background","title":"Background","text":"<p>Diabetes causes the level of glucose (sugar) in your blood to become too high. It happens when your body cannot produce enough of a hormone called insulin, which controls blood glucose. The advent of Artificial Pancreas Systems (APS, also known as Automated Insulin Delivery systems or AID) has provided the potential to significantly improve diabetes management and quality of life among people living with Type 1 and Type 2 diabetes in real-life conditions.</p> <p>Artificial Pancreas Systems (APS or APSs) are the combination of a smart insulin pump, integrated CGM and interoperable automated glycemic controller (typically a smartphone with the necessary apps). APSs are sometimes called closed-loop systems, because they work near-automatically, with minimal user input. When properly managed, APSs offer eligible patients with Type 1 diabetes or Type 2 diabetes superior glycemic control and safety over conventional treatments. APSs have been in use since 2008 for people living with Type 1 or Type 2 diabetes, but until 2018 these were all experimental. Treatments and devices are called experimental when they have not been fully approved by a national regulatory agency. In Canada this agency is called Health Canada; in the United States the agency is called the FDA; in Europe the agency is called the EMA. Currently a number of APSs are available but some are still experimental including all Do-it-Yourself (DIY) APSs, those that are not solely commercially manufactured, produced, and implemented. If you are reading this document you may be considering using a DIY APS. All DIY APSs are still experimental.</p> <p>When a drug or device is approved for medical use by the Food and Drug Administration (FDA) of the United States or Health Canada, the manufacturer produces a label to explain its use. Once a device/medication is approved by the FDA or Health Canada, physicians may prescribe it according to the label or use it off-label for other purposes. They may only prescribe it off-label if they are well-informed about the product, base its use on firm scientific methods and sound medical evidence, and maintain records of its use and effects. Although both the Omnipod Eros and Dash pumps and Dexcom G6 CGM are individually approved by Health Canada, the FDA and the EMA, their use together in a DIY APS is off-label and the entire DIY APS is considered experimental. This is because the software driving DIY APSs is not approved by any agency.</p>"},{"location":"resources/bcdiabetes/bcdiabetesagreement/#what-we-believe","title":"What We Believe","text":"<p>BC Diabetes believes that it should continue to offer people who use APSs, either DIY or commercial systems, the care and support they deserve and to which they are entitled. BC Diabetes cannot recommend the use of DIY APSs because no DIY APS is currently approved by any regulatory agency, including Health Canada. BC Diabetes must ensure that people with diabetes who are using, or planning to use a DIY APS, do so at their own risk. This is because DIY APSs, no matter how sophisticated they appear, are still considered experimental. These DIY closed-loop systems have typically been built by people with diabetes or parents of children with diabetes, for their personal use (or that of their children). Safety is a major consideration for people building and using these systems.</p> <p>People intending to use DIY APSs should be aware that they do this at their own risk, they may not receive support from their healthcare professional with any technical issues and that liability is unclear if there is a malfunction, error or problem. People intending to use DIY APSs should be competent and confident in optimizing their diabetes management using an insulin pump and CGM or flash glucose monitoring device. People intending to use a DIY APS can access support from the online DIY technology community for advice and troubleshooting. However, they must be aware that this advice is not regulated and they do so at their own risk.</p>"},{"location":"resources/bcdiabetes/bcdiabetesagreement/#approved-ap-systems","title":"Approved AP Systems","text":"<p>There are currently two commercial APSs approved by Health Canada (and three or more approved by the FDA and the EMA) some of which may not be fully covered by BC Pharmacare or private or public drug insurance providers. This link describes all insulin pump systems, including APSs available in Canada. </p> <ul> <li> <p>Medtronic 670G and 770G tubed system that currently offers temp basal adjustment. The pump and tubing are covered by BC Pharmacare but the Medtronic Guardian 3 CGM is not covered by BC Pharmacare.</p> </li> <li> <p>Tandem T-slim Control IQ tubed system that offers temp basal and microbolus adjustment: the Dexcom G6 CGM is covered by BC Pharmacare but the Tandem T-slim pump itself is not covered by BC Pharmacare.</p> </li> </ul> <p>Health Canada is currently considering two other commercial APS submissions:</p> <ul> <li> <p>The Omnipod 5 system tubeless pump system (the pump of which, the Omnipod Dash, is covered by BC Pharmacare and the CGM of which, the Dexcom G6* CGM, is also covered by BC Pharmacare) with experimental proprietary software (approved by the FDA in 2022-May).</p> </li> <li> <p>The Ypsomed tubed system (the pump of which, the Ypsopump, is covered by BC Pharmacare and the CGM of which, the Dexcom G6 CGM, is also covered by BC Pharmacare) with experimental CAMAPS software (approved by the EMA in 2021).</p> </li> </ul>"},{"location":"resources/bcdiabetes/bcdiabetesagreement/#this-consent-and-waiver","title":"This Consent and Waiver","text":"<p>This consent and waiver covers the experimental use of three experimental software systems: Loop, iAPS and androidAPS (DIY smartphone apps, together Closed Loop Apps) that work in conjunction with approved devices like the Dexcom G6 CGM and the tubeless Omnipod insulin pump. The Closed Loop Apps are not approved by Health Canada, the FDA or the EMA. However, Loop was submitted to the FDA for approval on June 12, 2020 by Tidepool (a 501(c)(3) nonprofit organization) based on an observational study of 873 Loopers as its primary evidence. </p> <p>In early 2021 Lum and colleagues described self-reported outcomes for 553 Loopers. AndroidAPS was shown to be safe and efficacious in a study of 12 subjects by Gawrecki and colleagues 2021-Apr-5 -- because freeAPSX uses the same AP algorithm as androidAPS (openAPS) -- it is assumed that freeAPSX is equally as safe and efficacious as androidAPS. As of 2022-Jul-26 BC Diabetes has installed and supported 171 Type 1 clients with Loop (n=58), androidAPS (n=12) and freeAPSX (n=101) for 3+ months with no episodes of severe hypoglycaemia or DKA and average improvements in Time in Range and A1c of 19% and 0.7% respectively accompanied by significant reductions in Diabetes Distress and Fear of Hypoglycemia. However, the number of systems installed and supported and the related data remain limited. </p>"},{"location":"resources/bcdiabetes/bcdiabetesagreement/#hardware-components","title":"Hardware Components","text":"<p>The hardware components of these three Closed Loop App systems (the Omnipod pump and Dexcom G6) are both covered by BC Pharmacare and approved by Health Canada.</p> <ul> <li> <p>BC Diabetes has observed through its support of patients using the experimental Closed Loop App APSs that these Closed Looped App systems offer equivalent or superior glucose control/incidence of severe hypoglycaemia and quality of life when compared to Medtronic and Tandem systems approved by Health Canada and the Omnipod 5* FDA-approved system at a lower price (hardware covered by BC Pharmacare). </p> </li> <li> <p>For these reasons, BC Diabetes offers to support patients wishing to use Close Loop Apps with the Omnipod pump and Riley link. </p> </li> </ul>"},{"location":"resources/bcdiabetes/bcdiabetesagreement/#possible-risks","title":"Possible Risks","text":"<p>Possible risks relating to use of all APSs, including the Closed Loop App APSs, include the risk of infection, irritation and/or slight discomfort at the points of insertion for the Dexcom G6 sensors and Omnipod patch pumps; certain side effects associated with participants' medical condition and their AID therapy; hypoglycaemia; and hyperglycaemia.</p>"},{"location":"resources/bcdiabetes/bcdiabetesagreement/#agreement","title":"Agreement","text":"<p>I hereby consent to treatment with a Closed Loop App APS and to receive services and advice from BC Diabetes with full knowledge and assumption of all associated risks. I hereby grant BC Diabetes (as well as its directors, officers, employees, insurers, agents, shareholders, affiliated corporations, predecessors, successors, beneficiaries and assigns) a full, final and complete release and discharge from any and all past, present or future complaint, demand, claims, causes of action, suits, rights, damages, losses, liabilities and costs of any nature and kind whatsoever (including for personal injury and death), howsoever arising, whether currently known or unknown, resulting from, arising out of or relating to, directly or indirectly, all services and advices rendered by BC Diabetes, including in connection with the use of any of the Closed Loop Apps.</p> <p>By installing a Closed Loop App on my phone (or a phone provided to me by BC Diabetes) with the assistance of BC Diabetes employees, I, the undersigned, hereby:</p> <p>i) Confirm that I had otherwise planned to set up a Closed Loop App myself using a standard DIY installation however given its complexity I consider that it is in my best interest to have the installation done professionally at BC Diabetes;</p> <p>ii) Understand the nature and anticipated effect of what is proposed including the significant risks and Health Canada approved alternatives available have been explained to me and I am satisfied with these explanations and I have understood them;</p> <p>iii) Understand that the Dexcom G6 and the Omnipod insulin patch pump are both approved by the FDA and Health Canada for the treatment of Type 1 and Type 2 diabetes in patients 2 years old and older. </p> <p>iv) Wish to have a Closed Loop App configured and installed on my personal phone in order to treat my Type 1 or Type 2 diabetes and I confirm that I understand the risks of this experimental treatment technology and the off label use of the Dexcom G6 and the Omnipod insulin pump and I am willing to accept the potential risks that my physician has described and discussed with me. </p> <p>v) Acknowledge that there may be other, unknown risks relating to the use of the Closed Loop Apps;</p> <p>vi) Understand that the Closed Loop Apps, the software driving my Omnipod pump based on CGM readings from a Dexcom G6 (or Freestyle Libre device) relayed in some cases via a radio transmitter device (Orangelink or other similar device), are part of experimental projects known as Loop, freeAPSX and androidAPS respectively and are not approved by Health Canada;</p> <p>vii) Assume full responsibility for running the entire system (Looping with smartphone, Omnipod, Dexcom G6/Freestyle Libre, Riley Link and Loop app) and understand that I do so at my own risk;</p> <p>viii) Understand that the iOS Closed Loop Apps are shared by BC Diabetes with their patients and clients through BC Diabetes Apple Developer TestFlight account where the Closed Loop Apps have a useful life of 90 days. To provide continuity of app support by BC Diabetes, software engineers renew the Closed Loop Apps developer license every 75-80 days, provided however that approval of Apple is obtained in order for a new app to be released. Apple has the right to refuse or delay approval of a release, which could interrupt renewal or access to the Closed Loop Apps at expiry through TestFlight. As such, I understand that BC Diabetes does not guarantee access to updated/renewed iOS Closed Loop Apps through their Apple Developer TestFlight account;</p> <p>ix) Understand and accept that, at any time without notification, the Closed Loop Apps may no longer be available without prior notice; </p> <p>x) In the event Close Loop App access is interrupted or canceled, I understand that I will need to immediately revert to an alternative insulin delivery system (retail or otherwise) to manage my diabetes or build the app myself from source code;</p> <p>xi) Agree not to copy (except for reasons of personal secure backup) or share this Closed Loop Apps with any other individual or entity without the express written consent of BC Diabetes.</p>"},{"location":"resources/bcdiabetes/bcdiabetesagreement/#individual-patient-data-ipd-sharing-statement","title":"Individual Patient Data (IPD) Sharing Statement","text":"<p>The datasets generated during and/or analyzed during the patient use of any Closed Loop Apps supported by BC Diabetes will be stored in a secure non-publicly available cloud repository maintained by Google Canada. With the patients written consent, the data collected during the use of the Closed Loop Apps will also be added to your electronic medical record at BC Diabetes. All the datasets generated during and/or analyzed during the use of the Closed Loop Apps will remain confidential to the extent provided by law. Patients will only be identified by a code number. The key to the code linking participants to their data will be kept by the BC Diabetes. BC Diabetes could forward your coded data to the DIYAID community for the purpose of improving algorithms. BC Diabetes could also forward your coded data to healthcare authorities (e.g., Health Canada) for the purpose of assessing the benefits and limitations of different AID systems. However, BC Diabetes and any entities who receive the research data will respect the confidentiality rules in effect in British Columbia and Canada regardless of the country to which your data may be transferred. The data will be stored for at least 7 years beyond your last appointment with BC Diabetes as required by the laws of British Columbia.</p>"},{"location":"resources/bcdiabetes/bcdiabetesagreement/#governing-law","title":"Governing Law","text":"<p>The Parties acknowledge and agree that the execution of this Informed Consent has not been induced by, nor do the Parties rely upon, any representations that are not expressly incorporated into this Informed Consent.</p> <p>The Parties hereby agree that their relationship and the resolution of any and all disputes arising therefrom, including any issues related to this Informed Consent, shall be governed by and construed in accordance with the laws of the province of British Columbia and the laws of Canada applicable therein.</p>"},{"location":"resources/bcdiabetes/bcdiabetesagreement/#jurisdiction","title":"Jurisdiction","text":"<p>The Parties hereby acknowledge that the services will be provided in the province of British Columbia and that the Courts of the province of British Columbia shall have sole and exclusive jurisdiction to entertain any complaint, demand, claim, cause of action or suit whatsoever arising out of all services and advices rendered by BC Diabetes, including in connection with the use of any of the Closed Loop Apps, as well as of this Informed Consent. The parties hereby agree that if either of them commences any such legal proceedings they will only be commenced in the province of British Columbia and hereby irrevocably submit to the exclusive jurisdiction of the Courts of the province of British Columbia.</p>"},{"location":"resources/bcdiabetes/bcdiabetesagreement/#consent","title":"Consent","text":"<p>I have read the foregoing information, or it has been read to me. I have had the opportunity to ask questions about it and any questions that I have asked have been answered to my satisfaction. I consent voluntarily to use the Closed Loop Apps.</p> <p>Dated: July 30, 2022</p>"},{"location":"resources/bcdiabetes/distribution/","title":"Testflight Distribution","text":"<p>If you are a BC Diabetes client, you will be provided the application through Testflight. By default, we will disable iAPS automatic updates as major updates can reset your preferences.</p> <p>To ensure updates are disabled:</p> <ol> <li>Open TestFlight on your iPhone</li> <li>Tap on the iAPS app</li> <li>TURN Off Automatic Updates under App Information</li> <li>Repeat this process on any other devices that have iAPS listed in TestFlight.</li> </ol> <p>Warning</p> <p>Please be proactive in updating at minimum every 90 days, else you may experience the error message \"Beta App has Expired.\" Updates have fixes for bugs and new features.</p> <p>To update, first write down or screenshot your current preferences and settings. Then navigate to TestFlight and hit the \"Update\" button besides the app.</p>"},{"location":"settings/loop/","title":"Closed Loop","text":"<p>Closed Loop is disabled by default. This means iAPS is unable to make adjustments autonomously. The system relies on you approval of its actions.</p>"},{"location":"settings/loop/#should-i-enable-it","title":"Should I Enable It?","text":"<p>Closed Loop allows the system to make insulin adjustments automatically. Your end goal for looping is to enable this setting to reduce the time spent managing your diabets. However, entering closed loop too early can make it difficult for new loopers wanting to optimize their application settings. If this is your first time looping, it is recommended you keep this setting disabled initially, and ensure your profile settings (ICR, ISF, basal rates) are properly set. You should monitor iAPS's predictions and suggestions and see if they are appropriate for you. See the corresponding sections on ICR, ISF and basal rates for more information on their adjustment.</p> <p>Remember that everyone's diabetes is different and there is no one size fits all, so take your time optimizing your settings.</p>"},{"location":"settings/configuration/autotune/","title":"Autotune","text":"<p>Highlights</p> <ul> <li>Enable autotune unless you have full confidence in your current profile settings. </li> <li>Autotune adjustments are limited by autosens max/min.</li> </ul>"},{"location":"settings/configuration/autotune/#what-is-autotune","title":"What is Autotune?","text":"<p>Autotune makes iterative adjustments to your basal rates, ISF, and carb ratio based on your last 24 hours of data. The adjustments made by autotune are small, with a maximum of 10% change to the current ICR and ISF, or 20% change to the current basal rates per run, but add up over days. Autotune is run nightly by default unless its run manually by the user.</p> <p>Autotune is designed to work over weeks to slowly improve the accuracy of your initially set ISF/ICR/basal rates. The output of autotune formulas produces a ratio, similar to that of autosens. This ratio is also limited by the autosens max and min preferences.</p>"},{"location":"settings/configuration/autotune/#how-does-it-differ-from-autosens","title":"How does it differ from autosens?","text":"<p>Autosens is designed to make rapid changes to your profile settings every loop cycle based on your last 8 or 24 hours of data. It accounts for biological changes to insulin sensitivity that occur over the day and night, as well as changes from pump placement. </p> <p>Autotune by contrast works on a longer time scale, making slow but sustained changes to your profile to get your set baseline settings more accurate. It is run every 24 hours.</p>"},{"location":"settings/configuration/autotune/#should-i-enable-autotune","title":"Should I enable autotune?","text":"<p>If you believe your profile settings are accurate as is, you can choose to keep autotune disable; it may worsen control in certain scenarios such as after extended periods of sickness.</p> <p>If you decide to enable it, you should note that autotune is limited by autosens max and min ratios. You can alter these values to give autotune more flexibility but this also affects autosens, dynamic ISF, dynamic CR, and adjust basal.</p> <p>Instead, it is best if you review your settings in a few weeks, note the new autotune values, and change your profile settings to match them, giving autotune a new starting place to move from.</p>"},{"location":"settings/configuration/basalprofile/","title":"Basal Profile","text":"<p>Highlights</p> <ul> <li>Basal profile can be transferred from your pump</li> <li>Adjust your basal profile by doing fasting experiments, reviewing your IOB at times of fasting, and observing autotune.</li> </ul> <p>Basal profile consist of your scheduled basal rates, which determines how much insulin is being delivered at each hour of the day. It is important to understand that these settings are not taken verbaitam by when looping. They will be adjusted on the fly, being replaced with temporary basal rates, based on your current blood sugar reading. Your set values will also be altered by autosens and autotune based on your historical data.</p> <p>Still, your basal profile values should be near your true value. Safety limiters prevent iAPS's autotune system from selecting the appropriate dose if the scheduled basal profile is wildly inaccurate. Basal profiles are also important for insulin on board (IOB) calculations. iAPS treats your scheduled (or autotune) basal profile as the zero point. If you receive additional insulin on top of your basal rates, either as boluses or high temporary basal rates, the calculated IOB increases. Likewise, if you receive low temporary basal rates for a set period, your IOB will decrease, and can even become negative. </p>"},{"location":"settings/configuration/basalprofile/#setting","title":"Setting","text":"<p>If you are coming from a pump, it is safe to transfer the basal profile from your pump settings. Note they might not be entirely accurate for the new system. If you find you are going low or high while fasting, consider making adjustments according to the instructions below.</p> <p>There are three main ways of identifying and improving your basal profile values. The standard method is to test your basal by having a relaxing 4-6 hours without eating at least two hours before you begin the test. Does your blood sugar stay steady? Or do you climb and need a correction? Or do you go low and need to eat? Setting basal is a crucial step to setting yourself up for Loop success. It determines how much of the insulin delivered (from basal and bolus) is counted as insulin on board (IOB).</p> <p>You can also monitor your IOB to determine if your basal profile is accurate. Consistently negative or positive IOB at certain times of day may suggest that these hours need to have their basal rate decreased or increased respectively.</p> <p>If you have autotune enabled, you can review the day-to-day trend of how autotune is changing your basal profile. If autotune remains steady for some time, you can then change your scheduled values to the autotune values. This has two main benefits: 1) Autotune can start to alter your values again if it was being stopped by a safety limiter (autosens max/min) 2) You can have your values hard coded in case autotune's data is reset.</p>"},{"location":"settings/configuration/carbratios/","title":"Insulin Carbohydrate Ratio","text":"<p>Highlights</p> <ul> <li>ICR can be transferred from your pump</li> <li>Adjust your ICR by performing a test meal experiment or observing autotune.</li> </ul> <p>ICR refers to the amount of carbohydrates one unit of insulin is able to neutralize. </p> <p>Example: Bill has a 1:10 ICR (aka an ICR of 10). If Bill has 20 carbs with lunch, he will need 2 U of rapid inslin to neutralize it.</p> <p>ICR is not changed as drastically as basal rates or ISF unless Dynamic CR is enabled. As always, your ICR must be as accurate as possible for proper iAPS function.</p>"},{"location":"settings/configuration/carbratios/#setting","title":"Setting","text":"<p>It is safe to transfer your ICR from your pump settings. Your settings may not be accurate if you are experencing high peaks with meals, or if you have lows three hours thereafter. If you have SMB/UAM on and experencing sharp drops, you additionally may need to optimize your ISF.</p> <p>There are two suggested methods of optimizing your ICR. The standard way is a test meal experiment and can be done while not looping. Have meal with a known amount of carbohydrates and bolus according to your current ICR. Monitor your blood sugar at the three hour mark; did you go high, low, or end up where you started prior to the meal? If you ended up high, you can make your ICR more aggresive by 10%. If you were low, drop it by 20%. You may also look to increasing or decreasing your adjustment factor respectively, if you have dynamic CR on.</p> <p>If you have autotune enabled, you can monitor the general trend in ICR adjustment. When the autotune value stabilized, you can then go ahead and change your scheduled value to the autotune value, allowing the system to continue making changes if it was being limited by a safety limiter. </p>"},{"location":"settings/configuration/insulinsensitivities/","title":"Insulin Sensitivity Factor","text":"<p>Highlights</p> <ul> <li>ISF is the most problematic setting for new loopers.</li> <li>ISF can be transferred from your pump to start.</li> <li>Adjust ISF by performing a correction and seeing if you reached your glucose target, or by observing autotune.</li> </ul> <p>ISF, also called insulin correction factor (ICF), refers to the amount of blood glucose in mmol/L one unit of insulin can neutralize.</p> <p>Example: Bill has a 1:4 ISF (this is also written in shorthand as an ISF of 4). This means 1 U of rapid insulin will bring Bill's sugar down 4 mmol/L.</p> <p>Like basal rates, ISF is not used verbaitam by iAPS, but is modified over time as data on the patient is collected. Still, it is important to set ISF as close to accurate as possible for iAPS to function well.</p>"},{"location":"settings/configuration/insulinsensitivities/#setting","title":"Setting","text":"<p>It is safe to transfer your ISF from your pump settings. Note that almost all issues when starting with iAPS are a result of an improperly set ISF. If you find you have lows with corrections, or you have SMB/UAM on and the application provides too much insulin at any time resulting in a rollercoaster pattern your ISF is likely to blame. </p> <p>There are a few ways you can work to adjust your ISF. The easiest method is simply bringing yourself to a higher glucose with a glucose tab or choosing a time when you are \"stuck\" higher than your target, then correcting based on your ISF. If you are higher or lower than you target after 4 hours, increase by 10% or decrease your ISF by 20% accordingly.</p> <p>It can be difficult with SMB/UAM enabled to make proper adjustments to ISF. If you experience a rollercoaster pattern and find the system is giving too much insulin, look to decrease your ISF. Likewise, if your dealing with uncontrollable highs, and slow return of your blood sugar to the target range, look to increase ISF.</p> <p>Finally, you can also rely on autotune to adjust your ISF and determine based on the trend in its changes, where it is too high or low. Look to changing you profile value to the autotune value when autotune stabilizes to ensure safety limiters arent prevening any additional needed change.  </p>"},{"location":"settings/configuration/pumpsettings/","title":"Pump Settings","text":"<p>Highlights</p> <ul> <li>Max Basal = 4x max daily basal</li> <li>Max Bolus = Max bolus you give for a meal</li> <li>DIA = 7 hours</li> </ul>"},{"location":"settings/configuration/pumpsettings/#delivery-limits","title":"Delivery Limits","text":"<p>These are safety limiters for iAPS. For Max Basal, 4 times your highested scheduled basal rate is generally adequate. For Max Bolus, choose the maximum amount of insulin you generally bolus for meals. </p>"},{"location":"settings/configuration/pumpsettings/#duration-of-insulin-action","title":"Duration of Insulin Action","text":"<p>Duration of insulin action (DIA) affects iAPS calculations through its impact on insulin on board (IOB). The default DIA of 5 hours is likely too low and can cause insulin stacking. Increasing to 7 hours should suit most users. For more information on DIA in loop systems, please follow the following link: link</p>"},{"location":"settings/configuration/targetranges/","title":"Target Ranges","text":"<p>Highlights</p> <ul> <li>Set your lower target between 5-6 mmol/L</li> </ul> <p>This allows you to set your target blood sugar range. Note that by default, iAPS (and OpenAPS) ignore your higher value unless \"Wide BG Target Range\" is enabled in preferences. In other words, if your range is set at 5-5.5 mmol/L, iAPS treats it as 5-5 mmol/L.</p> <p>Generally, a low target between 5-6 mmol/L is set by most users, or 1.5 mmol/L points above where they start feeling a low.</p>"},{"location":"settings/configuration/concepts/autosens-dynamic/","title":"Autosens, Dynamic ISF/ICR and Adjust Basal","text":"<p>Highlights</p> <ul> <li>Enable Dynamic ISF, Dynamic CR and/or Adjust Basal for more rapid adjustments in response to physiological changes in insulin sensitivity</li> <li>Bias the calculated ISF/CR/Basal rates towards more or less aggressive values by increasing or decreasing the adjustment factor accordingly.</li> <li>Adjustments are limited by autosens max/min.</li> </ul> <p>Tip</p> <p>Examples in this section employ the default logarithmic formula for calculations. See the sigmoid section for more information.</p>"},{"location":"settings/configuration/concepts/autosens-dynamic/#auto-sensitivity-mode","title":"Auto-sensitivity Mode","text":"<p>Auto-sensitivity (autosens) reviews your last 8 hrs and 24 hrs of data every loop cycle (5 min) and determines whether you have been reacting more or less sensitively to insulin. It then makes conservative temporary adjustments to your basal rates, blood sugar target, and ISF.</p> <p>Example: Autosens finds Bill has been running more sensitive to insulin lately. In the last 24 hours, he has been 2X more sensitive to insulin, whereas in the last 8 hours, he has been 3X more sensitive to insulin.</p> <p>Autosens then takes the more conservative calculated sensitivity. In this example, the more conservative value is obtained from the 8 hour window because by assuming Bill is 3X more as opposed to 2X more sensitive to insulin, the system will be posed to give less insulin.</p> <p>If you are using autotune, autosens will use your calculated autotune ICR, ISF and basal rates as its baseline as opposed to your set values.</p> <p>Note that autosens does not look at meals and make adjustments to your ICR. It only looks at your sensitivity to insulin and adjust ISF/basal rates/blood sugar targets accordingly.</p>"},{"location":"settings/configuration/concepts/autosens-dynamic/#dynamic-isf","title":"Dynamic ISF","text":"<p>Autosens was thought by some to be too conservative and slow at making changes. Dynamic ISF is a drop-in replacement for autosens's ISF calculation formula, with the goal of making it more aggressive. If you find that you have high ISF variability throughout the day and autosens is not providing you with sufficent control, you can turn this feature on.</p> <p>Dynamic ISF takes into consideration a new variable called \"Adjustment Factor\" which affects its aggressiveness. If dynamic ISF is too aggressive, you can decrease this number by 0.05-0.1 points to make it more meek. Likewise, increase this number if you still feel dynamic ISF is not aggressive enough.</p> <p>Notes: </p> <ul> <li>Dynamic ISF is temporarily disabled and the system reverts to autosens if either \"High Temptarget Raises Sensitivity\" or \"Exercise Mode\" is enabled and a high temporary target has been set by the user.</li> <li>While Dynamic ISF is inherently more aggressive, it also provides the user greater control as opposed to autosens via the adjustment factor. You can alter the adjustment factor to make Dynamic ISF less aggressive than the calculated autosens values. </li> </ul>"},{"location":"settings/configuration/concepts/autosens-dynamic/#advanced-information","title":"Advanced information","text":"<p>Autosens determines an ratio (autosens.ratio) and alters your ISF in the following manner:</p> <ul> <li>New ISF = (profile set ISF)/(autosens.ratio)</li> </ul> <p>Example: Bill has an ISF of 3 in his settings. The system finds Bill has been more resistant to insulin lately and needs to increase his insulin. It calculates Bill to have an autosens.ratio of 1.1 (note that a larger autosens.ratio results in you having a lower, more aggressive ISF):</p> <p>When autosens goes to adjust the ISF, it does the following calculation:</p> <ul> <li>3 UL/mmol / 1.1 = 2.73 UL/mmol</li> </ul> <p>Bill is now temporarily set to have an ISF of 2.73.</p> <p>Dynamic ISF (using the default logarithmic algorithm in iAPS) uses an alternative formula to calculate the autosens.ratio for ISF adjustments:</p> <ul> <li>autosens.ratio = profile.sens * AF * TDD * log((BG/peak)+1) / 1800</li> <li>New ISF = (profile set ISF)/(autosens.ratio)</li> </ul> <p>This formula takes into consideration your profile set ISF (profile.sens in mg/dl) current blood glucose (BG in mg/dl), total daily dose (TDD over the last 24 hours), insulin peak effect (peak activity normally is 120 min) and a new variable called adjustment factor (AF) that allows for user tuning of Dynamic ISF/CR.</p> <p>Click here to view a graph despicting the logarithmic formula</p>"},{"location":"settings/configuration/concepts/autosens-dynamic/#dynamic-cr","title":"Dynamic CR","text":"<p>This is an experimental feature that alters the carb ratio (CR) based on current blood sugar and total daily dose (TDD). Unlike ISF, ICR was not originally altered by autosens with respect to your detected sensitivty. Using Dynamic CR will lead to a dramatic change in how ICR is calculated by iAPS. Dynamic CR uses a similar formula as Dynamic ISF as described above:</p> <ul> <li>autosens.ratio = profile.sens * AF * TDD * log((BG/peak)+1) / 1800</li> <li>New CR = (profile set CR)/(autosens.ratio)</li> </ul> <p>If you find your CR changes dramatically day to day and iAPS is not providing adequate bolus recommendations, you can test this feature. Note that iAPS is already makes modifications to your recommended boluses without this feature enabled based on your blood glucose target, COB, and IOB.</p> <p>Note</p> <p>If the calculated autosens.ratio by Dynamic CR is greater than 1, the following formula is used to make the resulting CR less aggressive: </p> <ul> <li>new.autosens.ratio = (autosens.ratio - 1)/2 + 1 </li> </ul>"},{"location":"settings/configuration/concepts/autosens-dynamic/#adjust-basal","title":"Adjust Basal","text":"<p>Adjust basal replaces autosens's formula for adjusting basal rates, with one dependent on total daily dose (TDD) of insulin. Turn on this setting to give basal adjustments more agility. Keep this setting off if you basal needs are not highly variable.</p>"},{"location":"settings/configuration/concepts/autosens-dynamic/#advanced-information_1","title":"Advanced Information","text":"<p>Normally a new basal rate is set by autosens:</p> <ul> <li>New basal profile = current basal profile * autosens.ratio</li> </ul> <p>Adjust basal replaces the autosens.ratio with its own autosens.ratio calculated as such:</p> <ul> <li>autosens.ratio = (weighted average of TDD)/(2 week average of TDD)</li> <li>New basal profile = current basal profile * autosens.ratio</li> </ul> <p>See \"Weighted Average of TDD\" setting to understand how this variable is calculated.</p> <p>As an example:</p> <p>Bill has a TDD of 55 U over the last 24 hours. He has a 14 day TDD average of 48 U. He has set his \"Weighted average of TDD\" in preferences to 0.7. His current profile basal rate is 1 U/h.</p> <ul> <li>Weighted average of TDD = 0.7 * 55 U + 0.3 * 48 U = 52.9 U</li> <li>basal.autosens.ratio = 52.9 U / 48 U = 1.10</li> <li>New basal profile = 1 U/h * 1.10 = 1.10 U/h</li> </ul>"},{"location":"settings/configuration/concepts/autosens-dynamic/#final-thoughts","title":"Final Thoughts","text":"<ul> <li>Remember that all autosens ratios calculated in this section are being limited by autosens max and autosens min safety limiters. Additionally, Dynamic CR has an inbuilt safety limiter against highly aggressive ratios.</li> </ul>"},{"location":"settings/configuration/concepts/sigmoid/","title":"Sigmoid Function","text":""},{"location":"settings/configuration/concepts/sigmoid/#what-is-it","title":"What is it?","text":"<p>The sigmoid function provides an alternative to the logarithmic function.</p> <p>Click here to view a graph despicting the sigmoid formula</p>"},{"location":"settings/configuration/concepts/smb-uam/","title":"SMB and UAM","text":"<p>Highlights</p> <ul> <li>Enable SMB and UAM after ensuring your basal rates and ISF are accurate.</li> <li>Adjust SMB/UAM minutes to allow the system to give greater amounts of insulin with one bolus.</li> <li>Max IOB must be greater than 0 for it to function (\"average mealbolus + 3x max daily basal\").</li> </ul>"},{"location":"settings/configuration/concepts/smb-uam/#super-micro-boluses","title":"Super Micro Boluses","text":"<p>Super micro bolus (SMB) gives you small amounts of insulin upfront in the form of a bolus. Your temporary basal rates will be reduced accordingly before or after the SMB is delivered, so you will overall receive the same amount of insulin you would have received with temporary basal rates alone. SMB allows for faster control of blood sugars by providing more insulin up front.</p> <p>There are limitations on the size of SMBs. See the OpenAPS documentation for more information.</p> <p>Notes:</p> <ul> <li>Please ensure your profile settings are accurate before enabling SMB and UAM. Use autotune over several weeks if you need support with this.</li> <li>Do not perform manual correction boluses with SMB and UAM enabled. You will be at a high risk of having a low.</li> </ul> <p>There are numerous settings related to enabling SMBs in iAPS. Below is the presidence of the settings iAPS uses when deciding whether to enable or disable SMB:</p> <ul> <li>disable SMB when a high temptarget is set (unless allow SMB with High Temptarget is enabled)</li> <li>enable SMB/UAM if always-on (unless disabled for high temptarget)</li> <li>enable SMB/UAM (if enabled in preferences) while we have COB</li> <li>enable SMB/UAM (if enabled in preferences) for a full 6 hours after any carb entry</li> <li>enable SMB/UAM (if enabled in preferences) if a low temptarget is set</li> </ul> <p>A flow chart will be added here for greater clarity on iAPS SMB decision making.</p>"},{"location":"settings/configuration/concepts/smb-uam/#unannounced-meals","title":"Unannounced Meals","text":"<p>Unannounced Meal (UAM) provides an alternative method (in addition to or instead of carb entry) for detecting and safely dosing insulin via SMBs in response to significant BG rises, whether they are due to meals, stress/illness, or counterregulatory hormones (adrenaline, cortisol, glucagon, HGH). It replaces Advanced Meal Assist (AMA) when enabled. AMA is an older feature that depends on your carbohydrate entries, and sets high temporary basal rates to counteract any remaining carbs on board.</p>"},{"location":"settings/configuration/preferences/dynamicsettings/","title":"Dynamic Settings","text":"<p>Highlights</p> <ul> <li>Dynamic ISF and Dynamic CR: Enable for more responsive changes to your current blood glucose and TDD. </li> <li>Adjustment Factor: Greater 1 makes Dynamic ISF/CR more aggressive (more insulin), while lower than 1 makes Dynamic ISF/CR less aggressive. Adjust by 0.1 steps as needed.</li> <li>Adjust basal: Enable if your basal rates are otherwise not being adjusted adequately.</li> </ul>"},{"location":"settings/configuration/preferences/dynamicsettings/#enable-dynamic-isf","title":"Enable Dynamic ISF","text":"<p>Please read Autosens and Dynamic ISF/ICR for more information.</p> <p>Dynamic ISF is a more aggressive alternative to autosens's ISF adjustment algorithm. Turn this on if you believe yourself to be highly resistant to insulin at some points in the day and autosens does not adequately alter your ISF to compensate for it.</p>"},{"location":"settings/configuration/preferences/dynamicsettings/#enable-dynamic-cr","title":"Enable Dynamic CR","text":"<p>Please read Autosens and Dynamic ISF/ICR for more information.</p> <p>Dynamic CR alters your ICR every loop cycle based on your current blood glucose and TDD of insulin. Turn it on if you experience your ICR changes day-to-day or at different blood glucose levels and iAPS is not consistently suggesting appropriate boluses. You should rule out other causes for this first including inadequate carb counting or inappropriate profile ICR.</p>"},{"location":"settings/configuration/preferences/dynamicsettings/#adjustment-factor","title":"Adjustment Factor","text":"<p>Please read Autosens and Dynamic ISF/ICR for more information.</p> <p>Adjustment Factor (AF) allows one to bias the Dynamic ISF and Dynamic CR (if they are enabled) towards more or less aggressive results. Increasing AF above 1 will result in Dynamic ISF/CR outputting more aggressive values, while decreasing it below 1 will bias the output towards less aggressive values. Its recommended to start with an AF of 0.5-0.8 and to increase as needed.</p> <p>Example: Bill has Dynamic CR on. His Dynamic CR is calculated to be 1:4 by iAPS based on his current blood glucose, TDD and his set ISF. </p> <p>But Bill decides to set his AF to 1.2 because he has found recently that Dynamic CR has not been giving him aggressive enough numbers. iAPS acts accordingly, and increases his CR to something above 1:4 instead (ex: 1:3.5). Note that this is a simplified example. See the section on Dynamic CR for more information.</p> <p>It is important to understand that AF is not a safety limiter. By increasing AF, you are telling the system that ALL of your Dynamically calculated ISF/CR values have not been aggressive enough, and you want the system to make them more aggressive.</p> <p>The same is true when you lower AF. You are telling the system that ALL dynamically calculated values are too aggressive, and to make them lower.</p>"},{"location":"settings/configuration/preferences/dynamicsettings/#use-sigmoid-function","title":"Use Sigmoid Function","text":"<p>Dynamic CR and ISF by default use a logarithmic function to perform calculations. Please read Autosens and Dynamic ISF/ICR for more information.</p> <p>This option replaces the logarithmic function with a sigmoid function for Dynamic ISF/CR calculations.</p> <p>Please read the dedicated section on sigmoid before enabling this setting. Your adjustment factor should be between 0.4-0.5 on onboarding.</p>"},{"location":"settings/configuration/preferences/dynamicsettings/#weighted-average-of-tdd-weight-of-past-24-hours","title":"Weighted Average of TDD. Weight of past 24 hours:","text":"<p>Please read Autosens and Dynamic ISF/ICR for more information.</p> <p>This ratio is used by \"Adjust basal\" for its calculations. It allows you to effectively control the variability of basal adjustments (if Adjust basal is enabled). You can increase the number to a max of 1 make them more dynamic, and decrease them to a minimum of 0 make them less dynamic. The default of 0.65 means that the system will use 65% of the TDD over the last 24 hours for its calculations, and 35% of TDD over the last 2 weeks.</p> <p>Example: Bill has a TDD of 55 U over the last 24 hours. He has had a TDD of 48 U over the last 14 days. His Weighted Average is set at 0.65: - TDD Average = 55 * 0.65 + 48 * 0.35 = 52.55</p> <p>As you increase the default 0.65 ratio to a higher number, the basal rates will be more so determined by your last 24 hour insulin usage, resulting in more variable changes.</p>"},{"location":"settings/configuration/preferences/dynamicsettings/#adjust-basal","title":"Adjust basal","text":"<p>Please read Autosens and Dynamic ISF/ICR for more information.</p> <p>Adjust basal replaces the sensitivity-based formula normally used by autosens for adjusting your basal rates, with one dependent on your TDD of insulin. Use this if iAPS is not by default suggesting adequate basal rates for you.</p>"},{"location":"settings/configuration/preferences/dynamicsettings/#threshold-setting-mgdl","title":"Threshold Setting (mg/dl)","text":"<p>The threshold setting is a safety limiter function. If blood sugar at any point is predicted to go below this value, iAPS will suspend insulin delivery (SMBs are halted and Temp Basal of 0 U/hr set) and wait till its algorithms predict otherwise. This setting can be useful if you are experiencing a high number of hypoglycemia events. Please review the OpenAPS documents if you want a better understanding of how it is used. The threshold setting is by default determined by your blood glucose target setting:</p> <ul> <li>Lower Target: 90 mg/dl = Threshold 65 mg/dl </li> <li>Lower Target: 100 mg/dl = Threshold 70 mg/dl </li> <li>Lower Target: 110 mg/dl = Threshold 75 mg/dl </li> <li>Lower Target: 130 mg/dl = Threshold 85 mg/dl </li> </ul> <p>This setting allows you to choose a higher threshold setting than default. Note that you cannot choose something that is lower than the default setting for a certain blood glucose target.</p> <p>Ex: Bill has set a BG target of 110 mg/dl. He has set his threshold to 65 mg/dl in his iAPS preferences. Because iAPS's default threshold setting is 75 mg/dl for 110 mg/dl blood glucose target, Bill's preference will be ignored.</p>"},{"location":"settings/configuration/preferences/freeapsx/","title":"FreeAPS X","text":"<p>Highlights</p> <ul> <li>Recommended Insulin Fraction: Increase to reduce initial spiking with meals; there is a risk of lows if you miscount carbs or your ICR is too aggressive</li> </ul>"},{"location":"settings/configuration/preferences/freeapsx/#glucose-units","title":"Glucose Units","text":"<p>Allows you to toggle between mmol/L and mg/dl blood glucose units.</p>"},{"location":"settings/configuration/preferences/freeapsx/#remote-control","title":"Remote Control","text":"<p>Allows for remote control of FAX using Nightscout.</p> <p>Duplicate Delivery Risk  We want to highlight a very important risk before you get started.  For safety, always assume a previous remote carb / bolus was delivered whether it shows in Nightscout iAPS. For motivation think of the following example:  You send a 5 unit remote bolus. The bolus is delivered to the Looper. Nightscout is having a temporary technical issue and doesn't show the bolus was received. You are watching Nightscout and you don\u2019t see a delivery so you assume it failed. You send another remote 5 unit bolus. The second 5 unit bolus is delivered to the Looper (10 Units total).  You can see the danger of sending duplicate bolus/carbs so be careful. If a remote bolus/carb entry doesn\u2019t show in Nightscout/Caregiver, use your own judgment on whether enough time has passed to try again. </p> <p>To use, navigate to your connect nightscout instance. Click the lock icon on the top right and enter your API-Secret. Next, click the now visible \"+\" sign on the top right. A \"Log a Treatment\" menu will open up. </p> <p>To enter carbs, select the \"carb correction\" event type. Fill in the required blanks and click \"Submit Form\". iAPS will read any carb entries in Nightscout and adjust insulin delivery as configured.</p> <p>To configure loop status, pump or to bolus, select the \"announcement\" event type. In additional notes state one of the following options:</p> <ul> <li>To bolus, enter \"bolus:(amount)\" (ex: bolus:0.5).</li> <li>To control pump, enter either \"pump:suspend\" or \"pump:resume\". </li> <li>To control looping, enter either \"looping:true\" or \"looping:false\"</li> <li>To control temporary basal rate, enter \"tempbasal:(rate),(minutes)\" (ex: tempbasal:0,60 to set temporary basal rate at 0 U/hr for 60 minutes)</li> </ul> <p>Note that remote configurations with announcement-type events can only be performed every 10 minutes.</p>"},{"location":"settings/configuration/preferences/freeapsx/#recommended-insulin-fraction","title":"Recommended Insulin Fraction","text":"<p>Recommended insulin fraction is a safety feature built into iAPS. By default, iAPS calculates an \"insulin required\" value when bolusing for carbs that is half of the insulin actually needed to deal with said meal. iAPS then delivers the remaining insulin via SMBs as the blood sugar starts to rise.</p> <p>Recommended insulin fraction allows you to alter the amount initially delivered. At its default (1.5), it results in 75% of the required meal bolus being delivered before the meal. You can increase or decrease this to alter the insulin delivered prior to the meal.</p>"},{"location":"settings/configuration/preferences/freeapsx/#skip-bolus-screen-after-carbs","title":"Skip Bolus screen after carbs","text":"<p>After entering carbs, a mealtime bolus will not be suggested or delivered.</p>"},{"location":"settings/configuration/preferences/freeapsx/#display-hr-on-watch","title":"Display HR on Watch","text":"<p>Displays your current heart rate on your iWatch iAPS app</p>"},{"location":"settings/configuration/preferences/freeapsx/#display-statistics","title":"Display Statistics","text":"<p>Visual: Displays statistics including Time in range (TIR), coefficent of variance (CV) and estimated A1c at the bottom of the main screen. </p> <p>For advanced users: Enabling this settings also allows iAPS to sync your statistics to the Nightscout API.</p>"},{"location":"settings/configuration/preferences/mainsettings/","title":"OpenAPS Main Settings","text":"<p>Highlights</p> <ul> <li>Insulin curve: Choose your insulin type</li> <li>Max IOB: Use the formula \"average mealbolus + 3x max daily basal\" to determine your Max IOB. Increase slowly if more insulin is warranted</li> <li>Autosens Max/Min: Increase the autosens max and autosense min to allow the system to choose more or less aggressive autotune and autosens values with regards to your scheduled value.</li> </ul>"},{"location":"settings/configuration/preferences/mainsettings/#insulin-curve","title":"Insulin Curve","text":"<p>Enter your insulin type for the appropriate response curve to be used by the algorithm:</p> <ul> <li>bilinear: IOB curve based on a bilinear activity curve that varies by user\u2019s duration of insulin action setting in their pump. --insert image of bilinear curve--</li> <li>rapid-acting: This is a default setting for Novolog, Novorapid, Humalog, and Apidra insulins. Selecting this setting will result in OpenAPS to use an exponential activity curve with peak activity set at 75 minutes and duration of insulin action set at 300 minutes (5 hours).</li> <li>ultra-rapid: This is a default setting for Fiasp. Uses an exponential activity curve with peak activity set at 55 minutes and duration of insulin action set at 300 minutes (5 hours). -- insert image of exponential curve --</li> </ul> <p>Note that the duration of insulin (DIA) action can be altered in the pump settings section of iAPS. A minimum of 5 hours is required.</p> <p>To understand why a higher duration of insulin action is used in iAPS, click to see the following documentation.</p>"},{"location":"settings/configuration/preferences/mainsettings/#max-iob","title":"Max IOB","text":"<p>The maximum amount of insulin on board (i.e. in the body). This includes insulin from all sources (basal and bolus) that is automatically delivered by iAPS. Manual boluses are not subjected to this limiter. </p> <p>Default is set to zero meaning iAPS can only set temporary basal rates lower that your profile basal rate. I.e. it cannot set temporary basal rates that exceed your profile basal rate in cases of high blood sugar, and it cannot use super micro boluses to control blood sugar.  </p> <p>You can start by increasing this number to your average mealtime bolus and evaluating its effect. The default recommendation is \u201caverage mealbolus + 3x max daily basal\u201d when using super micro boluses.</p> <p>Ex: Bill has an average mealtime bolus of 6 U, and the following basal profile:</p> <ul> <li>12am: 1 U/hr</li> <li>6pm: 2 U/hr (this is the \"max\" basal used) </li> <li>9pm: 1.5 U/hr </li> </ul> <p>Using the formula \u201caverage mealbolus + 3x max daily basal,\u201d his recommended IOB = 6 + 3 * 2 = 12 U. </p> <p>If you are insulin resistance and/or need help dealing with meal spikes, you can continue to increase this number further to allow for greater insulin delivery.</p>"},{"location":"settings/configuration/preferences/mainsettings/#max-cob","title":"Max COB","text":"<p>The maximum amount of carbs that iAPS is allowed to bolus or set high temp targets for. This is a safety feature that protects against erroneous carbohydrate entries that could lead to hypoglycemia episodes.</p> <p>If you tend to eat more than 120 g of carbs in one sitting, choose the maximum amount of carbs you eat.</p>"},{"location":"settings/configuration/preferences/mainsettings/#max-daily-safety-multiplier","title":"Max Daily Safety Multiplier","text":"<p>Limits the maximum temporary basal rate iAPS is able to use at **any time. The default setting of 3, which is unlikely to need adjustment, allows for a maximum basal rate of 3x the max daily basal.</p> <p>Ex: Bill has the following basal profile:</p> <ul> <li>12am: 1 U/hr</li> <li>6pm: 2 U/hr (this is the \"max\" basal used) </li> <li>9pm: 1.5 U/hr </li> </ul> <p>It is 7 am so iAPS has been scheduled to deliver 1 U/hr. But Bill is running high so iAPS wants to deliver more.</p> <p>The maximum temporary basal rate that can be set is 2 U/hr * 3 = 6 U/hr</p>"},{"location":"settings/configuration/preferences/mainsettings/#current-basal-safety-multiplier","title":"Current Basal Safety Multiplier","text":"<p>Limits the maximum temporary basal rate iAPS is able to use at the **current time. The default setting of 4, which is unlikely to need adjustment, allows for a maxium basal rate of 4x the current basal rate. </p> <p>Ex: It is currently 9am and Bill has the following basal profile:</p> <ul> <li>12am: 1 U/hr</li> <li>6pm: 2 U/hr (this is the \"max\" basal used) </li> <li>9pm: 1.5 U/hr </li> </ul> <p>The maximum temporary basal rate that can be set by iAPS at 9 am is 1 U/hr * 4 = 4 U/hr</p>"},{"location":"settings/configuration/preferences/mainsettings/#autosens-max","title":"Autosens Max","text":"<p>Please read Autosens and Dynamic ISF/ICR and Autotune before adjusting this setting.</p> <p>This setting determines the maximum ratio autosens can use for its adjustments. Increasing this value allows autosens to make more aggressive adjustments to your basal profile, ISF, and target blood glucose.</p> <p>If you have Dynamic ISF and/or Dynamic CR, this setting will also limit their ability to make more aggressive adjustments.</p> <p>If you have autotune enabled, this setting also limits its ability to make more aggressive adjustments to your ICR, basal profile and ISF.</p>"},{"location":"settings/configuration/preferences/mainsettings/#autosens-min","title":"Autosens Min","text":"<p>Please read Autosens and Dynamic ISF/ICR and Autotune before adjusting this setting.</p> <p>This setting determine the minimum ratio autosens can use for its adjustments. Decreasing this value allows autosens to make less aggressive adjustments to your basal profile, ISF, and target blood glucose.</p> <p>If you have Dynamic ISF and/or Dynamic CR, this setting will also limit their ability to make less aggressive adjustments</p> <p>If you have autotune enabled, this setting also limits its ability to make less aggressive adjustments to your ICR, basal profile and ISF.</p>"},{"location":"settings/configuration/preferences/othersettings/","title":"OpenAPS Other Settings","text":"<p>Highlights</p> <p>None of these settings likely require adjustment from their defaults</p>"},{"location":"settings/configuration/preferences/othersettings/#rewind-resets-autosens","title":"Rewind Resets Autosens","text":"<p>Rewind in Medtronic lingo refers to the attachment of a new insulin reservoir and infusion set. For Omnipod users, this means replacing your pod with a new one.</p> <p>When you change the insulin injection site, you might find your insulin sensitivity is altered based on how well its diffusing into your bloodstream. </p> <p>This setting resets autosens's calculated autosens.ratio and forces it to restart anew from the time of the site change to improve your calculated basal rates, sensitivity ratio and target blood glucose.</p> <p>Please read Autosens and Dynamic ISF/ICR for more information.</p>"},{"location":"settings/configuration/preferences/othersettings/#use-custom-peak-time","title":"Use Custom Peak Time","text":"<p>Allows you to optimize at what time your insulin has maximum activity if the defaults do not work for you.</p>"},{"location":"settings/configuration/preferences/othersettings/#insuln-peak-time","title":"Insuln Peak Time","text":"<p>Requires \"Use Custom Peak Time\" to be enabled. Select a peak activity time point, within the limits set by OpenAPS based on your insulin type.</p>"},{"location":"settings/configuration/preferences/othersettings/#skip-neutral-temps","title":"Skip Neutral Temps","text":"<p>This is a feature that has been brought from the OpenAPS algorithm but does not play much role in iAPS. Light sleepers using OpenAPS would find that the notifications delivered by OpenAPS upon making a temp basal adjustment, would wake them up. </p> <p>This setting attempts to reduce notifications that are produced by OpenAPS (and iAPS) with the downside of potentially impacting control and making it harder for users to determine if the system is working.</p> <p>Recommend to keep this setting disabled.</p>"},{"location":"settings/configuration/preferences/othersettings/#unsuspend-if-no-temp","title":"Unsuspend if No Temp","text":"<p>After suspending your pump you will be provided a reminder at a chosen time to manually resume your pump. Many people however neglect this reminder and forget to unsuspend, leading to highs.</p> <p>This feature allows you to use zero temp basals as a way of unsuspending your pump automatically. Prior to suspending your pump, set a 0 U/hr temp basal for the period of time you want the pod to remain suspended. Then suspend the pod. Once the temp basal expires, the pod will be automatically reactivated.</p>"},{"location":"settings/configuration/preferences/othersettings/#suspend-zeros-iob","title":"Suspend Zeros IOB","text":"<p>This allows iAPS to better understand that when a pump supension occurs, no insulin is being delivered to the patient.</p> <p>iAPS will set a zero temp basal (0 U/hr) during pump suspensions, improving its insulin on board calculations, and thereby its algorithm calculations.</p> <p>Recommended to keep this setting enabled.</p>"},{"location":"settings/configuration/preferences/othersettings/#bolus-snooze-dia-divisor","title":"Bolus Snooze DIA Divisor","text":"<p>Deprecated; Bolus snooze has been removed in latest versions of OpenAPS so this value does not matter.</p>"},{"location":"settings/configuration/preferences/othersettings/#min-5m-carbimpact","title":"Min 5m Carbimpact","text":"<p>This is a fallback setting used by iAPS. If iAPS is unable to tell if carbs are being absorbed from blood sugar readings, it will estimate how many carbs have been absorbed using this setting.</p> <p>The default value of 8mg/dL/5min assumes carbohydrates will increase blood sugar by 8 mg/dl every 5 minutes. The actual amount of carbohydrates estimated to be absorbed is depended on your calculated carbohydrate sensitivity ratio (CSF = ISF/ICR).</p>"},{"location":"settings/configuration/preferences/othersettings/#autotune-isf-adjustment-fraction","title":"Autotune ISF Adjustment Fraction","text":"<p>Autotune by default adjust your ISF by 20% each nightly run. This values allows you to make your autotune adjustments less aggressive.</p> <p>Set this at 1 for the full 20% adjustment.</p> <p>Advanced information:</p> <ul> <li>adjustedISF = adjustmentFraction * autotuneISF + (1-adjustmentFraction) * profileISF</li> <li>newISF = ( 0.8 * profileISF ) + ( 0.2 * adjustedISF )</li> </ul> <p>Example: Bill has a profile ISF of 3. Autotune thinks he has a true ISF value of 4. His adjustment fraction is 1.</p> <ul> <li>adjustedISF = 1 * 4 + (1 - 1) * 3 = 4</li> <li>newISF = (0.8 * 3) + (0.2 * 4) = 3.2</li> </ul> <p>Assuming autotune is not being limited by the autosens max and min, Bill's ISF will be set to 3.2 by autotune tonight. Autotune will then repeat the following night, starting with a profileISF = 3.2</p>"},{"location":"settings/configuration/preferences/othersettings/#remaining-carbs-fraction","title":"Remaining Carbs Fraction","text":"<p>This is the fraction of carbs that is assumed not to be absorbed yet after 4 hours if carb absorption has not been seen. </p> <p>When attempting to measure carbohydrates on board (COB) iAPS may not be fully accurate. This setting is a safety feature that can prevent iAPS from providing insulin for non-existent carbs.</p> <p>Example: It has been 4 hours since Bill ate 20 carbs. iAPS has been able to calculate that hes absorbed 15 carbs, but cannot account for the 5 other carbs yet. Bill has a remaining carbs fraction of 0.75</p> <ul> <li> <p>Remaining COB = COB - absorbedCarbs - mealCarbs * (1 - carbsFraction)</p> </li> <li> <p>20 - 15 - 20(1 - 0.75) = 0 </p> </li> </ul> <p>Bill is assumed to have zero carbs on board</p> <p>Recommend to keep this value at the default of 1 meaning it will not impact iAPS's calculations. This feature is closely tied to \"Remaining Carbs Cap.\"</p>"},{"location":"settings/configuration/preferences/othersettings/#remaining-carbs-cap","title":"Remaining Carbs Cap","text":"<p>This setting is a safety limiter that determines the maximum amount of carbs that are assumed to be absorbed after 4 hours of carb absorption. A minimum of 90 carbs is mandatory for this setting.</p> <p>Example: Bill eats 150 carbs. After 4 hours, iAPS calculates a COB of 110. It will truncate that number to 90 carbs.</p> <p>Recommended to keep this value at default unless you know what you are doing.</p>"},{"location":"settings/configuration/preferences/othersettings/#noisy-cgm-target-multiplier","title":"Noisy CGM Target Multiplier","text":"<p>If iAPS detects that CGM data has been noisy, it will increase your target blood sugar by a set fraction to avoid you getting low. Default is 30% higher (1.3)</p> <p>Example: Bill's iAPS has calculated a blood glucose target of 90 mg/dl (5 mmol/L). But Bill has a noisy sensor. He has set his \"Noisy CGM Target Multiplier\" to 1.3. iAPS will thereby use a target bg of:</p> <ul> <li>90 mg/dL * 1.3 = 117 mg/dL</li> </ul> <p>Recommended to keep this value at default of 1.3.</p>"},{"location":"settings/configuration/preferences/smbsettings/","title":"OpenAPS SMB Settings","text":"<p>Highlights</p> <ul> <li>Enable SMB Always: Most commonly enabled setting; allows iAPS to provide small correction boluses to make rapid blood sugar adjustments. If you want to configure SMB to only run in certain conditions read below.</li> <li>Max Delta-BG Threshold SMB: Change to 0.3 (30%) for closed loop with UAM enabled.</li> <li>Enable UAM: Enable to allow iAPS to bolus for detected meals. Pre-meal bolusing is still advised even with this feature enabled.</li> <li>Max SMB Basal Minutes: Increase to allow SMB to give more insulin in one bolus. Increase if struggling with fasting highs.</li> <li>Max UAM SMB Basal Minutes: Increase to allow UAM to give more insulin in one bolus. Increase if struggling with meal or hormonal highs.</li> <li>Bolus Increment: Change to 0.05 for Omnipod users</li> </ul>"},{"location":"settings/configuration/preferences/smbsettings/#enable-smb-always","title":"Enable SMB Always","text":"<p>Enabling this setting allows SMBs to be delivered if your blood sugar is predicted to go above target. </p> <p>SMBs will remain on if you have a low temporary target set, but will be fully disabled if a high temporary target is set (unless \"Allow SMB With High Temptarget\" is enabled).</p> <p>There are limitations on the size of SMBs. See the OpenAPS documentation for more information.</p>"},{"location":"settings/configuration/preferences/smbsettings/#max-delta-bg-threshold-smb","title":"Max Delta-BG Threshold SMB","text":"<p>THis is a safety limiter that looks at the difference between your last two blood glucose readings. If the difference is large, iAPS suspects them to be incorrect and will suspend SMB delivery accordingly.</p> <p>You can adjust how much of a difference should be allowed before SMBs are delivered. 30% is advised for closed loop.</p>"},{"location":"settings/configuration/preferences/smbsettings/#enable-smb-with-cob","title":"Enable SMB With COB","text":"<p>SMBs will be enabled if you currently have carbs on board (COB) to help you deal with meal spikes. This feature should be enabled if you want to use UAM.</p> <p>If you already have \"Enable SMB Always\" on, this feature is redundent and does not need to be configured.</p>"},{"location":"settings/configuration/preferences/smbsettings/#enable-smb-with-temptarget","title":"Enable SMB with Temptarget","text":"<p>SMBs will be enabled if you have set a lower blood sugar target temporarily. This will allow you to reach your target faster.</p> <p>If you already have \"Enable SMB Always\" on, this feature is redundent and does not need to be configured.</p>"},{"location":"settings/configuration/preferences/smbsettings/#enable-smb-after-carbs","title":"Enable SMB After Carbs","text":"<p>SMBs will be enabled if you had carbs within the last 6 hours to help with meal spikes.</p> <p>If you already have \"Enable SMB Always\" on, this feature is redundent and does not need to be configured.</p>"},{"location":"settings/configuration/preferences/smbsettings/#allow-smb-with-high-temptarget","title":"Allow SMB With High Temptarget","text":"<p>This is a safety limiter that prevents SMBs from occuring when you set a temporary blood glucose target higher than your normal target range. This is useful for users who do not want SMBs and exercise both acting to bring down blood sugar.</p> <p>This setting limits \"Enable SMB Always\" as well as all other enable SMB toggles.</p>"},{"location":"settings/configuration/preferences/smbsettings/#enable-smb-with-high-bg","title":"Enable SMB With High BG","text":"<p>This allows SMBs to occur above a certain blood glucose level. Some individuals with variable sensitivity may find that SMBs can cause low blood sugars and rollercoasters when near their target. </p> <p>If you are in closed loop and rely heavily on UAM (i.e. you do not bolus for your meals) you should keep this feature disabled so iAPS can provide you with the necessary insulin if you are predicted to go high. Else if you are currently within your target blood glucose range, SMBs will not be delivered.</p> <p>If you already have \"Enable SMB Always\" on, this feature is redundent and does not need to be configured.</p>"},{"location":"settings/configuration/preferences/smbsettings/#when-blood-glucose-is-over-mgdl","title":"... When Blood Glucose is Over (mg/dl)","text":"<p>See the above setting for more information. This allows you to configure the target at which SMBs will be enabled.</p>"},{"location":"settings/configuration/preferences/smbsettings/#enable-uam","title":"Enable UAM","text":"<p>With this option enabled, the SMB algorithm can recognize unannounced meals. This is helpful if you forget to tell iAPS about your carbs or estimate your carbs wrong and the amount of entered carbs is wrong or if a meal with lots of fat and protein has a longer duration than expected. Without any carb entry, UAM can recognize fast glucose increasements caused by carbs, illnesss, or counterregulatory hormones, and tries to adjust it with SMBs. This also works the opposite way: if there is a fast glucose decreasement, it can stop SMBs earlier.</p>"},{"location":"settings/configuration/preferences/smbsettings/#max-smb-basal-minutes","title":"Max SMB Basal Minutes","text":"<p>Max SMB Basal minutes is one of the major limiters of the size of SMBs. For more information on what limit's SMB size, please view the OpenAPS documentation. SMBs are limited by the amount of scheduled basal insulin in your profile settings.</p> <p>Example: Bill has a basal profile setting of 1.5 U/hr. He has a \"Max SMB Basal minutes\" setting of 30 min:</p> <ul> <li>1.5 U / 60 min * 30 min = 0.75 U</li> </ul> <p>Each of Bill's SMBs are thus limited to a maximum of 0.75 U by Max SMB Basal Minutes. </p> <p>If you find that iAPS is giving insignificant boluses every 5 minutes, it may be being limited by your Max IOB or Max SMB Basal Minutes. First, confirm your basal rates are adequate. Then you can experiment with increasing this number so iAPS is able to provide larger SMBs for more rapid blood sugar control.</p>"},{"location":"settings/configuration/preferences/smbsettings/#max-uam-smb-basal-minutes","title":"Max UAM SMB Basal Minutes","text":"<p>See \"Max SMB Basal Minutes\" above and the OpenAPS documentation for more information on the limiters of SMBs. </p> <p>This limits the size of SMBs UAM can deliver when it detects a meal, by the amount of scheduled basal insulin in your profile settings. You can configure this setting to make UAM more or less aggressive against meal spikes. Note that SMBs are also limited by your Max IOB and DeliveryRatio.</p>"},{"location":"settings/configuration/preferences/smbsettings/#smb-deliveryratio","title":"SMB DeliveryRatio","text":"<p>This is a safety limiter. iAPS determines how much insulin is required to get you back within target range. If SMB is enabled, iAPS then delivers an SMB, that defaults to half the required insulin.</p> <p>This setting allows you to boost or reduce what fraction of the required insulin is delivered in a single SMB. It is recommended you look at your basal profile, Max SMB basal minutes, Max UAM SMB Basal Minutes, and Max IOB before you adjust this setting.</p>"},{"location":"settings/configuration/preferences/smbsettings/#smb-interval","title":"SMB Interval","text":"<p>The minimum interval between SMB boluses. SMBs will be delivered at this rate or less as needed.</p>"},{"location":"settings/configuration/preferences/smbsettings/#bolus-increment","title":"Bolus Increment","text":"<p>The minimum amount of insulin that can be bolused by iAPS via an SMB. This is determined by your pump hardware.</p>"},{"location":"settings/configuration/preferences/statistics/","title":"Statistics","text":"<p>Highlights</p> <p>This section is entirely visual and does not impact control.</p>"},{"location":"settings/configuration/preferences/statistics/#low-glucose-limit","title":"Low Glucose Limit","text":"<p>Sets the lower blood sugar limit for statistical determiniation of time below range (TBR).</p>"},{"location":"settings/configuration/preferences/statistics/#high-glucose-limit","title":"High Glucose Limit","text":"<p>Sets the higher blood sugar limit for statistical determination of time above range (TAR)</p>"},{"location":"settings/configuration/preferences/statistics/#update-every-number-of-minutes","title":"Update every number of minutes","text":"<p>Determines how often the statistics are updated on the homescreen. Also controls how often statistics are uploaded to Nightscout for advanced users.</p>"},{"location":"settings/configuration/preferences/statistics/#display-loop-cycle-statistics","title":"Display Loop Cycle statistics","text":"<p>Shows the average number of loops performed over the last 24 hours. Ideally the number should be near 288, the maximum number of loops performed per day. Negative impacters include CPU speed, pump and pod changes, connection issues, etc.</p>"},{"location":"settings/configuration/preferences/statistics/#override-hba1c-unit","title":"Override HbA1c unit","text":"<p>The estimate HbA1c statistic is by default given in mmol/mol units. Enabling this toggle converts it to percentage units.</p>"},{"location":"settings/configuration/preferences/targetsettings/","title":"OpenAPS Targets Settings","text":"<p>Highlights</p> <ul> <li>High Temptarget Raises Sensitivity: Enable if you exercise frequently with high temp targets, and you find yourself going low.</li> </ul>"},{"location":"settings/configuration/preferences/targetsettings/#high-temptarget-raises-sensitivity","title":"High Temptarget Raises Sensitivity","text":"<p>Please read Autosens and Dynamic ISF/ICR for more information.</p> <p>Normally iAPS assumes your sensitivity will be lower with higher blood sugar levels (resulting in greater amounts of insulin being delivered). During periods of exercise, some people may instead experience increased sensitivity to insulin. With this feature enabled, setting a high temporary target will decrease the autosens ratio being utilized for ISF and basal adjustments, resulting in less insulin being delivered overall. This scales with the temporary target set; higher and higher temp targets lead to lower and lower insulin delivery in the form of basal rates and corrections. </p> <p>Note that this setting also disables Dynamic ISF when high temp targets are set.</p>"},{"location":"settings/configuration/preferences/targetsettings/#low-temptarget-lowers-sensitivity","title":"Low Temptarget Lowers Sensitivity","text":"<p>Please read Autosens and Dynamic ISF/ICR for more information.</p> <p>When planning to have a heavy meal, you may want to set a low temporary target to avoid high blood sugar spikes. You may also want iAPS to deliver more insulin during this time to prevent meals from spiking too high. Enabling this feature will increase your autosens.ratio, which is utilized for ISF and basal adjustments, resulting in greater insulin delivery. This will allow iAPS to better deal with post-prandial spiking.</p>"},{"location":"settings/configuration/preferences/targetsettings/#sensitivity-raises-target","title":"Sensitivity Raises Target","text":"<p>When performing autosens and insulin dosing calculations, iAPS uses a target blood glucose that is by default the lower value in your target range.</p> <p>Example: Bill has a target range of 5.5 to 6.0. His target blood glucose is thus 5.5. (Note that Bill's target is not exactly this value; iAPS alters the target via autosens to improve its dosing)</p> <p>When \"Sensitivity Raises Target\" is enabled, iAPS will set a higher blood glucose target to base its insulin dosage calculations off of if it detects sensitivity. This can be useful if you find iAPS is too aggressively.</p> <p>Advanced information: Please read Autosens and Dynamic ISF/ICR for more information.</p> <p>If the autosens.ratio is determined to be &lt;1.0, this setting comes into effect and increases the blood glucose target by a small amount. See the OpenAPS code base for the exact formulas used.</p>"},{"location":"settings/configuration/preferences/targetsettings/#resistance-lowers-target","title":"Resistance Lowers Target","text":"<p>See \"Sensitivity Raises Target\" for more information. When iAPS detects high insulin resistance, it will set a lower blood glucose target for insulin dosage calculations, providing more insulin overall. This is useful for patients who experience uncontrollable highs.</p> <p>Advanced information: Please read Autosens and Dynamic ISF/ICR for more information.</p> <p>If the autosens.ratio is determined to be &gt;1.0, this setting comes into effect and decreases the blood glucose target by a small amount. See the OpenAPS code base for the exact formulas used.</p>"},{"location":"settings/configuration/preferences/targetsettings/#advanced-target-adjustments","title":"Advanced Target Adjustments","text":"<p>Deprecated; autosens has alternative functions for determining if insulin can be safely added when high.</p>"},{"location":"settings/configuration/preferences/targetsettings/#exercise-mode","title":"Exercise Mode","text":"<p>Redundant; same as \"High Temptarget Raises Sensitivity\". Enabling either feature will provide the desired changed to sensitivity with high temp targets.</p>"},{"location":"settings/configuration/preferences/targetsettings/#half-basal-exercise-target","title":"Half Basal Exercise Target","text":"<p>This setting allows you to control the reduction in basal when using either \"Exercise Mode\" or \"High Temptarget Raises Sensitivity.\" Default is 160 mg/dL meaning basal will be at 50% of your scheduled with a temporary target at 160, 60% at 140, and 75% at 120.</p> <p>Advanced information: See openAPS code for more information. The formula used is:</p> <ul> <li>(halfBasalTarget - 100)/((halfBasalTarget - 100)+(targetBG-100))</li> </ul> <p>Example: Bill has a halfBasalTarget of 160 and has set a temporary target of 120 for his upcoming exercise. Therefore only 75% of his scheduled basal rate will be provided:</p> <ul> <li>(160 - 100)/((160 - 100) + (120 - 100)) = 0.75</li> </ul>"},{"location":"settings/configuration/preferences/targetsettings/#wide-bg-target-range","title":"Wide BG Target Range","text":"<p>By default iAPS ignores your upper value when setting a target range. </p> <p>Example: Bill has set a target range of 5.5-6.0. iAPS internally sets it at 5.5-5.5.</p> <p>This setting allows you to change that behaviour so iAPS targets a desired range instead of your lower value.</p> <p>Note: This feature is likely to be deprecated from the OpenAPS algorithm soon.</p>"},{"location":"settings/devices/cgm/","title":"CGM","text":"<p>This section allows you to choose your glucose data source. Most options are self explanatory. If you are using a Dexcom G5 or G6 sensor, it is important you change your transmitter ID in the iAPS app for it to continue receiving glucose information. For more information on compatible CGMs, please see the following: link</p> <p>xDrip is not recommended with newer versions of the iAPS app.</p>"},{"location":"settings/devices/pump/","title":"Pump","text":"<p>This section allows you to select your insulin delivery system. For more information on supported pumps, see the following: link. Older Omnipod and Medtronic devices require a Rileylink to translate communication between your phone's bluetooth signals and the pump's radiocommunication.</p> <p>You will also be asked during the setup to choose your insulin type, which will determine your duration of insulin action and peak activity time.</p>"},{"location":"settings/services/applehealth/","title":"Apple Health","text":"<p>Optional. Enabling this allows iAPS to store information related to blood sugar readings, insulin dosage and carbohydrates. Useful for those who like to analyse their data with TidePool.</p>"},{"location":"settings/services/fatprotein/","title":"Fat and Protein Conversion","text":"<p>Highlights</p> <ul> <li>Turn on to bolus for fat and protein</li> <li>Adjust your ICR if you have lows</li> <li>Decrease your Interval in Minutes to make insulin delivery smoother</li> <li>Increase your \"Override With A Factor Of\" by 0.1 increments if you continue to have fat and protein spikes</li> </ul>"},{"location":"settings/services/fatprotein/#convert-fat-and-protein","title":"Convert Fat and Protein","text":"<p>Many individuals may experience slow rises in their blood sugar after fatty or high protein meals. Enabling \"Convert Fat and Protein\" allows you to provide a bolus for fat and protein units (FPU). The bolus is delivered in segments over a selected period of time to avoid the gradual rise in blood sugar. This is similar to setting absorption time or eCarbs if coming from Loop or AndroidAPS, respectively. For more information, click to see the Omnicalculator.</p> <p>Your current ICR was likely compensating for some of the effects on protein and fat on blood sugar. If you choose to enable this setting, you will need to make your ICR less aggressive to prevent lows.</p>"},{"location":"settings/services/fatprotein/#conversion-settings","title":"Conversion Settings","text":""},{"location":"settings/services/fatprotein/#delay-in-minutes","title":"Delay In Minutes","text":"<p>Controls how long before the system starts to bolus for the fat and protein spike. Defaults to 60 minutes.</p>"},{"location":"settings/services/fatprotein/#maximum-duration-in-hours","title":"Maximum Duration in Hours","text":"<p>Limits how long the system can bolus for FPU. A default of 8 is recommended.</p>"},{"location":"settings/services/fatprotein/#interval-in-minutes","title":"Interval in Minutes","text":"<p>Interval between each microbolus provided for fat and protein. </p>"},{"location":"settings/services/fatprotein/#override-with-a-factor-of","title":"Override With A Factor Of","text":"<p>Controls the fraction of insulin required for the fat and protein entered. A default of 0.5 allows only half the insulin that the system thinks you require, to be delivered. You can experiment with raising this number to one if you continue to see rises in your blood sugar.</p>"},{"location":"settings/services/nightscout/","title":"Visualization and Monitoring","text":"<p>Highlights</p> <ul> <li>Nightscout is a useful tool for data analysis and for followers</li> <li>Create a Nightscout server and input your URL and API_SECRET in iAPS. Test the connection and enable \"Allow Uploads.\"</li> </ul>"},{"location":"settings/services/nightscout/#nightscout-introduction","title":"Nightscout Introduction","text":"<p>Nightscout (NS) is an open source, DIY project that allows real-time access to CGM data via a personal website, smartwatch viewers, or apps and widgets available for smartphones. Setting up a Nightscout web app is the recommended way to visualize your OpenAPS or iAPS closed loop. </p> <p>Nightscout allows a user to upload CGM data from a variety of sources to an online database and cloud computing service. The information is then processed and displayed visually as a graph. There are plugins that allow more information to be shown about OpenAPS, too. </p> <p>Even if you don't choose to share your Nightscout site with another person, it will be helpful for you to visualize what the loop is doing; what it's been doing; plus generate helpful reports for understanding your data.</p> <p>For help making a Nightscout account, please see the OpenAPS documentation.</p>"},{"location":"settings/services/nightscout/#iaps-setup","title":"iAPS Setup","text":"<p>To enable your nightscout connection, input your Nightscout URL including the \"https://\" and your API_SECRET. Select \"Allow uploads\" so iAPS can share its predictions and settings with Nightscout. </p>"},{"location":"settings/services/notifications/","title":"Notifications","text":"<p>Allows configuration of iAPS notifications. Adjust based on your preferences. </p>"},{"location":"settings/services/notifications/#carbs-required-threshold","title":"Carbs Required Threshold","text":"<p>iAPS may predict you at risk of having a low blood sugar event, and will accordingly recommend you consume a suggested amount of carbs. Carbs Required Threshold determines the minimum amount of carbs required before iAPS can send a notification. </p>"},{"location":"troubleshoot/builderror/","title":"Builderror","text":""},{"location":"troubleshoot/builderror/#build-errors","title":"Build Errors","text":"<p>These are only relevant when building with a Mac and Xcode.</p> <p>For GitHub (Browser Build) errors, please see: GitHub Errors</p> <p>There are two types of build indications that may be seen: they are warnings (yellow or purple icons) and red errors. You'll see the warnings and errors in the left-hand column of the Xcode window.</p> <p>Yellow and Purple warnings do not cause the build to fail, those are just warnings.  You will often see yellow and purple icons. Ignore those. Do not try to do anything to fix those.</p> <p>Red errors  will have to be resolved before you can successfully build the Loop app. The steps below explain how to resolve them based on the messages you are seeing.</p>"},{"location":"troubleshoot/builderror/#xcode-not-responding","title":"Xcode Not Responding","text":"<p>Sometimes, Xcode stops responding. You have to fix this before any of the other steps on this page will help.  The signature is that Xcode shows a colorful spinning icon and does not respond to anything you do.</p> <p>This can happen sometimes. You just need to force quit Xcode. Sometimes rebooting the Mac may be required, but start with force quit. Then just open up Xcode again and keep going.</p> <ul> <li>Hold down these 3 keys (Option (or Alt), Command, Esc (Escape)) until the Force Quit menu appears (should be fast)</li> <li>Select Xcode and tap on the Force Quit button</li> </ul> <p></p>"},{"location":"troubleshoot/builderror/#start-with-the-obvious-error-causes","title":"Start with The Obvious Error Causes","text":"<p>New Loop Builders</p> <p>This page contains build error help for people updating their Loop app as well as brand new Loop app builders. Review the \"obvious\" errors causes first. If that doesn't help, then, skim the page until you reach Find Your Error Message or search the page (Cmd-F) or search LoopDocs for your error. Once you've identified your error message, try to resolve it.  Still stuck? Read Posting for Help</p> <p>Before you start trying to resolve your red errors, start with the most obvious things that can cause a red error message:</p> <ol> <li> <p>Did you forget to select Loop(WorkSpace)? The first time you build after downloading new code, you must manually select Loop (Workspace) instead of Loop in Xcode.</p> </li> <li> <p>Did you check that you have the minumum Xcode version for your iOS? This is critical. If you are updating your Loop app, please review the iOS driven requirements for minimum version of macOS and Xcode.</p> </li> <li> <p>Did you check your Apple developer account for new license agreement? Periodically, Apple will release a new developer license agreement that you need to sign before you can build new apps. You will get a build failure if there is a pending license agreement to sign. Login to your Apple developer account to check if there's a new license agreement.</p> </li> <li> <p>Do you have a new computer, never used to build Loop? Did you Add Apple ID to Xcode?</p> </li> <li> <p>Did you reboot, i.e., restart, your computer after updating Xcode? You should reboot following Xcode installation or update and you must make sure your command line tools match the version of Xcode you just installed. Xcode Command Line Tools</p> </li> <li> <p>Did you get a fresh download of Loop code? If you tried to build with an old download that you used a long time ago, that old version may not be compatible with the new iOS and Xcode versions. Check also, that you are actually using the new download in Xcode.  When you use the Build Select Script, it automatically opens Xcode using the new download.</p> <p>If you want to build using a recent download, this section tells you how to Find My Downloaded Loop Code.</p> </li> <li> <p>Are you are using a free developer account? Make sure you finished the removal of Siri and Push Notification capabilities described in the Free Account link.</p> </li> <li> <p>DO NOT USE BETA VERSIONS  If you are using an iOS beta version or an Xcode beta version, Loop might not build. Deleting iOS beta from a phone is a pain...so don't install it unless you know what you are doing.</p> </li> </ol>"},{"location":"troubleshoot/builderror/#fix-95-of-errors","title":"Fix 95% of errors","text":"<p>If you have checked all those steps above and think you have a true build error, here's a tip that resolves 95% of all build errors when updating Loop code.</p> <ol> <li>Open your project in Xcode as normal. Then go to the menu bar at the top of the screen and find the \"Product\" menu item. Use the drop down selection for \"Clean Build Folder\" or press shift-command-K. Either will work the same. Wait for the clean to finish before trying to build again.</li> <li>On the far right, next to the name Full Path is the folder name that Xcode will be using to build. Make sure it is the new code you just downloaded and not an older folder.</li> <li>If you are updating Loop and did not Delete Old Provisioning Profiles, do it now</li> <li>Return to Xcode and try building your app again.</li> <li>Still failing for phone or watch or both? Try the Unpair and Reboot procedure.</li> </ol>"},{"location":"troubleshoot/builderror/#unpair-and-reboot","title":"Unpair and Reboot","text":"<p>This is reported to fix a variety of watch building errors and <code>cannot prepare phone for development</code> errors:</p> <ol> <li>Open Xcode (if not already open)</li> <li>Plug phone into computer and make sure it is unlocked</li> <li>Using the Xcode menu, select<ul> <li>Windows</li> <li>Devices and Simulators</li> <li>On left side, Right-Click (or Control-Click) on your phone</li> <li>Choose Unpair Device</li> </ul> </li> </ol> <p>It may not be necessary, but the suggestion is to reboot phone, (watch) and Mac - in other words, you can try to build without rebooting, but if that fails, repeat the steps and reboot before trying again.</p> <p></p> <p>The next time you plug this phone into your computer, you will be asked to trust the computer on the phone (and watch).  Note this is unpairing the device from Xcode and your computer, not the same as, and much faster than, unpairing your watch from your phone.</p> <p>If the build fails again, look through the list below and see if you can match your error message with one of the error messages listed later in this page. If you really can't find your solution, then post for help. But help us help you.</p> <ul> <li>Ignore yellow and purple warning messages - those are not errors - do not try to fix them</li> <li>Confirm it really is an error not already on this page; read this page carefully, including all the circled bits in the images in the Specific Error Messages section</li> <li>Follow the steps in the Posting for Help section</li> <li>WE CANNOT HELP without version numbers and screenshots</li> <li>Do not take pictures of your computer screen with your phone, use screenshots</li> </ul>"},{"location":"troubleshoot/builderror/#new-with-xcode-14","title":"New with Xcode 14","text":"<p>This may change, but for now, the watchOS simulator is not automatically included with the Xcode 14.x download and install. Some version of the watchOS simulator is required to build Loop, independent of whether you use a watch.</p> <p>You will be asked if you want to download &amp; install.  Make sure watchOS is selected.</p> <p></p> <p>If you are getting watch errors or having trouble with your watch, try this:</p> <p>Tap on the Xcode name on the menu bar and select Settings (used to be called Preferences).</p> <p>Choose the Platform tab. If there is a missing watchOS simulator that you think might help, then download it using the <code>GET</code> button. Use the minus icon (bottom left) to remove simulators that are no longer being used. (The watchOS 9.0 is required to build with Xcode 14.0.1. The watchOS 9.1 was downloaded with a release candidate for Xcode 14.1 - your screens may look different.)</p> <p></p>"},{"location":"troubleshoot/builderror/#posting-for-help","title":"Posting for help","text":"<p>STOP!!  Read this section! Important!</p> <p>Before you post in a Loop Social Media site asking for help with build errors, do your work first. The build errors listed below (and the checks listed above) will fix most of problems you may encounter. PLEASE READ THIS PAGE. The volunteers answering questions online would love to spend more time helping people use Loop and less time answering questions that can be addressed by using this page.</p> <p>Therefore, try to resolve your build error yourself. Then, if you need to post for help, please include enough information with the post so the volunteers know where you are in your troubleshooting attempts.</p> <p>Your Post Must Include:</p> <ul> <li>The version of Xcode you are using</li> <li>The version of Loop you are building with</li> <li>The version of iOS on your Loop iPhone</li> <li>Free or paid account, and if free, confirmation that you deleted Siri and Push Notification capabilities</li> <li>Confirmation that you are not using an Xcode beta or iOS beta version (so we don't have to ask, please actually type \"I am not using beta versions\")</li> <li>Screenshots of your WHOLE Xcode window and/or Terminal window showing your error and any messages you've seen while working through the build errors/solutions.  Do NOT use phone photographs of your computer screen.  See below for instructions on how to capture a screenshot.</li> <li>State which fixes from the list below you have already tried AND post the screenshots of the results of those fix attempts.</li> </ul>"},{"location":"troubleshoot/builderror/#screenshots","title":"Screenshots","text":"<p>Please take screenshots of your issue and use them in your posts. On an Apple computer, press <code>shift-command-4</code> keys at the same time followed by pressing the space bar and then click on the window of interest. The screenshot will be saved to your desktop with a file name starting with the name \"Screen Shot\". Use screenshots instead of cell phone images or words whenever possible. Screenshots are higher resolution and easier to read.</p> <p>Use the whole Xcode window screenshot when posting for build help.</p>"},{"location":"troubleshoot/builderror/#find-your-error-messages","title":"Find Your Error Message(s)","text":"<p>To begin fixing the error, use the Report Navigator view to find your error message.</p> <p></p> <p>The key is to (1) READ THE ERROR MESSAGE and then (2) FIND YOUR MESSAGE IN ONE OF THE TOPICS BELOW.</p> <p>Here's a super tip: Merely seeing the \"exit code\" in Xcode is not enough information to discern what error is causing your build to fail; some exit codes have multiple causes. Look at the detailed message to guide your search for the matching solution.</p> <p>Notice the screenshots below have red circles highlighting certain error messages.  Read your error message(s) from your screen, being guided by the red circles in the screenshots. Once you find your error message (hint: not \"exit code\"), you can either:</p> <ul> <li> <p>Take the error message from your Xcode screen and use LoopDoc's search function to enter in some of that phrase to bring up the appropriate solution topic, or</p> </li> <li> <p>Take the error message from your Xcode screen and read through EACH OF THE TOPICS BELOW. Check each of the red circles to see if you have a match. Kind of like a matching puzzle.</p> </li> </ul> <p>For example, if you see \"Invalid active developer path (/Library/Developer/CommandLineTools)\" in your error message, use the search tool in LoopDocs with \"invalid active\". You will get a couple of links and one is the Command Line Tools fix for that error message. Click on the link and you'll find the solution.</p> <p></p>"},{"location":"troubleshoot/builderror/#specific-error-messages","title":"Specific Error Messages","text":""},{"location":"troubleshoot/builderror/#minimedkit-command-phasescriptexecution-failed","title":"MinimedKit Command PhaseScriptExecution failed","text":"<p>Error Message: The error message by itself, <code>Command PhaseScriptExecution failed with nonzero exit code</code>, doesn't mean much.</p> <p>It's the location - under Copy Frameworks with Carthage - that indicates you need to install Rosetta. </p> <p>Solution: Install Rosetta</p> <p>The easiest way to do this is to follow these directions: Configure Terminal App for Rosetta.</p> <p>You may first see a build error screen similar to this graphic:</p> <p></p> <p>Look for more details as shown in this graphic:</p> <p></p> <p>More Details</p> <p>Experienced Loop builders may say - but I thought we did not use carthage anymore.</p> <ul> <li>When building Loop 3, carthage is no longer used and Loop will build without installing Rosetta</li> <li>When building Loop v2.2.9, carthage is still used but the required carthage version is included in the download; so the user does not need to separately install a particular version of carthage </li> </ul>"},{"location":"troubleshoot/builderror/#run-destination-is-not-valid-failed-to-prepare-the-device","title":"Run Destination is Not Valid; Failed to Prepare the Device","text":"<p>Error Message:</p> <p>The run destination for name's phone is not valid for running the scheme \"Loop (Workspace)\"</p> <p></p> <p>Solution:</p> <p>Follow the link for the Unpair and Reboot procedure.</p> <p>If you are running iOS 16 on your phone, make sure developer mode is turned on.</p>"},{"location":"troubleshoot/builderror/#packageresolved-file-corrupted-or-malformed","title":"Package.resolved file corrupted or malformed","text":"<p>Error Message:</p> <p>Package.resolved file is corrupted or malformed; fix or delete the file to continue: unsupported schema version 2</p> <p></p> <p>This error is new with Loop 3, which uses Package Dependencies.</p> <p>There are 2 problems shown here</p> <ol> <li>The version of Xcode is out of date</li> <li>The graphic was acquired using a camera instead of a screenshot, and yes - that was a joke - using a camera does not cause a build error</li> </ol> <p>Solution:</p> <p>Update Xcode, which may require you to update macOS.</p>"},{"location":"troubleshoot/builderror/#couldnt-get-revision-for-package-dependency","title":"Couldn't Get Revision for Package Dependency","text":""},{"location":"troubleshoot/builderror/#many-search-143-for-this-error","title":"Many Search 1.4.3 for this Error","text":"<p>This error is new with Loop 3, which uses Package Dependencies.</p> <ul> <li>If you notice a red x in Xcode (as circled in the graphic below)<ul> <li>Click on the red x to show the error in the left pane</li> <li>Alternatively, you can click on the icon shown with the red square to see the same information</li> </ul> </li> </ul> <p>Error Message:</p> <p></p> <p>Text in error:</p> <ul> <li>Uncategorized<ul> <li>Couldn't get revision . . .</li> </ul> </li> </ul> <p>Solution:</p> <p>Refer to the graphic below</p> <ol> <li>Click on the folder icon (indicated by red square)</li> <li>Hold down the Control-Key and click the <code>Package Dependencies</code> row to display the dropdown menu (shown in the inset)</li> <li>Select Reset Package Caches from the dropdown menu and wait for Xcode to finish the reset process</li> <li>Once the package reset completes (updates in upper right of xcode will stop or say indexing), the red x should vanish</li> <li>You can start the build as soon as the Indexing message appears</li> </ol> <p></p>"},{"location":"troubleshoot/builderror/#unable-to-read-included-file","title":"Unable To Read Included File","text":"<p>This error has been seen with Loop 3. The permanent xcconfig file, created by the build script and used to sign targets, is written to a folder where the user does not have read permission.</p> <p>Error Message:</p> <p></p> <p>Text in error:</p> <ul> <li>unable to read included file <code>path inserted here</code></li> </ul> <p>Solution:</p> <p>No need to quit Xcode. If your build script terminal is still open, use it. Otherwise, open a new terminal window.</p> <p>Copy the lines below that start with <code>ls -l</code> by hovering the mouse near the right side of the text and clicking the copy icon (should say <code>Copy to Clipboard</code> when you hover over it). When you click the icon, a message that says <code>Copied to Clipboard</code> will appear on your screen.</p> Copy and Paste to add read permissions to xcconfig file<pre><code>ls -l ~/Downloads/BuildLoop/LoopConfigOverride.xcconfig\nchmod +r ~/Downloads/BuildLoop/LoopConfigOverride.xcconfig\nls -l ~/Downloads/BuildLoop/LoopConfigOverride.xcconfig\n</code></pre> <p>Paste the lines into the terminal. The response to the first line will be something like this:</p> <pre><code>--w-------  1 marion  staff  490 Nov  8 04:58 /Users/marion/Downloads/BuildLoop/LoopConfigOverride.xcconfig\n</code></pre> <p>There will be no response after the second line - although if an error is reported, please grab a screen shot.</p> <p>The response to the last line will be something like this:</p> <pre><code>-rw-r--r--  1 marion  staff  490 Nov  8 04:58 /Users/marion/Downloads/BuildLoop/LoopConfigOverride.xcconfig\n</code></pre> <p>The addition of <code>r</code> where there used to be <code>-</code> on the left side, means you now have permission to read that file.</p> <p>Final step is to return to Xcode and clean the build folder. Otherwise Xcode remembers it could not read the file and it won't try again.</p> <ol> <li>From the <code>Product</code> menu (of Xcode), select <code>Clean Build Folder</code></li> <li>Press the Build Button (play icon)</li> </ol>"},{"location":"troubleshoot/builderror/#cycle-dependency","title":"Cycle Dependency","text":"<p>This error is new with Xcode 13.3 (late Sep 2021) which has a new requirement</p> <ul> <li>For those who care: the new requirement is that for a certain type of instruction file, the line with the <code>Headers</code> keyword must be located before the line with the <code>Sources</code> keyword</li> <li>There used to be many repositories that did not have lines in that order</li> <li>If you are seeing this error, you are building with an older copy and should consider updating</li> </ul> <p>Error Message:</p> <p></p> <p>Text in error:</p> <ul> <li> <p>Left window (the exact target names are not important):</p> <ul> <li>Cycle in dependencies between targets . . .</li> </ul> </li> <li> <p>Middle window:</p> <ul> <li>Target build order preserved because \"Build Order\" is set to \"Manual Order\" in the scheme settings</li> </ul> </li> </ul> <p>Solution:</p> <p>No need to quit Xcode - follow these steps using the Xcode Menu bar. (It's possible that only Step 1 is required, but sometimes all steps are needed.)</p> <ol> <li>From the <code>Product</code> menu (of Xcode), select <code>Clean Build Folder</code></li> <li>From the <code>File</code> menu, select <code>Close Workspace</code></li> <li>From the <code>File</code> menu, select <code>Open Recent</code> and choose the top line</li> <li>Press the Build Button (play icon)</li> </ol>"},{"location":"troubleshoot/builderror/#entitlements-error","title":"Entitlements Error","text":"<p>Error Message:</p> <p></p> <p>Text in error message can be either of these:</p> <p>Entitlements file \"WatchApp Extension.entitlements\" was modified . . .</p> <p>or</p> <p>Entitlements file \"Loop.entitlements\" was modified . . .</p> <p>Solution:</p> <p>No need to quit Xcode - follow these numbered steps as indicated in the graphic below.</p> <ol> <li>Click on the Loop icon under PROJECT</li> <li>From the <code>Product</code> menu (of Xcode), select <code>Clean Build Folder</code></li> <li>Press the Build Button (play icon)</li> </ol> <p></p> <p>It turns out that</p> <ul> <li>You can start building before indexing completes - just make sure it has started</li> <li>The behavior causing this in Xcode has been reported to Apple</li> </ul>"},{"location":"troubleshoot/builderror/#compileassetcatalog-error","title":"CompileAssetCatalog Error","text":"<p>This error is found when there is a space embedded in the path name to your LoopWorspace folder. The good news is that LoopWorkspace seems to be able to build from an iCloud or Dropbox drive.</p> <p></p> <p>Text in error message:</p> <p>Command CompileAssetCatalog failed with a nonzero exit code. . .</p> <p>Solution:</p> <p>This is very similar to the steps for the WatchApp Entitlements Error but you need to repeat it for 2 targets: <code>Loop</code> and <code>WatchApp</code> - the graphic below matches the step numbers in the list.</p> <ol> <li>Click on <code>Loop</code> folder</li> <li>Click on <code>Loop</code> target</li> <li>Click on the <code>General</code> tab</li> <li>Click on the <code>App Icons Source</code> dropdown menu</li> <li>Click on the item already selected (the line will change from red to blank)</li> </ol> <p></p> <ul> <li>Repeat the <code>App Icons Source</code> dropdown menu selection for the <code>WatchApp</code> target</li> <li>(Optional) Clear the Build Error (Menu at top of Xcode: Select Product-&gt;Clean Build Folder)</li> <li>Press build</li> </ul>"},{"location":"troubleshoot/builderror/#carthage-error","title":"Carthage Error","text":"<p>You should not see carthage errors, but if you do, you probably did not select Loop (Workspace) at the top of the Xcode window. Review the graphic from the Prepare to Build Instructions.</p> <p>Or maybe you are trying to build using an old download; some older versions did require carthage. Best practice is to download new code.</p> <p>Error Message:</p> <p>Wrong Version of Carthage Error</p> <p>Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: one of -create, -thin , -extract , -remove , -replace  , -verify_arch  \u2026 , -archs, -info, or -detailed_info must be specified. <p>Solution: Download fresh code with Build Select Script (if you haven't already done so) and select Loop (Workspace) before building with Xcode.</p>"},{"location":"troubleshoot/builderror/#could-not-locate-device-support-files","title":"Could Not Locate Device Support Files","text":"<p>Error Message: \"Could not locate device support files.\" That message is telling you that your iOS on the Loop phone requires you to get a newer version of Xcode to be able to build Loop onto that phone.</p> <p>Solution: Update your Xcode version; this may also require a macOS update. Please review the phone iOS driven requirements for Xcode and macOS.</p> <p></p>"},{"location":"troubleshoot/builderror/#no-such-module-loopkit-or-similar-message","title":"No Such Module 'LoopKit' or Similar Message","text":"<p>Error Message: If you see a Cartfile failure and several other red errors (in particular saying there is \"no such module 'LoopKit'\").</p> <p>Solution: Read the Carthage Error section above.</p>"},{"location":"troubleshoot/builderror/#developer-license-update-pla-update","title":"Developer License Update (PLA Update)","text":"<p>Error message: \"The Apple Developer Program License Agreement has been updated,  In order to access certain membership resources, you must accept the latest license agreement\". Or you may see \"Unable to process request - PLA Update available. You currently don't have access to this membership resource. To resolve this issue, agree to the latest Program License Agreement in your developer account.\"</p> <p>Solution: You'll need to log onto your developer account at developer.apple.com and accept the latest license agreement.</p> <p></p>"},{"location":"troubleshoot/builderror/#could-not-get-a-container-directory-url","title":"Could Not Get a Container Directory URL","text":"<p>Error message: \"Could not get a container directory URL. Please ensure App Groups are set up correctly in entitlements.\"</p> <p></p> <p>Solution: To resolve this error, you will need to click on the Loop target's signing area and then the plus-sign in the App Groups area under the signing. Copy and paste the bundle indentifier into the new container that starts with <code>group.</code> and then add <code>Group</code> to the end of the name. Click OK to save. Note, the line will start with lower case <code>group.</code> followed by your bundle identifier and an upper case <code>Group</code> added to the end of the bundle identifier.</p> <p></p> <p>The final App Group should now have a blue check box, the name should start with <code>group</code> and end with <code>LoopGroup</code>. See the screenshot as an example. Click the build button after your App Group is setup similarly and you should be good.</p> <p></p>"},{"location":"troubleshoot/builderror/#missing-command-line-tools","title":"Missing Command Line Tools","text":"<p>Error message:  \"Invalid active developer path (/Library/Developer/CommandLineTools)\"</p> <p></p> <p>Solution: Go to your Xcode -&gt; Preferences (or Settings) and under the Locations tab, select your Xcode version (the figure shows 14.0.1 - yours should match your Xcode version) in the dropdown menu for Command Line Tools.</p> <p></p>"},{"location":"troubleshoot/builderror/#device-management-could-not-launch-loop","title":"Device Management Could Not Launch Loop","text":"<p>Error message: \"Could not launch \"Loop\". Verify the Developer App certificate for your account is trusted on your device. Open Settings and navigate to General -&gt; Device Management, then select your Developer App certificate to trust it.\"</p> <p></p> <p>New Solution First try the Unpair and Reboot process above. If that doesn't work, then try the solution listed below.</p> <p>Solution: If you get this message and are unable to find the Device Management option in your phone settings, then we need to do a little extra step to clear out some old info.</p> <ol> <li>Plug the phone into the computer and open Xcode</li> <li>Click the \"Window\" menu item in Xcode and then choose \"Devices and Simulators\"</li> <li>Right click your phone on the left and pick \"Show Provisioning Profiles\"</li> <li>Delete all of the items in the list that have Loop in the name</li> <li>Go to your four signing targets and change the signing team back to \"None\" for a quick bit, and then change back to your regular signing team name again.</li> <li>Rebuild Loop</li> </ol> <p>That should clear the out, problematic profiles and allow a successful build.</p> <p>If your problem persists after that, then you might need to do total reset of your phone to clear out the pesky problem. Before you do this, you may want to Post for Help to make sure it is really necessary:</p> <ol> <li>Wipe the iPhone clean and set it up as a new device<ul> <li>FIRST - write down or screenshot all your settings</li> <li>Pod users - you will have to start a fresh pod after this</li> <li>If you want your old pod to continue giving you basal rate, don't replace the pod before wiping your phone.  Once the phone is reset and a new Loop app is added, you must start a new pod.  The old pod should have the sound connection broken before being discarded because you won't be able to deactivate the pod.</li> </ul> </li> <li>Delete all certificates from your Developer account (you'll need to login to your Developer account to do that)</li> <li>Delete your old Loop code download and get a new one.</li> <li>Rebuild Loop on the phone with the new download of Loop code.</li> <li>Start a new pod with the new Loop app on the reset phone.</li> </ol>"},{"location":"troubleshoot/builderror/#pending-certificate-request","title":"Pending Certificate Request","text":"<p>Error message: \"You already have a current iOS Development certificate or a pending certificate request.\"</p> <p></p> <p>Solution: This error message has recently started to appear for some new Loop builders. To resolve the issue, please log in to your Developer account at developer.apple.com and then click on \"Certificates, Identifiers &amp; Profiles\".  Under that screen, you will see \"Development\" under the \"Certificates\" section in the column on the left.  You will need to click on the certificates, and choose \"revoke\" from the options that show after you click on the certificate. Confirm the warning message that will appear asking \"Do you want to revoke the certificate?\"</p> <p></p> <p>After you do that, return to Xcode and open up Xcode -&gt; Preferences (or Settings) and choose the Accounts tab. Highlight your Apple ID and click on the minus sign to delete your Apple ID.</p> <p></p> <p>Re-enter your Apple ID (yes...add that account right back that you literally just deleted), return to your Loop's target signing areas in Xcode and your error message should have resolved as a new certificate will have been issued and a provisioning profile should have been created automatically.</p> <p>You can verify the iOS development certificates are working by clicking on \"Manage Certificates\" in Xcode -&gt; Preferences (or Settings), Accounts tab and viewing the iOS Development Certificates.  You should have one for your account that has a clean status similar to the screenshot below.</p> <p></p>"},{"location":"troubleshoot/builderror/#command-codesign-failed","title":"Command CodeSign Failed","text":"<p>Error message: \"errSecInternalComponent,  Command CodeSign failed with a nonzero exit code\"</p> <p></p> <p>Solution:  This error message is likely due to inadvertently saying \"no\" to allowing Keychain Access or changing your computer or AppleID password. Regardless, the solution is as follows:</p> <ol> <li>Close Xcode</li> <li>Open your Keychain Access application (found in Applications within the Utilities folder)</li> <li>In the upper left corner of keychain access, make sure you have the keychain <code>login</code> highlighted and then right-click the lock next to the <code>login</code>.  Click the lock closed, and then click the lock to open it again. You will be prompted for a password.  Enter your computer admin password.  Close Keychain Access app.</li> </ol> <p></p> <ol> <li>Open your Loop project again in Xcode.</li> <li>In the main Xcode menu (grey menu bar at the very top of your Apple display area), select <code>Product</code> and then select the option for <code>Clean</code>. (Keyboard shortcut is shift-command-k)</li> <li>Now try rebuilding your Loop app.  If you ever get prompted again to allow Xcode access to Keychain, make sure to click on the option to Always Allow.</li> </ol>"},{"location":"troubleshoot/builderror/#unrecognized-arguments","title":"Unrecognized Arguments","text":"<p>Error message: \"Unrecognized arguments: --cache-builds\"</p> <p></p> <p></p> <p>Solution: This is a homebrew / carthage error, so I don't think you'll see this. If you do, download a fresh copy of Loop code and try again. If it repeats, it is time to request assistance. Please read Posting for Help.</p>"},{"location":"troubleshoot/builderror/#abort-with-payload","title":"Abort with Payload","text":"<p>Error message: \"Abort with payload\"  Your app will only open briefly with a white screen and then close, if you build with this error.</p> <p></p> <p>Solution: This error message is caused by having the Loop download folder in an iCloud mapped drive when doing the zip download.  Move your Loop download folder back to the Downloads folder, then rebuild. LoopWorkspace builds with Xcode 13 appear to work fine with an iCloud drive.  You may run into the spaces in your path name problem - which has a different solution.</p>"},{"location":"troubleshoot/builderror/#apple-watch-issues","title":"Apple Watch Issues","text":""},{"location":"troubleshoot/builderror/#apple-watch-loop-app-not-appearing","title":"Apple Watch: Loop App Not Appearing","text":"<p>Error: Apple watch app is not appearing.</p> <p>Solution: This error usually appears because you have not updated the watchOS prior to building Loop, or you didn't have your Apple watch paired at the time of building Loop.</p> <p>Don't forget to open the iPhone's Watch app, select My Watch tab on the bottom left, scroll all the way down, and click <code>Install</code> for the Loop app listed at the very bottom under \"available apps\".</p>"},{"location":"troubleshoot/builderror/#apple-watch-loop-app-not-installing","title":"Apple Watch: Loop App Not Installing","text":"<p>Before trying this solution, see if the Unpair and Reboot procedure works.</p> <p>Error: The Loop app appears on the list of apps available to install on the watch, but when you press \"install\", and it goes through the animation of filling in the circle while it's installing, but then at the end it just toggles back to saying \"INSTALL\".</p> <p>Solution:  Plug your iPhone into the computer and start Xcode.  On your watch, look for a prompt that says \"Trust this computer\".  Scroll down on the watch face and select the \"Trust\" button. In Xcode, go to the top menu bar and select \"Clean Build Folder\" from the Product menu option, and then rebuild your Loop app.</p> <p>If the watch app still fails to install properly, the next section should work.</p>"},{"location":"troubleshoot/builderror/#apple-watch-loop-app-not-running-on-watch","title":"Apple Watch: Loop App Not Running on Watch","text":"<p>Error: Tapping the Loop app icon on the watch results in flash of the watch screen and then return to the Loop app icon or a brief display of the watch interface and then return to the Loop app icon.</p> <p>Solution: Plug in your iPhone, with the watch already paired, into the computer and start Xcode with your current build folder.  In Xcode, from the list of schemes where you normally choose Loop (Workspace), choose the WatchApp scheme (near the bottom of the list) and then select your watch (not a simulator) from the device list, see the graphics below. Press the play button to build and deploy the WatchApp directly to your watch. It will launch correctly and will not crash when you subsequently launch it from the complication or your watch Home Screen..</p> <p></p> <p></p> <p>Warning: Make sure your watchOS is up to date with respect to your phone iOS. If not, you may need to update to be successful. On pressing clicking build/play, some people report receiving an error stating \u201ciPhone/Apple Watch are ineligible because the OS on the watch doesn\u2019t support WatchKit App Products\u201d or similar wording. This is a known issue with some Mac USB ports. Fixes in preference order are: 1) swap which USB port is in use;  2) unplug and replug the USB cable from both the iPhone and Mac; or 3) as a last resort, reboot the iPhone and Mac.</p> <p>Don't forget to select Loop(Workspace) after building to the watch before trying to build to a phone.</p>"}]}